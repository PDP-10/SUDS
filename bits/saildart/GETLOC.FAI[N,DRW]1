;GETLOC -- READS A LOC FOR EITHER A DIP OR A CONNECTOR PIN
; for AUGU1 boards

;CALL IS:
;	PUSHJ P,GETLOC
;	JRST ERROR
;MDPC,<	JRST CRLF.ONLY >
;	JRST GOT.CONNECTOR.IN.TT
;	(DIP LOC IN TT)

GETLOC:
^LOCAU1:
;SHOULD PRINT A CUE MESAGE HERE
GTLOC2:
	MOVSI NUMREG,400000
	IORM NUMREG,(P)		;sleazy hack to find spare flag
				; bit on top of stack
				; set flag that we haven't seen a "J"
	GETCH

MDPC,<	CAIN CHRREG,12
	JRST CPOPJ1
>;MDPC
	CAIN CHRREG,"J"
	JRST [	ANDCAM NUMREG,(P)	; clear flag in LHS of top of stack temp
					; we know now we have seen a "J"
		GETCH
		JRST GTLOC3 ]
RETJP4:
GTLOC3:	

	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPN TT,L2N-"A"(CHRREG)	; get the integer to TT
	POPJ P,				; unless illegal or missing!
	GETCH

	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	JRST	GETCON
	SKIPN CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	LSH TT,6
	TRO TT,(CHRREG)
	HRLM TT,(P)
	GETNUM
	JUMPLE NUMREG,CPOPJ
	CAILE NUMREG,=99
	POPJ P,
	HLRZ TT,(P)
	LSH TT,6
	TRO TT,(NUMREG)
MDPC,<	AOS (P) >
	JRST CPOPJ2

GETCON:
GCNXIT:	LSH TT,6
	IOR	TT,L2N+"J"-"A"
	LSH TT,6
MDPC,<	AOS (P) >
	JRST CPOPJ1
;GETLOC -- READS A LOC FOR EITHER A DIP OR A CONNECTOR PIN
; for AUGU6 boards

;CALL IS:
;	PUSHJ P,GETLOC
;	JRST ERROR
;MDPC,<	JRST CRLF.ONLY >
;	JRST GOT.CONNECTOR.IN.TT
;	(DIP LOC IN TT)

^LOCAU6:
GETLOC:
;SHOULD PRINT A CUE MESAGE HERE
GTLOC2:
	MOVSI NUMREG,400000
	IORM NUMREG,(P)		;sleazy hack to find spare flag
				; bit on top of stack
				; set flag that we haven't seen a "J"
	GETCH

MDPC,<	CAIN CHRREG,12
	JRST CPOPJ1
>;MDPC
	CAIN CHRREG,"J"
	JRST [	ANDCAM NUMREG,(P)	; clear flag in LHS of top of stack temp
					; we know now we have seen a "J"
		GETCH
		JRST GTLOC3 ]
GTLOC3:	
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPN TT,L2N-"A"(CHRREG)	; get the integer to TT
	POPJ P,				; unless illegal or missing!
	PUSH P,TT
	GETNUM
	POP P,TT
	JUMPN NUMREG,GETCON
	SKIPL (P)
	POPJ P,
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ	P,
	SKIPN CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	LSH TT,6
	TRO TT,(CHRREG)
	HRLM TT,(P)
	GETNUM
	JUMPLE NUMREG,CPOPJ
	CAILE NUMREG,=99
	POPJ P,
	HLRZ TT,(P)
	LSH TT,6
	TRO TT,(NUMREG)
MDPC,<	AOS (P) >
	JRST CPOPJ2

GETCON:
JP7U6:
	CAILE NUMREG,2
	POPJ P,
	LSH TT,1
	ADDI TT,-1(NUMREG)
GCNXIT:	LSH TT,6
	IOR	TT,L2N+"J"-"A"
	LSH TT,6
MDPC,<	AOS (P) >
	JRST CPOPJ1
;GETLOC -- READS A LOC FOR EITHER A DIP OR A CONNECTOR PIN
; for AUGHEX boards

;CALL IS:
;	PUSHJ P,GETLOC
;	JRST ERROR
;MDPC,<	JRST CRLF.ONLY >
;	JRST GOT.CONNECTOR.IN.TT
;	(DIP LOC IN TT)

^LOCAUX
GETLOC:
;SHOULD PRINT A CUE MESAGE HERE
GTLOC2:
	GETCH

MDPC,<	CAIN CHRREG,12
	JRST CPOPJ1
>;MDPC
GTLOC3:	

	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPN TT,L2N-"A"(CHRREG)	; get the integer to TT
	POPJ P,				; unless illegal or missing!
	PUSH P,TT
	GETNUM
	POP P,TT
	JUMPN NUMREG,GETCON
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ	P,
	SKIPN CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	LSH TT,6
	TRO TT,(CHRREG)
	HRLM TT,(P)
	GETNUM
	JUMPLE NUMREG,CPOPJ
	CAILE NUMREG,=99
	POPJ P,
	HLRZ TT,(P)
	LSH TT,6
	TRO TT,(NUMREG)
MDPC,<	AOS (P) >
	JRST CPOPJ2

GETCON:
	CAMN TT,L2N+"J"-"A"
	CAIL NUMREG,40
	POPJ P,
	MOVEI TT,40(NUMREG)
GCNXIT:	LSH TT,6
	LSH TT,6
MDPC,<	AOS (P) >
	JRST CPOPJ1
;GETLOC -- READS A LOC FOR EITHER A DIP OR A CONNECTOR PIN
; for AUGCMU boards

;CALL IS:
;	PUSHJ P,GETLOC
;	JRST ERROR
;MDPC,<	JRST CRLF.ONLY >
;	JRST GOT.CONNECTOR.IN.TT
;	(DIP LOC IN TT)

^LOCAUC:
GETLOC:
;SHOULD PRINT A CUE MESAGE HERE
GTLOC2:
	MOVSI NUMREG,400000
	IORM NUMREG,(P)		;sleazy hack to find spare flag
				; bit on top of stack
				; set flag that we haven't seen a "J"
	GETCH

MDPC,<	CAIN CHRREG,12
	JRST CPOPJ1
>;MDPC
	CAIN CHRREG,"J"
	JRST [	ANDCAM NUMREG,(P)	; clear flag in LHS of top of stack temp
					; we know now we have seen a "J"
		GETCH
		JRST GTLOC3 ]
GTLOC3:	
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPN TT,L2N-"A"(CHRREG)	; get the integer to TT
	POPJ P,				; unless illegal or missing!
	PUSH P,TT
	GETNUM
	POP P,TT
	JUMPN NUMREG,GETCON
	SKIPL (P)
	POPJ P,
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ	P,
	SKIPN CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	LSH TT,6
	TRO TT,(CHRREG)
	HRLM TT,(P)
	GETNUM
	JUMPLE NUMREG,CPOPJ
	CAILE NUMREG,=99
	POPJ P,
	HLRZ TT,(P)
	LSH TT,6
	TRO TT,(NUMREG)
MDPC,<	AOS (P) >
	JRST CPOPJ2

GETCON:
	CAILE NUMREG,2
	POPJ P,
	LSH TT,1
	ADDI TT,-1(NUMREG)
GCNXIT:	LSH TT,6
	IOR	TT,L2N+"J"-"A"
	LSH TT,6
MDPC,<	AOS (P) >
	JRST CPOPJ1
