COMMENT    VALID 00014 PAGES
C REC  PAGE   DESCRIPTION
C00001 00001
C00003 00002	CARD DEF -- FOONLY BOARD
C00008 00003	CLEAR CENTRAL PLANE GROUNDS FROM TABLE IF COVERED BY 24 PIN DIP
C00009 00004	PUT GROUNDS IN FRONT OF FILE
C00013 00005	PUT OUT GROUNDED CONNECTOR PINS TO WAGNER
C00015 00006	TABLES FOR DIPS
C00016 00007	GROUND TABLES
C00018 00008	MORE GROUND TABLES
C00019 00009	CARD DEF -- 2 HIGH DEC WIRE WRAP BOARD
C00025 00010	DISTANCE CALCULATOR FOR ROUTER STUFF
C00028 00011	FIND POWER AND GROUND PINS
C00030 00012	^GNDCLR:OUTSTR[ASCIZ/YOU CAN'T PUT 24 PIN DIPS ON DEC CARDS!
C00034 00013	TABLES
C00036 00014	GROUND AND POWER PINS
C00039 ENDMK
C;
WW,<
BEGIN WW
SUBTTL	CARD DEF -- FOONLY BOARD
IFN 0,<		;THIS NO LONGER WORKS, LOTS OF NEW STUFF MISSING
WWOR(<FOONLY>),<

^^WIRGND:	0		;WIRE GROUNDS FLAG (DEFAULT OFF, WILL USE GROUND TABS)

^MAPIT:	JUMPL A,CONMAP
	LDB T,[POINT 6,A,23]
	LDB TT,[POINT 12,A,35]
	JUMPE TT,CPOPJ
	CAIG T,=16
	CAILE TT,8
	POPJ P,
	SUBI T,1
	MOVE TTT,T
	IMULI T,=600
	LSH TTT,-2		;WHAT GROUP OF 4 IS IT IN?
	IMULI TTT,=200		;EXTRA 200 MILS OF SEPARATION BETWEEN GROUPS
	ADD T,TTT		;SUM IS Y POS (ALMOST)
	ADDI T,=100		;BUT SOME PINS ARE 100 MILS ABOVE THAT
	IMULI TT,=1100		;EXTRA 1 ACCOUNTS FOR MARGIN BEING A DIP WIDTH AWAY
	HRL T,TT		;GET X,Y INTO T
	LDB TT,[POINT 6,A,17]	;NOW PICK UP PIN #
	JUMPE TT,CPOPJ
	CAMLE TT,B		;LEGAL PIN?
	POPJ P,
	CAIN B,=14		;WE KNOW WHICH WAY 14 PIN DIPS GO IN!
	CAIG TT,7		;WHICH MEANS PIN #'S GREATER THAN 7 ADD 2
	CAIA			;NO
	ADDI TT,2		;YES, FUDGE PIN # BY 2
	CAIN B,=24		;24 PIN DIPS USE TABLE FOLLOWING 16 PIN DIP TABLE
	ADDI TT,=16
	ADD T,DIPTAB-1(TT)	;ADD EXTRA X,Y FOR PIN!
	MOVE TT,BITTAB-1(TT)	;AND BITS INTO TT
	JRST CPOPJ1		;FINIS

CONMAP:	LDB T,[POINT 6,A,35]
	CAIG T,2
	SKIPG T
	POPJ P,			;ILL SIDE
	CAIN T,2		;SIDE 1 OR 2?
	TDZA TT,TT
	SKIPA TT,[=300]		;SIDE 1 IS 300 MILS FURTHUR RIGHT (LEFT?)
	SKIPA T,[=100]		;SIDE 2 IS 100 MILS LOWER THAN 1
	SETZ T,
	LDB TTT,[POINT 6,A,23]	;GET PADDLE
	JUMPE TTT,CPOPJ
	CAILE TTT,6
	POPJ P,			;ILL PADDLE
	HRL T,TT
	ADD T,CONTAB-1(TTT)	;X,Y OF TOP OF PADDLE
	LDB TT,[POINT 6,A,29]
	CAILE TT,=18
	POPJ P,
	SUBI TT,1
	IDIVI TT,6
	IMULI TT,=800
	ADD T,TT
	IMULI TTT,=100
	ADD T,TTT
^VGCON:	HRRZ TT,A		;CLEAR BITS IN LEFT HALF
	MOVSI TTT,-CONLEN
CBITS1:	CAME TT,CONGND(TTT)
	AOBJN TTT,.-1
	JUMPL TTT,[MOVSI TT,GND
		JRST CPOPJ1]
	MOVSI TTT,-VCCLEN
CBITS2:	CAME TT,VCCGND(TTT)
	AOBJN TTT,.-1
	SKIPL TTT
	TDZA TT,TT
	MOVSI TT,PWR
	JRST CPOPJ1
;CLEAR CENTRAL PLANE GROUNDS FROM TABLE IF COVERED BY 24 PIN DIP
^GNDCLR:LDB T,[POINT 6,A,23]
	LDB TT,[POINT 12,A,35]
	JUMPE T,ILL24
	JUMPE TT,ILL24
	CAIG T,=16
	CAILE TT,7
	JRST ILL24
	TRNN T,3		;THESE BITS OFF IS ILLEGAL FOR NOW!
	JRST [ILL24:OUTSTR[ASCIZ/YOU CAN'T PUT A 24 PIN DIP AT /]
		OUTCHR N2L(T)
		MOVE T,TT
		PUSHJ P,NUMPNT
		OUTSTR[ASCIZ/!
/]
		POPJ P,]
	SUBI T,1
	SUBI TT,1
	IMULI T,9
	ADD T,TT
	IMULI T,4
	SETZM GNDTAB(T)
	SETZM GNDTAB+1(T)
	SETZM GNDTAB+2(T)
	SETZM GNDTAB+3(T)
	POPJ P,
;PUT GROUNDS IN FRONT OF FILE
^GNDOUT:
;Grounds in middle of board
	MOVSI A,-=16*9*4
	MOVEI B,5
GNDLOP:	SKIPN GNDTAB(A)
	JRST NOGNDP
	SOJLE B,[PUTSTR[ASCIZ/
/]
		MOVEI B,4
		JRST GNDLP1]
	CAIE B,4
	PUTBYT 11
GNDLP1:	HRRZ T,A
	IDIVI T,4*9
	IDIVI TT,4
	MOVE T,N2L+1(T)
	PUSH P,TTT
	PUSH P,TT
	PUTBYT (T)
	POP P,T
	ADDI T,1
	PUSHJ P,DECOUT
	PUTSTR[ASCIZ/(G/]
	POP P,T
	ADDI T,1
	PUSHJ P,DECOUT
	PUTSTR[ASCIZ/)	/]
	HLRE T,GNDTAB(A)
	PUSHJ P,MILOUT
	PUTBYT ","
	HRRE T,GNDTAB(A)
	PUSHJ P,MILOUT
NOGNDP:	AOBJN A,GNDLOP
	PUTSTR[ASCIZ/

/]
;Vertical column of grounds near back panel
	MOVSI A,-4
V0LOP:	MOVSI B,-4
V0LOP1:	MOVSI C,-3
V0LOP2:	HRRZ T,A
	IMULI T,4
	ADDI T,(B)
	MOVE T,N2L+1(T)
	PUTBYT (T)
	PUTSTR[ASCIZ/0(G/]
	MOVEI T,1(C)
	PUSHJ P,DECOUT
	PUTSTR[ASCIZ/)	0.600,/]
	HRRZ T,B
	IMULI T,3
	ADDI T,(C)
	IMULI T,=200
	ADD T,CONTAB(A)
	HRRE T,T
	PUSHJ P,MILOUT
	PUTSTR[ASCIZ/
/]
	AOBJN C,V0LOP2
	AOBJN B,V0LOP1
	AOBJN A,V0LOP
	PUTSTR[ASCIZ/
/]
;Connector edge grounds (named)
	MOVSI B,-CONLEN
CGLOP:	LDB T,[POINT 6,CONGND(B),23]
	PUTBYT @N2L(T)
	PUTBYT "("
	LDB T,[POINT 6,CONGND(B),29]
	PUTBYT @N2L(T)
	LDB T,[POINT 6,CONGND(B),35]
	PUSHJ P,DECOUT
	PUTSTR[ASCIZ/)	/]
	MOVE A,CONGND(B)
	PUSHJ P,CONMAP
	OUTSTR[ASCIZ/SOMETHING IS ROTTEN IN DENMARK!
/]
	PUSH P,T
	HLRE T,T
	PUSHJ P,MILOUT
	PUTBYT ","
	POP P,T
	HRRE T,T
	PUSHJ P,MILOUT
	PUTSTR[ASCIZ/
/]
	AOBJN B,CGLOP
	PUTSTR[ASCIZ/
/]
;Grounds at connector edges without names
	MOVSI A,-6
CGTLOP:	MOVSI B,-6
CGTLP1:	PUTBYT @N2L+1(A)
	PUTSTR[ASCIZ/(G/]
	MOVEI T,1(B)
	PUSHJ P,DECOUT
	PUTSTR[ASCIZ/)	/]
	MOVE T,CONTAB(A)
	ADD T,CGTAB(B)
	PUSH P,T
	HLRE T,T
	PUSHJ P,MILOUT
	PUTBYT ","
	POP P,T
	HRRE T,T
	PUSHJ P,MILOUT
	PUTSTR[ASCIZ/
/]
	AOBJN B,CGTLP1
	AOBJN A,CGTLOP
;One dip of grounds at back strap
	PUTSTR[ASCIZ/H(G1)	11.000,4.700
H(G2)	11.000,4.800
H(G3)	11.000,4.900
H(G4)	11.000,5.000
H(G5)	11.000,5.100
H(G6)	11.000,5.200
/]
	PUTSTR[BYTE(7)15,14]
	POPJ P,

^VCCOUT:PUTSTR[BYTE(7)15,14]		;NO SPECIAL VCC PINS FOR NEW YET
	POPJ P,
;PUT OUT GROUNDED CONNECTOR PINS TO WAGNER
^WAGGND:MOVSI B,-CONLEN
WGLOP:	PUTSTR[ASCIZ/777777000000000000/];CPIN ID OF -1, NO FILE NAME
	LDB TTT,[POINT 6,CONGND(B),23]
	IMULI TTT,=100
	LDB T,[POINT 7,CONGND(B),30]
	LDB TT,[POINT 1,CONGND(B),35]
	SUB T,TT
	ADD T,TTT
	PUSHJ P,DECOUT			;GARAUNTEED TO BE EXACTLY 3 DIGITS
	PUTSTR[ASCIZ/    3/]		;MARK AS GROUND
	PUSHJ P,F4CRLF
	AOBJN B,WGLOP
	MOVSI B,-VCCLEN
VCCLOP:	PUTSTR[ASCIZ/777777000000000000/];CPIN ID OF -1, NO FILE NAME
	LDB TTT,[POINT 6,VCCGND(B),23]
	IMULI TTT,=100
	LDB T,[POINT 7,VCCGND(B),30]
	LDB TT,[POINT 1,VCCGND(B),35]
	SUB T,TT
	ADD T,TTT
	PUSHJ P,DECOUT			;GARAUNTEED TO BE EXACTLY 3 DIGITS
	PUTSTR[ASCIZ/    2/]		;MARK AS VCC
	PUSHJ P,F4CRLF
	AOBJN B,VCCLOP
	POPJ P,
;TABLES FOR DIPS

RADIX =10

DIPTAB:
FOR I_0,7
<	=100*I,,0
>
FOR I_7,0,-1
<	=100*I,,=300
>
FOR I_0,11
<	=100*I,,0
>
FOR I_11,0,-1
<	=100*I,,=600
>

BITTAB:
REPEAT 7,<0>
	GND,,0
REPEAT 7,<0>
	PWR,,0
REPEAT 24,<0>

CONTAB:	0	;"A"
	2700	;"B"
	5200	;"C"
	7900	;"D"
	11000,,2300	;"E"
	11000,,5500	;"F"
;GROUND TABLES
GNDTAB:	BLOCK 16*9*4

FOR A_0,8
<;4 HIGH
FOR B_0,3
<;9 WIDE
FOR C_0,3
<;4 HIGH
	RELOC GNDTAB+4*(A+9*(C+4*B))
	A*1100+900,,B*2600+C*600+200
	RELOC

	RELOC GNDTAB+4*(A+9*(C+4*B))+1
	A*1100+900,,B*2600+C*600+300
	RELOC
>;END C
FOR C_0,2
<;3 HIGH
	RELOC GNDTAB+4*(A+9*(C+4*B))+2
	A*1100+900,,B*2600+C*600+500
	RELOC

	RELOC GNDTAB+4*(A+9*(C+4*B))+3
	A*1100+900,,B*2600+C*600+600
	RELOC
>;END C
>;END B
>;END A

FOR A_1,7
<
FOR B_0,2
<
FOR C_3,3
<
	RELOC GNDTAB+4*(A+9*(C+4*B))+2
	A*1100+900,,B*2600+C*600+500+100
	RELOC

	RELOC GNDTAB+4*(A+9*(C+4*B))+3
	A*1100+900,,B*2600+C*600+600+100
	RELOC
>;END C
>;END B
>;END A
;MORE GROUND TABLES

DEFINE UDEC(L)
<IFL L-"G"<L;>IFL L-"I"<L-1;>IFL L-"O"<L-2;>IFL L-"Q"<L-3;>L-4>

DEFINE CG(PP,P,S)
<
LL__"P"
LL__UDEC(LL)
	BYTE(6)0,0,0,PP,LL-64,S
>

CONGND:	
FOR A_1,4
<
	CG(A,B,1)
	CG(A,F,1)
	CG(A,L,1)
	CG(A,R,1)
	CG(A,U,1)
>
	CG(1,U,2)
	CG(2,B,2)
	CG(3,U,2)
	CG(4,B,2)
FOR AA_5,6
<
	CG(AA,A,1)
	CG(AA,P,1)
	CG(AA,F,2)
	CG(AA,V,2)
>
CONLEN__.-CONGND

CGTAB:	0,,0
	300,,600
	0,,800
	300,1400
	0,,1600
	300,2200

VCCGND:	CG(1,V,1)
	CG(1,V,2)
	CG(2,A,1)
	CG(2,A,2)
	CG(3,V,1)
	CG(3,V,2)
	CG(4,A,1)
	CG(4,A,2)
VCCLEN__.-VCCGND

RADIX 8
>;WWOR(<FOONLY>)
>;IFN 0
SUBTTL	CARD DEF -- 2/4 HIGH DEC WIRE WRAP BOARDS # 940,941,942,943
WWOR(<DEC940,DEC941,DEC942,DEC943>),<

DEFINE QUAD,<WWOR(<DEC940,DEC942>)>	;THESE ARE THE QUAD BOARDS

^^WIRGND:	-1		;DEFAULT WIRE GROUNDS FOR DEC BOARDS

^^LNGRID:	0		;-1 ENABLES LETTER NUMBER GRID
				;GRID IS A1 NEAR TOP HANDLE (E5)
				;AND E1 NEAR BOTTOM HANDLE (E25)
	
NUMCOLS__5
NUMROWS__5
NUMPADS__2

QUAD,<
NUMROWS__=10			;10 ROWS
NUMPADS__4			;AND 4 PADS!!
>;QUAD

^NCOLS:	NUMCOLS
^NROWS:	NUMROWS
^NPADS:	NUMPADS
^UMLCOL:	NUMCOLS		;# OF CHIPS ACROSS THE PAGE IN A .UML FILE
^PADLET:	XWD -=18,1	;# OF PIN LETTERS PER PAD
^PADPIN:	XWD -2,1	;# OF PINS PER PIN LETTER
^FRACTN:	=8		;FRACTION OF INCHES RESOLUTION
NOCMU,<	^PFRACT:	=8 >	;FRACTION OF INCHES PRINTED
CMU,<	^PFRACT:	=1000 >	;FRACTION OF INCHES PRINTED
^WRAPMG:	=200*2	;.2" INSULATION AROUND EACH PIN
^BARELN:	0	;DON'T INCLUDE BARE WIRE IN WIRE LENGTHS

CONOFF__=57*=125
XFDG__=250			;SHIFT BY 1/4"
YFDG__=21*=125			;SHIFT BY 2 5/8"
QUAD,<	YFDG2__<2*4+3>*2 >		;2.75" BETWEEN PADDLES, 2 PADDLES
	
^MAPRC:	SKIPE LNGRID		;IF LNGRID SET,
	JRST [	TDNE T,[777700,,770000]
		POPJ P,
		HLRZ TT,T	;THEN RC IS LN
		MOVNI T,-NUMCOLS-1(T)	;REVERSE COLUMNS
		DPB TT,[POINT 24,T,23]
		JRST CPOPJ1]

	HLRZ TT,T
	CAMLE TT,NROWS
	POPJ P,
	HRRZ T,T
	CAMLE T,NCOLS
	POPJ P,
	IMULI TT,NUMCOLS
	ADDI T,L2NI.E*10000-NUMCOLS(TT)
	JRST CPOPJ1

MAPIT:	JUMPL A,CONMAP		;IS IT A CONNECTOR PIN?
	LDB T,[POINT 6,A,23]	;GET LOC LETTER
	LDB TT,[POINT 12,A,35]	;GET LOC NUMBER
	JUMPE TT,CPOPJ		;0 IS A NO,NO
	SKIPE LNGRID		;LETTER NUMBER GRID?
	JRST LNGMAP		;YES, DIFFERENT MAPPING
	CAIN T,L2NI.E		;IT'S GOT TO BE AN "E" OR ITS WRONG
LNGMPD:	CAILE TT,NUMCOLS*NUMROWS	;THATS TOO BIG
	POPJ P,
	MOVE T,DIPLOC-1(TT)	;PUT XY IN T
	LDB TT,[POINT 6,A,17]	;GET THE PIN #
	TLNE A,MAPPWR!MAPGND	;POWER OR GROUND PIN?
	JRST PINPGP
	CAIN B,=14		;I KNOW WHICH WAY 14 PIN DIPS GO IN TOO!
	CAIG TT,7		;WHICH MEANS PIN #'S GREATER THAN 7 ADD 2
	JRST MAPIT0		;NO
	ADDI TT,2		;YES, FUDGE PIN # BY 2
IFN 0,<	;RPH: I DON'T THINK YOU WANT THIS -- WLROUT MANAGES ANYHOW
	;AND IT FOWLS UP GUYS WHO HAVE L1416 OR NOTHING!!!!!!!!
	ADD A,[2,,0]		;ALSO RETURN CORRECTED PIN # FOR DSTCLC
	TLO A,PLUS2		;AND INDICATE IT IS A PLUS 2 VERSION
>;IFN 0
MAPIT0:	ADD T,PINTAB-1(TT)	;ADD EXTRA XY FOR PIN
	MOVE TTT,DETAB-1(TT)	;GET DISTANCE TO END OF DIP PATTERN (SHORTEST)
	SETZ TT,		;NO AUTOMATIC GND OR PWR
	JRST CPOPJ1		;I THINK I'VE GOT IT WATSON

LNGMAP:	CAILE T,NUMROWS
	POPJ P,
	IMULI T,NUMCOLS
	SUBI T,-1(TT)
	MOVE TT,T
	JRST LNGMPD

PINPGP:	TLNE A,77		;THIS SHOULD BE CLEAR
	POPJ P,
	ADD T,[=8*=125,,0]	;BOTH GET THIS
	TLNN A,MAPPWR		;POWER?
	JRST [	MOVSI TT,GND	;NO, RETURN GND BIT
		SETZ TTT,	;AT END
		JRST CPOPJ1]
	ADDI T,6*=125		;YES, IT IS UP THIS MUCH
	MOVSI TT,PWR
	SETZ TTT,
	JRST CPOPJ1

CONMAP:	LDB T,[POINT 6,A,29]	;GET PIN LETTER
	MOVEM T,LETTER#
	CAILE T,=18		;LEGAL?
	POPJ P,
	SUBI T,1		;NORMALIZE TO 0
	IMULI T,=125		;GENERATE Y POSITION
	LDB TT,[POINT 6,A,23]	;GET PADDLE
	JUMPLE TT,CPOPJ
	CAILE TT,NUMPADS
	POPJ P,
	TRNN TT,1		;PADDLE B OR D?
	ADDI T,YFDG		;YES, ADD CONNECTOR FUDGE FACTOR FOR C
QUAD,<	CAILE TT,2		;PADDLE C OR D?
	ADDI T,YFDG2*=125	;YES, ADD ANOTHER FACTOR
>;QUAD
	LDB TT,[POINT 6,A,35]	;GET SIDE
	MOVEM TT,SIDE#
	SOJL TT,CPOPJ		;FUDGE IT AND CHECK FOR LEGAL
	CAILE TT,1		;TOO BIG?
	POPJ P,
	LSH TT,1
	LDB TTT,[POINT 1,A,29]	;EVEN OR ODD CONNECTOR PIN
	TRC TTT,1
	IOR TT,TTT
	IMULI TT,XFDG
	ADDI TT,CONOFF
	HRL T,TT
	MOVE TT,LETTER
	LSH TT,2
	IOR TT,SIDE
VGCON1:	CAIN TT,<1*4>+2
	MOVSI TT,PWR
	CAIE TT,<3*4>+2
	CAIN TT,<=16*4>+1
	MOVSI TT,GND
	SETZ TTT,		;NO SHORTEST DISTANCE TO END OF DIP!
	JRST CPOPJ1

^VGCON:	LDB TT,[POINT 8,A,31]
	TRO TT,1
	TRNE A,2
	ADDI TT,1
	JRST VGCON1
;DISTANCE CALCULATOR FOR ROUTER STUFF
;CALLS WITH ONE PIN IN A,B OTHER IN C,D RETURNS DISTANCE IN G

^DSTCLC:PUSHJ P,PINMAP		;MAP ONE OF THEM
	JRST DSTERR
	HRLM A,(P)
	MOVE A,C		;MOVE IN OTHER POINT
	MOVE B,D
	MOVE C,T		;SAVE X,Y
	MOVE D,TTT		;AND DIST
	PUSHJ P,PINMAP
	JRST DSTERR
	CAMLE TTT,D
	SKIPA G,D
	MOVE G,TTT
	ASH G,1			;DOUBLE IT (MUST GO TO END AND BACK!)
	HLRE TT,T
	HLRE TTT,C
	SUB TT,TTT
	MOVM TT,TT
	HRRE T,T
	HRRE C,C
	SUB T,C
	MOVM T,T		;THIS IS Y PART
	JUMPE G,DSTCLX
	CAIG T,=250		;IF BIGGER THAN THIS, THEN MIGHT NEED FUDGE
	JRST DSTCLX
	LDB C,[POINT 12,(P),17]
	LDB D,[POINT 6,A,29]
	SUB C,D
	IDIVI C,5
	JUMPN D,DSTCLX		;IF REMAINDER, THEN DIF COLUMNS, AND NO FUDGE
	ADD T,G			;SAME COLUMN, BUT NOT CLOSE ENOUGH, FUDGE AROUND END OF DIP
DSTCLX:	ADD T,TT		;ADD IN X PART
	CAILE T,=8000		;LONGER THAN 8 INCHES?
	ADDI T,=250		;YES, ADD 1/4 INCH
	ADD T,BARELN		;ADD THE BARE WIRE AT EACH END, IF WANTED
	ADD T,WRAPMG		;ADD SOME INSULATION TO GO AROUND THE PINS
	IMUL T,FRACTN		;CONVERT TO INCREMENTS OF 1/FRACTN INCHES
	IDIVI T,=1000		; "		"		"
	SKIPE TT		;REMAINDER?
	SKIPE TT		;REMAINDER?
	ADDI T,1		;YES, ADD 1
	MOVE G,T
	POPJ P,

DSTERR:	SETZ G,
	POPJ P,
;FIND POWER AND GROUND PINS
^FNDPWR:	SKIPN T,PWRLVL
	JRST FGND
	CAME T,MAINV
	JRST FRANDM
FPWR:	JUMPL A,FPWRC
	TLZ A,77		;CLEAR PIN FIELD
	TLO A,MAPPWR		;AND SET MAPPWR BIT
	POPJ P,

FPWRC:	TRZ A,7777		;CLEAR THIS PART
	MOVE T,"A"-"A"+L2N
	LSH T,6
	TRO A,(T)		;SET
	TDO A,[MAPPWR,,2]
	POPJ P,

FGND:	JUMPL A,FGNDC
	TLZ A,77
	TLO A,MAPGND
	POPJ P,

FGNDC:	LDB T,[POINT 6,A,29]	;GET LETTER
	TRZ A,7777		;CLEAR THIS
	CAMG T,"K"-"A"+L2N
	JRST [	MOVE T,"C"-"A"+L2N
		LSH T,6
		TRO T,2
		JRST FGNDC1]
	MOVE T,"T"-"A"+L2N
	LSH T,6
	TRO T,1
FGNDC1:	TRO A,(T)
	TLO A,MAPGND
	POPJ P,

^PGPRNT:LDB T,[POINT 6,A,23]
	PUTBYT @N2L(T)
	JUMPL A,PGCPNT
	LDB T,[POINT 12,A,35]
	PUSHJ P,DECOUT
	PUTBYT "("
	TLNN A,MAPPWR!MAPGND
	JRST NPGPNT
	TLNN A,MAPPWR
	SKIPA T,["G"]
	MOVEI T,"V"
	PUTBYT @T
PGPN1:	PUTBYT ")"
	POPJ P,

NPGPNT:	LDB T,[POINT 6,A,17]
	TLNE A,PLUS1
	SOJA T,PGPN2
	CAIG T,7
	JRST [	PUSHJ P,DECOUT	;LESS THAN 8 AND NOT PLUS1 FORM, NO + AT ALL
		JRST PGPN1]
	TLNE A,PLUS2
	SUBI T,2
PGPN2:	PUSHJ P,DECOUT
	TLNE A,PLUS1
	PUTBYT "+"
	TLNE A,PLUS2
	PUTSTR[ASCIZ/+2/]
	JRST PGPN1

^PGPRTM:TLNE A,MAPCON!MAPPWR!MAPGND
	JRST PGPRNT
	LDB T,[POINT 6,A,23]
	PUTBYT @N2L(T)
	LDB T,[POINT 12,A,35]
	PUSHJ P,DECOUT
	PUTBYT "("
	LDB T,[POINT 6,A,17]
	PUSHJ P,DECOUT
	LDB T,[POINT 6,A,17]
	TLNE A,PLUS1
	PUTBYT "-"
	TLNE A,PLUS2
	CAIG T,7+2
	JRST PGPN1
	PUTSTR[ASCIZ/-2/]
	JRST PGPN1

PGCPNT:	PUTBYT "("
	LDB T,[POINT 6,A,29]
	PUTBYT @N2L(T)
	LDB T,[POINT 6,A,35]
	PUSHJ P,DECOUT
	JRST PGPN1
^GNDCLR:OUTSTR[ASCIZ/YOU CAN'T PUT 24 PIN DIPS ON DEC CARDS!
/]
	POPJ P,

^WAGGND:MOVSI B,-GNDLEN
WGLOP:	HLRZ TTT,GNDNAM(B)		;PICK UP SIDE NUMBER
	JUMPE TTT,WGLOP1
	PUTSTR[ASCIZ/777777000000000000/];CPIN ID OF -1, NO FILE NAME
	LDB TTT,[POINT 7,GNDNAM(B),6]	;PADDLE LETTER
	MOVE T,L2N-"A"(TTT)
	IMULI T,=100
	LDB TTT,[POINT 7,GNDNAM(B),6]
	MOVE TTT,L2N-"A"(TTT)
	LSH TTT,1
	ADD T,TTT
	HRRZ TTT,GNDNAM(B)
	ANDI TTT,1
	SUB T,TTT
	PUSHJ P,DECOUT			;GUARANTEED TO BE 3 DIGITS
	PUTSTR[ASCIZ/    3/]		;MARK AS GROUND
	PUSHJ P,F4CRLF
WGLOP1:	AOBJN B,WGLOP
	MOVSI B,-VCCLEN
VCCLOP:	HLRZ TTT,VCCNAM(B)		;PICK UP SIDE NUMBER
	JUMPE TTT,VCCLP1
	PUTSTR[ASCIZ/777777000000000000/];CPIN ID OF -1, NO FILE NAME
	LDB TTT,[POINT 7,VCCNAM(B),6]	;PADDLE LETTER
	MOVE T,L2N-"A"(TTT)
	IMULI T,=100
	LDB TTT,[POINT 7,VCCNAM(B),6]
	MOVE TTT,L2N-"A"(TTT)
	LSH TTT,1
	ADD T,TTT
	HRRZ TTT,VCCNAM(B)
	ANDI TTT,1
	SUB T,TTT
	PUSHJ P,DECOUT			;GUARANTEED TO BE EXACTLY 3 DIGITS
	PUTSTR[ASCIZ/    2/]		;MARK AS VCC
	PUSHJ P,F4CRLF
VCCLP1:	AOBJN B,VCCLOP
	POPJ P,
;FORMAT:
;	777777000000000000NNN    M
;NNN = PADDLE # * 100 + PIN * 2 - (SIDE MOD 2)
;M = 2 FOR VCC, 3 FOR GND


^GNDOUT:MOVSI A,-GNDLEN
	JRST GNDO2

GNDO0:	TRNN A,3		;MULTIPLE OF 4?
	JRST GNDO1
	PUTBYT 11
	JRST GNDO2

GNDO1:	PUTSTR[ASCIZ/
/]
GNDO2:	HLLZ T,GNDNAM(A)
	JUMPE T,[PUTBYT "E"
		MOVE T,GNDNAM(A)
		PUSHJ P,DECOUT
		PUTSTR[ASCIZ/(G)/]
		JRST GNDO3]
	LDB TTT,[POINT 7,GNDNAM(A),6]
	XCT PUTCHR
	PUTBYT "("
	LDB TTT,[POINT 7,GNDNAM(A),13]
	XCT PUTCHR
	HRRZ T,GNDNAM(A)
	PUSHJ P,DECOUT
	PUTBYT ")"
GNDO3:	PUTBYT 11
	HLRE T,GNDTAB(A)
	PUSHJ P,MILOUT
	PUTBYT ","
	HRRE T,GNDTAB(A)
	PUSHJ P,MILOUT
	AOBJN A,GNDO0
	PUTSTR[BYTE(7)15,14]
	POPJ P,

^VCCOUT:MOVSI A,-VCCLEN
	JRST VCCO2

VCCO0:	TRNN A,3		;MULTIPLE OF 4?
	JRST VCCO1
	PUTBYT 11
	JRST VCCO2

VCCO1:	PUTSTR[ASCIZ/
/]
VCCO2:	HLLZ T,VCCNAM(A)
	JUMPE T,[PUTBYT "E"
		MOVE T,VCCNAM(A)
		PUSHJ P,DECOUT
		PUTSTR[ASCIZ/(V)/]
		JRST VCCO3]
	LDB TTT,[POINT 7,VCCNAM(A),6]
	XCT PUTCHR
	PUTBYT "("
	LDB TTT,[POINT 7,VCCNAM(A),13]
	XCT PUTCHR
	HRRZ T,VCCNAM(A)
	PUSHJ P,DECOUT
	PUTBYT ")"
VCCO3:	PUTBYT 11
	HLRE T,VCCTAB(A)
	PUSHJ P,MILOUT
	PUTBYT ","
	HRRE T,VCCTAB(A)
	PUSHJ P,MILOUT
	AOBJN A,VCCO0
	PUTSTR[BYTE(7)15,14]
	POPJ P,
;TABLES

RADIX =10

DEFINE F(I)
<<I*125>>

DEFINE XY(A,B)
<	<XWD A*125,0>+B*125
>

DEFINE DIST(A)
<	A*125
>


DIPLOC:	XY(41,6)
	XY(31,6)
	XY(20,6)
	XY(10,6)
	XY(00,6)
	XY(41,14)
	XY(31,14)
	XY(20,14)
	XY(10,14)
	XY(00,14)
	XY(41,22)
	XY(31,22)
	XY(20,22)
	XY(10,22)
	XY(00,22)
	XY(41,30)
	XY(31,30)
	XY(20,30)
	XY(10,30)
	XY(00,30)
	XY(41,38)
	XY(31,38)
	XY(20,38)
	XY(10,38)
	XY(00,38)
QUAD,<	XY(41,06+YFDG2)
	XY(31,06+YFDG2)
	XY(20,06+YFDG2)
	XY(10,06+YFDG2)
	XY(00,06+YFDG2)
	XY(41,14+YFDG2)
	XY(31,14+YFDG2)
	XY(20,14+YFDG2)
	XY(10,14+YFDG2)
	XY(00,14+YFDG2)
	XY(41,22+YFDG2)
	XY(31,22+YFDG2)
	XY(20,22+YFDG2)
	XY(10,22+YFDG2)
	XY(00,22+YFDG2)
	XY(41,30+YFDG2)
	XY(31,30+YFDG2)
	XY(20,30+YFDG2)
	XY(10,30+YFDG2)
	XY(00,30+YFDG2)
	XY(41,38+YFDG2)
	XY(31,38+YFDG2)
	XY(20,38+YFDG2)
	XY(10,38+YFDG2)
	XY(00,38+YFDG2)
>;QUAD

PINTAB:	XY(00,0)
	XY(1,0)
	XY(2,0)
	XY(3,0)
	XY(4,0)
	XY(5,0)
	XY(6,0)
	XY(7,0)
	XY(7,-6)
	XY(6,-6)
	XY(5,-6)
	XY(4,-6)
	XY(3,-6)
	XY(2,-6)
	XY(1,-6)
	XY(00,-6)

DETAB:	DIST(0)
	DIST(1)
	DIST(2)
	DIST(3)
	DIST(4)
	DIST(3)
	DIST(2)
	DIST(1)
	DIST(1)
	DIST(2)
	DIST(3)
	DIST(4)
	DIST(3)
	DIST(2)
	DIST(1)
	DIST(0)
;GROUND AND POWER PINS
DEFINE PINS
<
	VGMAC(8,6,5)
	VGMAC(8,14,10)
	VGMAC(8,22,15)
	VGMAC(8,30,20)
	VGMAC(8,38,25)
	VGMAC(18,6,4)
	VGMAC(18,14,9)
	VGMAC(18,22,14)
	VGMAC(18,30,19)
	VGMAC(18,38,24)
	VGMAC(28,06,3)
	VGMAC(28,14,8)
	VGMAC(28,22,13)
	VGMAC(28,30,18)
	VGMAC(28,38,23)
	VGMAC(39,06,2)
	VGMAC(39,14,7)
	VGMAC(39,22,12)
	VGMAC(39,30,17)
	VGMAC(39,38,22)
	VGMAC(49,06,1)
	VGMAC(49,14,6)
	VGMAC(49,22,11)
	VGMAC(49,30,16)
	VGMAC(49,38,21)
	VGCMAC(53,2,AC,2)
	VGCMAC(55,15,AT,1)
	VGCMAC(53,23,BC,2)
	VGCMAC(55,36,BT,1)
QUAD,<	VGCMAC(53,2+YFDG2,CC,2)
	VGCMAC(55,15+YFDG2,CT,1)
	VGCMAC(53,23+YFDG2,DC,2)
	VGCMAC(55,36+YFDG2,DT,1)
>;QUAD
>

DEFINE VGMAC(A,B,C)
<	XY(A,B)
QUAD,<	XY(A,B+YFDG2) >
>

DEFINE VGCMAC(A,B,C,D)
<	XY(A,B)
>

GNDTAB:	PINS
GNDLEN__.-GNDTAB

DEFINE VGMAC(A,B,C)
<	C
QUAD,<	C >
>

DEFINE VGCMAC(A,B,C,D)
<	<ASCII/C/>+D
>

GNDNAM:	PINS

DEFINE PINS
<
	VGMAC(8,0,5)
	VGMAC(8,8,10)
	VGMAC(8,16,15)
	VGMAC(8,24,20)
	VGMAC(8,32,25)
	VGMAC(18,0,4)
	VGMAC(18,8,9)
	VGMAC(18,16,14)
	VGMAC(18,24,19)
	VGMAC(18,32,24)
	VGMAC(28,0,3)
	VGMAC(28,8,8)
	VGMAC(28,61,13)
	VGMAC(28,24,18)
	VGMAC(28,32,23)
	VGMAC(39,0,2)
	VGMAC(39,8,7)
	VGMAC(39,16,12)
	VGMAC(39,24,17)
	VGMAC(39,32,22)
	VGMAC(49,0,1)
	VGMAC(49,8,6)
	VGMAC(49,16,11)
	VGMAC(49,24,16)
	VGMAC(49,32,21)
	VGCMAC(57,0,AA,2)
	VGCMAC(57,21,BA,2)
QUAD,<	VGCMAC(57,0+YFDG2,CA,2)
	VGCMAC(57,21+YFDG2,DA,2)
>;QUAD
>

DEFINE VGMAC(A,B,C)
<	XY(A,B)
QUAD,<	XY(A,B+YFDG2) >
>

DEFINE VGCMAC(A,B,C,D)
<	XY(A,B)
>

VCCTAB:	PINS
VCCLEN__.-VCCTAB

DEFINE VGMAC(A,B,C)
<	C
QUAD,<	C >
>

DEFINE VGCMAC(A,B,C,D)
<	<ASCII/C/>+D
>

VCCNAM:	PINS

RADIX 8

>;WWOR(<DEC940,DEC941,DEC942,DEC943>)
SUBTTL	CARD DEF -- HONEYWELL MQX WIRE WRAP BOARD
WWOR(<HWLAUG,HWLMQX>),<

^^WIRGND:	-1		;DEFAULT WIRE GROUNDS FOR MQX BOARDS

^NROWS:	=20			;UML COMMAND GETS THINGS BACKWARDS
^NCOLS:	=10
^NPADS:	3
^UMLCOL:	=10		;# OF CHIPS ACROSS THE PAGE IN A .UML FILE
^PADLET:	XWD -=24,1	;# OF PIN LETTERS PER PAD
^PADPIN:	XWD -=22,1	;# OF PINS PER PIN LETTER
^FRACTN:	=10	;FRACTION OF INCHES RESOLUTION
^PFRACT:	=10	;FRACTION OF INCHES PRINTED
^WRAPMG:	=200*2	;.2" INSULATION AROUND EACH PIN
^BARELN:	0	;DON'T INCLUDE BARE WIRE IN WIRE LENGTHS

WWOR(<HWLAUG>),<HORIZ__=500>	;.50" HORIZONTAL SPACING
WWOR(<HWLMQX>),<HORIZ__=550>	;.55" HORIZONTAL SPACING


^MAPRC:	TDNE T,[777700,,770000]
	POPJ P,
	HRRZ TT,T		;SAVE COLUMN
	HLRZ T,T
	CAIL T,"O"-"A"+1	;HONEYWELL HAS NO "O"
	ADDI T,1
	CAIL T,"I"-"A"+1	;OR "I"
	ADDI T,1
	MOVE T,L2N-1(T)		;CONVERT IT TO AN ENCODED LETTER
	LSH T,14
	TRO T,(TT)		;ADD IN ROW #
	JRST CPOPJ1

^MAPIT:	JUMPL A,CONMAP		;IS IT A CONNECTOR PIN?
	CAIE B,=14		;WE ONLY CAN HANDLE 14 PIN DIPS
	POPJ P,			;SO GET OUT IF IT ISN'T 14 PIN
	LDB T,[POINT 6,A,23]	;GET LOC LETTER
	MOVE T,N2L(T)
	CAILE T,"O"		;HONEYWELL MQX HAS NO "O" COLUMN
	SUBI T,1
	CAILE T,"I"		;OR "I"
	SUBI T,1
	SUBI T,"A"
	LDB TT,[POINT 12,A,35]	;GET ROW NUMBER
	JUMPE TT,CPOPJ
	IMULI T,HORIZ		;HORIZONTAL SPACING
	IMULI TT,=1000		;1" VERTICAL SPACING
	HRLI T,-=1000(TT)	;ORIGIN SUCH THAT 0A IS AT 0,,0
	LDB TT,[POINT 6,A,17]	;GET THE PIN #
	ADD T,PINTAB-1(TT)	;ADJUST LOC
MAPOK:	SETZ TT,		;NO AUTO GND OR PWR
	JRST CPOPJ1

^VGCON:	POPJ P, ;FOR NOW
CONMAP:

WWOR(<HWLAUG>),<
	SETZ T,
	JRST MAPOK
>;WWOR(<HWLAUG>)

WWOR(<HWLMQX>),<
	LDB TTT,[POINT 6,A,23]
	JUMPE TTT,CPOPJ
	LDB TT,[POINT 6,A,29]
	JUMPE TT,CPOPJ
	LDB T,[POINT 6,A,35]
	SOJL T,CPOPJ
	CAIN TTT,L2NI.G
	JRST CONMPG
	CAIL T,=22
	POPJ P,
	CAIN TTT,L2NI.W
	JRST CONMPW
	CAIN TTT,L2NI.L
	JRST CONMPL
	CAIN TTT,L2NI.R
	JRST CONMPR
	CAIN TTT,L2NI.N
	JRST CONMPN
	CAIN TTT,L2NI.Y
	JRST CONMPY
	CAIE TTT,L2NI.B
	POPJ P,
	
CONMPB:	CAIN TT,L2NI.T
	CAIL T,=12
	POPJ P,
	IMULI T,=200
	CAIGE T,6*=200
	JRST .+3
	MOVNI T,-=2100(T)
	HRLI T,-=150
	MOVS T,T
	HRRI T,=11150(T)
	JRST MAPOK

CONMPG:	;THIS WILL NOT HANDLE GN64 THROUGH GN67 DUE TO 6 BITS, BUT WHAT THE HELL
	CAIE TT,L2NI.N
	POPJ P,
	CAIL T,=60
	ADDI T,3
	CAIL T,=54
	ADDI T,6
	CAIL T,=48
	ADDI T,3
	LSHC T,-1
	IMULI T,HORIZ
	TLNE TT,400000
	ADDI T,=350
	CAIL T,=20*HORIZ
	ADD T,[<=990,,0>-<=20*HORIZ>]
	SUB T,[=150,,0]
	MOVSI TT,GND
	JRST CPOPJ1

CONMPL:	CAILE TT,L2NI.D
	POPJ P,
	IMULI TT,=22
	ADDI T,-=22(TT)
	LSHC T,-2
	LSH TT,2-=36
	IMULI T,=200
	CAIN T,=21*=0
	ADDI T,=50
	ADDI T,=850+=4900
	HRLI T,-=650(TT)
	JRST MAPOK

CONMPN:	CAIN TT,L2NI.L
	JRST [	CAILE T,8
		POPJ P,
		IMULI T,=1000
		HRLZI T,=2000(T)
		HRRI T,=11150
		JRST PWRMAP ]
	CAIE TT,L2NI.R
	POPJ P,
	LSHC T,-1
	IMULI T,=1000
	TLNE TT,400000
	ADDI T,=600
	CAIN T,=20/2*=1000		;NR20 IS FUNNY
	SUBI T,=100
	CAIN T,=21/2*=1000+=600		;SO IS NR21
	SUBI T,=500
	HRLZI T,(T)
	HRRI T,-=350
PWRMAP:	MOVSI TT,PWR
	JRST CPOPJ1

CONMPR:	CAILE TT,L2NI.D
	POPJ P,
	IMULI TT,=22
	ADDI T,-=22(TT)
	LSHC T,-2
	LSH TT,2-=36
	IMULI T,=200
	CAIN T,=21*=200
	SUBI T,=50
	ADDI T,=850
	HRLI T,-=650(TT)
	JRST MAPOK

CONMPW:	MOVE TT,N2L(TT)
	CAILE TT,"K"
	JRST [	CAIN TT,"Z"
		CAIL T,6
		POPJ P,
		MOVEI TT,"F"
		JRST WZOK ]
	CAIL TT,"F"
	ADDI T,6
WZOK:	CAIL TT,"E"
	ADDI T,4
	CAIL TT,"G"
	ADDI T,6
	IMULI TT,=22
	ADDI T,-=22*"A"(TT)
	LSHC T,-2
	LSH TT,2-=36
	IMULI T,=200
	IMULI TT,=150
	CAIE T,0*=200
	CAIN T,=37*=200
	ADDI T,=50
	CAIE T,=21*=200
	CAIN T,=58*=200
	SUBI T,=50
	SUBI T,=400
	HRLI T,=10250(TT)
	JRST MAPOK

CONMPY:	CAIE TT,L2NI.L
	CAIN TT,L2NI.R
	CAIA
	POPJ P,
	IMULI T,=200
	ADDI T,=750
	CAIN TT,L2NI.L
	ADDI T,=5300
	HRLI T,-=650
	JRST MAPOK
>;WWOR(<HWLMQX>)
;FIND POWER AND GROUND PINS

DEFINE MAKCON $ (L1,L2,N,FLAG) <IFDIF <FLAG><><FLAG,,>L2NI.$L1*1B23+L2NI.$L2*1B29+=N+1>

^FNDPWR:
	MOVE T,PWRLVL
	JUMPL A,FPWRC
	JUMPE T,[			;GND?
		LDB T,[POINT 6,A,23]	;YES, GET THE COLUMN
		MOVE T,N2L(T)
		CAILE T,"O"
		SUBI T,1
		CAILE T,"I"
		SUBI T,1
		SUBI T,"A"
		ASH T,1
		MOVEI A,MAKCON(G,N,0)(T)
		TLO A,MAPCON
		POPJ P, ]
	CAIN T,=500			;+5.00 VOLTS?
	JRST [	TLZ A,-1
		LSH A,6			;YES, SAVE THE COLUMN LETTER
		HRRI A,(T)
		TLO A,PWRDMY
		POPJ P, ]
	LDB TT,[POINT 12,A,35]
	SOJL TT,CPOPJ
	CAMN T,[-=1000]			;-10.00 VOLTS?
	JRST FNDM10
	CAMN T,[-=500]			;-5.00 VOLTS?
	JRST [	TDZA A,A
FNDM10:		MOVEI A,1
		LSH TT,1
		IORI A,MAKCON(N,R,0)(TT)
		TLO A,MAPCON
		POPJ P, ]
	CAIE T,=1000			;+10.00 VOLTS?
	JRST FRANDM			;NO, MUST BE WEIRD.
	CAIGE TT,2
	MOVEI TT,2			;FIRST TWO ROWS DON'T HAVE +10 VOLTS
	MOVEI A,MAKCON(N,L,0)-2(TT)
	TLO A,MAPCON
	POPJ P,

FPWRC:	JUMPE T,[TLO A,PWRDMY
		POPJ P, ]
	CAIN T,=500
	JRST [	TLO A,PWRDMY
		POPJ P, ]
	MOVSI TT,-3
	CAMN T,(TT)[	-=1000
			-=500
			=1000 ]
	JRST [	MOVE A,(TT)[	MAKCON(N,R,20,MAPCON)
				MAKCON(N,R,21,MAPCON)
				MAKCON(N,L,08,MAPCON)
				]
		POPJ P, ]
	AOBJN TT,.-2
	JRST FRANDM
^PGPRNT:
^PGPRTM:
	PUSH P,A
	PUSHJ P,PGPRT2
	POP P,A
	POPJ P,

PGPRT2:	JUMPGE A,LOCPIN
	HRLI A,(A)
	TLZ A,MAPCON
	TRZ A,7777
	JRST LOCPNC
^GNDCLR:OUTSTR[ASCIZ/YOU CAN'T PUT 24 PIN DIPS ON MQX CARDS!
/]
	POPJ P,

^WAGGND:
^GNDOUT:
^VCCOUT:
	OUTSTR[ASCIZ/NOT SUPPORTED FOR HONEYWELL MQX BOARD!!
/]
	POPJ P,
;TABLES

RADIX =10

DEFINE ROWCOL(R,C)
<	<XWD R,0>+C		;NOTE THAT THIS IS NOT XWD R,C IF C NEGATIVE!!
>

WWOR(<HWLMQX>),<
	P1COL__350		;chips are inserted dead bug style for soldering
	P14COL__0
>;WWOR(<HWLMQX>)
WWOR(<HWLAUG>),<
	P1COL__0		;chips plug in
	P14COL__300
>;WWOR(<HWLAUG>)

PINTAB:	ROWCOL(000,P1COL)
	ROWCOL(100,P1COL)
	ROWCOL(200,P1COL)
	ROWCOL(300,P1COL)
	ROWCOL(400,P1COL)
	ROWCOL(500,P1COL)
	ROWCOL(600,P1COL)
	ROWCOL(600,P14COL)
	ROWCOL(500,P14COL)
	ROWCOL(400,P14COL)
	ROWCOL(300,P14COL)
	ROWCOL(200,P14COL)
	ROWCOL(100,P14COL)
	ROWCOL(000,P14COL)

RADIX 8

>;WWOR(<HWLAUG,HWLMQX>)
SUBTTL	CARD DEF -- AUGAT 8136-LG498-49
WWOR(<AUGHEX>),<

^^WIRGND:	-1		;DEFAULT WIRE GROUNDS FOR AUGAT BOARDS

^NROWS:	0			;U CAN'T DO A UML YET!!
^NCOLS:	0
^NPADS:	0
^UMLCOL:	0		;THAT SHOULD THROW IN A WRENCH WHEN HE DIVIDES!!
^PADLET:	XWD 1,0		;# OF PIN LETTERS PER PAD
^PADPIN:	XWD -0,1	;# OF PINS PER PIN LETTER
NOCMU,<	^FRACTN:	=8 >	;FRACTION OF INCHES RESOLUTION
CMU,<	^FRACTN:	=4 >	;FRACTION OF INCHES RESOLUTION
NOCMU,<	^PFRACT:	=8 >	;FRACTION OF INCHES PRINTED
CMU,<	^PFRACT:	=100 >	;FRACTION OF INCHES PRINTED
^WRAPMG:	=200*2	;.2" INSULATION AROUND EACH PIN
^BARELN:	0	;DON'T INCLUDE BARE WIRE IN WIRE LENGTHS

^MAPRC:	TDNE T,[777700,,770000]
	POPJ P,
	HALT .+1
	JRST CPOPJ1

^MAPIT:	PUSH P,A
	JUMPL A,CONMAP		;IS IT A CONNECTOR PIN?
	PUSHJ P,ABSPIN
	LDB TT,[POINT 6,A,23]	;GET GROUP LETTER
	LDB T,[POINT 6,A,29]	;GET COLUMN LETER
	CAIG TT,3
	CAIN T,L2NI.Q
	JRST MAPERR
	SOJL T,MAPERR
	CAML T,(TT)[	400000,,0
			L2NI.S
			L2NI.T
			L2NI.S ]
	JRST MAPERR
	CAIL T,L2NI.Q
	SUBI T,1
	IMULI T,=300		;.3" SPACING BETWEEN COLUMNS
	ADD T,(TT)[	=300
			=4800+=300
			=10200+=300
		]-1
	LDB TT,[POINT 6,A,35]	;GET ROW NUMBER
	CAIGE T,=600+=300	;COLUMNS AA THROUGH AF?
	CAIL TT,=13		;yes, rows 1-12 do not exist
	CAILE TT,=62
	JRST MAPERR
	SOJL TT,MAPERR
	IMULI TT,=100		;.1" VERTICAL PIN SPACING
	HRLI T,=700(TT)		;ORIGIN SUCH THAT AA01 IS AT 700,,300
	TLNE A,MAPPWR!MAPGND	;IS THIS A VCC OR GND PIN?
	JRST PINPGP		;YES
	SETZ TT,		;NO AUTO GND OR PWR
MAPDON:	AOS -1(P)
MAPERR:	POP P,A
	POPJ P,

CONMAP:	LDB T,[POINT 6,A,23]
	TRZN T,40		;IS IT A DEC PADDLE?
	JRST DECCON		;YES
	CAILE T,=10
	JRST MAPERR
	JUMPE T,MAPERR
	LDB TT,[POINT 12,A,35]	;GET PIN #
	SOJL TT,MAPERR
	IDIVI TT,=13
	SOJG TT,MAPERR
	CAIG T,4
	JRST [	IMULI T,=400
		TDZE TT,TT
		SUBI T,=100
		IMUL TTT,[-=100]
		HRLI T,=800+=700(TTT)
		JRST MAPDON ]
	IMULI TTT,=100
	TDZN TT,TT
	HRLI TTT,=100
	MOVE T,[	0,,=2700+=300
			=400,,=2700+=300
			0,,=6000+=300
			=400,,=6000+=300
			0,,=11100+=300
			=400,,=11100+=300
		]-5(T)
CMAPDN:	ADD T,TTT
	JRST MAPDON

DECCON:	LDB TTT,[POINT 6,A,29]	;GET PADDLE LETTER
	CAIG T,6
	CAILE TTT,L2NI.V
	JRST MAPERR
	SOJL T,MAPERR
	CAIE TTT,L2NI.Q
	CAIN TTT,L2NI.G
	JRST MAPERR
	CAIE TTT,L2NI.R		;THERE IS A GAP BETWEEN FINGERS S AND T
	CAIN TTT,L2NI.S		;AND THERE IS NO FINGER Q
	SUBI TTT,1
	CAIL TTT,L2NI.D		;THERE IS A GAP BETWEEN FINGERS C AND D
	CAILE TTT,L2NI.G	;AND THERE IS NO FINGER G
	SOJL TTT,MAPERR
	IMULI TTT,=100
	LDB TT,[POINT 6,A,35]
	SOJL TT,MAPERR
	SOJG TT,MAPERR
	TDZE TT,TT
	HRLI TTT,=200
	CAIN TTT,0		;FINGER A2?
	TLO TT,PWR		;YES, IT IS Vcc
	CAIE TTT,=200		;FINGER C2
	CAMN TTT,[=200,,=1700]	;OR T1?
	TLO TT,GND		;YES, IT IS GND
	MOVE T,(T)[	=6500+=700,,0
			=6500+=700,,=2700
			=6500+=700,,=5300
			=6500+=700,,=8000
			=6500+=700,,=10500
			=6500+=700,,=13300 ]
	JRST CMAPDN

PINPGP:	TLNN A,MAPPWR		;POWER?
	SKIPA TT,[GND,,0]
	MOVSI TT,PWR
	ADDI T,=100		;OVER .1"
	JRST MAPDON

^VGCON:	POPJ P,	;FOR NOW
^ABSPIN:
	JUMPL A,CPOPJ		;DON'T TOUCH CONNECTOR PINS
	LDB TT,[POINT 6,A,17]	;GET THE PIN NUMBER
	TLZ A,77
	SOJLE TT,CPOPJ		;NORMALIZE, GET OUT IF ALREADY ABSOLUTE
	LDB T,[POINT 6,A,29]	;GET COLUMN LETTER
	ASH TT,1		;DOUBLE PIN NUMBER
	CAIGE TT,(B)		;FIRST SIDE?
	JRST SIDEOK		;YES
	CAIL T,L2NI.Q		;THERE IS NO Q COLUMN
	SUBI T,1
	CAIL B,=23		;DIP HAVE 23 OR MORE PINS?
	SUBI T,1		;YES, OVER ONE EXTRA
	SOJG T,GRPOK
	ADDI T,=16		;FUDGE OVER TO NEXT GROUP
	HRRI A,-1B23(A)
	TRNN A,1B23		;DID WE MOVE INTO GROUP B??
	ADDI T,2		;YES, IT IS WIDER THAN THE REST
GRPOK:	CAIL T,L2NI.Q		;ADD Q COLUMN BACK IN
	ADDI T,1
	DPB T,[POINT 6,A,29]
	SUBM B,TT		;GET CORRECT PIN #
	ADDI TT,-2(B)
SIDEOK:	ASH TT,-1
	ADDI A,(TT)
	POPJ P,
;FIND POWER AND GROUND PINS
^FNDPWR:
	SKIPE T,PWRLVL
	CAME T,MAINV
	JUMPN T,FRANDM
	PUSH P,T		;SAVE THE VOLTAGE
	PUSHJ P,ABSPIN
	POP P,T			;RESTORE THE VOLTAGE
	AOJL A,FPWRC
	TRZ A,7		;ROUND TO NEAREST MULTIPLE OF 8+2 IN ODD COLUMN
;;;	ADDI A,2	;This ADDI is distributed in the next two SUBI's
	TRNN A,2000	;COLUMN R, S, or T?
	SUBI A,100-2	;if yes the ADDI A,100 and SUBI A,100 would cancel
	TRO A,100
	TRNE A,2000	;COLUMN R, S, or T?
	SUBI A,100-2	;yes, fudge back
	JUMPE T,[ADDI A,4
		TLO A,MAPGND
		POPJ P, ]
	TLO A,MAPPWR
	TRNE A,767060	;did we get AA10,AB10,AC10,AD10,AE10, or AF10?
	POPJ P,		;Certainly not
	TRC A,700
	TRCE A,700	;Watch out for AG10, which is OK
	ADDI A,=8	;yes, change to pin 18, since pin 10 does not exist
	POPJ P,

;The following code hooks all GND and MAINV voltages together
;in a given jack, but doesn't connect them to anything!!!!!!!
;DEC paddles are wired to the appropriate power/gnd fingers, however.
FPWRC:	TLNE A,40B23		;DEC PADDLE?
	JRST [	LDB A,[POINT 6,A,23]	;NO, GET JUST THE JACK NUMBER
		HRLZI A,MAPCON!PWRDMY(A)
		TRO A,(T)		;REMEMBER THE VOLTAGE WE USED
		POPJ P, ]
	JUMPN T,[TRZ A,7777
		TDO A,[MAPPWR,,L2NI.A*100+2]
		POPJ P, ]
	LDB T,[POINT 6,A,29]
	TRZ A,7777
	CAIG T,L2NI.K
	TROA A,L2NI.C*100+2
	TRO A,L2NI.T*100+1
	TLO A,MAPGND
	POPJ P,
^PGPRNT:
	PUSH P,A
	JUMPL A,PGCPNT
	TLNE A,MAPPWR!MAPGND
	JRST PGPRPG
	PUSHJ P,LOCPIN
	POP P,A
	POPJ P,

^PGPRTM:
	PUSH P,A
	JUMPL A,PGCPNT
	TLNE A,MAPPWR!MAPGND
	JRST PGPRPG
	PUSHJ P,LOCPNM
	POP P,A
	POPJ P,

PGPRPG:	PUSHJ P,LOCOUT
	POP P,A
	PUTBYT "-"
	TLNE A,MAPPWR
	PUTBYT "V"
	TLNE A,MAPGND
	PUTBYT "G"
	POPJ P,

PGCPNT:	HRLI A,(A)
	TLZ A,MAPCON
	TRZ A,7777
	PUSHJ P,LOCPNC
	POP P,A
	POPJ P,
^GNDCLR:OUTSTR[ASCIZ/24 PIN DIPS NOT YET IMPLEMENTED!
/]
	POPJ P,

^WAGGND:
^GNDOUT:
^VCCOUT:
	OUTSTR[ASCIZ/NOT SUPPORTED FOR UNIVERSAL AUGAT BOARDS!!
/]
	POPJ P,

>;WWOR(<AUGHEX>)
SUBTTL	CARD DEF -- AUGAT 8136-UG1, AUGAT 8136-UG6, AUGAT AX118-75-[G]
WWOR(<AUGU1,AUGU6,AUGcmu>),<

WWOR(<AUGU1>),<
	JPINS__=46	;PINS IN A JACK
	JOFF1__=300	;DISTANCE BETWEEN ROW 1 AND ROW 2 OF A JACK
	JOFF2__=0	;OFFSET OF JACK FROM COLUMN A
	JPERG__1	;JACKS PER GROUP
>;WWOR(<AUGU1>)

WWOR(<AUGU6>),<
	JPINS__=26
	JOFF1__=100
	JOFF2__=500
	JPERG__2
>;WWOR(<AUGU6>)

WWOR(<AUGcmu>),<
	JPINS__=34
	JOFF1__=100
	JOFF2__=300
	JPERG__2
>;WWOR(<AUGcmu>)

	NGROUP__6

^^WIRGND:	-1		;DEFAULT WIRE GROUNDS FOR AUGAT BOARDS

^NROWS:	0			;U CAN'T DO A UML YET!!
^NCOLS:	0
^NPADS:	JPERG*NGROUP
^UMLCOL:	0		;THAT SHOULD THROW IN A WRENCH WHEN HE DIVIDES!!
^PADLET:	XWD 1,0		;# OF PIN LETTERS PER PAD
^PADPIN:	XWD -JPINS,1	;# OF PINS PER PIN LETTER
NOCMU,<	^FRACTN:	=8 >	;FRACTION OF INCHES RESOLUTION
CMU,<	^FRACTN:	=4 >	;FRACTION OF INCHES RESOLUTION
NOCMU,<	^PFRACT:	=8 >	;FRACTION OF INCHES PRINTED
CMU,<	^PFRACT:	=100 >	;FRACTION OF INCHES PRINTED
^WRAPMG:	=200*2	;.2" INSULATION AROUND EACH PIN
^BARELN:	0	;DON'T INCLUDE BARE WIRE IN WIRE LENGTHS

^MAPRC:	TDNE T,[777700,,770000]
	POPJ P,
	HALT .+1
	JRST CPOPJ1

^MAPIT:	PUSH P,A
	PUSHJ P,ABSPIN
	LDB T,[POINT 6,A,23]	;GET GROUP LETTER
	CAILE T,6
	JRST MAPERR
	JUMPE T,MAPERR
	IMULI T,=2700		;2.7" SPACING BETWEEN GROUPS
	JUMPL A,CONMAP		;IS IT A CONNECTOR PIN?
	LDB TT,[POINT 6,A,29]	;GET COLUMN LETTER
	CAILE TT,=9
	JRST MAPERR
	SOJL TT,MAPERR
	IMULI TT,=300		;.3" SPACING BETWEEN COLUMNS
	ADDI T,-=2700(TT)
	LDB TT,[POINT 6,A,35]	;GET ROW NUMBER
	CAILE TT,=50
	JRST MAPERR
	SOJL TT,MAPERR
	IMULI TT,=100		;.1" VERTICAL PIN SPACING
	HRLI T,=800(TT)		;ORIGIN SUCH THAT AA01 IS AT 800,,0
	TLNE A,MAPPWR!MAPGND	;IS THIS A VCC OR GND PIN?
	JRST PINPGP		;YES
	SETZ TT,		;NO AUTO GND OR PWR
MAPDON:	AOS -1(P)
MAPERR:	POP P,A
	POPJ P,

CONMAP:
WWOR(<AUGU6,AUGcmu>),<	LSH T,-1 >	;GET GROUP
	LDB TT,[POINT 6,A,35]	;GET PIN #
	SOJL TT,MAPERR
	IDIVI TT,JPINS/2
	SOJG TT,MAPERR
	TDZN TT,TT
	HRLI T,JOFF1
WWOR(<AUGU6,AUGcmu>),<
	TRNE A,10000
	SUB T,[<-=300>,,<=2700/2>]
>;WWOR(<AUGU6,AUGcmu>)
	IMULI TTT,=100
	SUBI T,-<<<JPINS/2>-1>*100+JOFF2-=2700>(TTT)
	JRST MAPDON

PINPGP:	TLNN A,MAPPWR		;POWER?
	SKIPA TT,[GND,,0]
	MOVSI TT,PWR
	ADDI T,=100		;OVER .1"
	JRST MAPDON

^VGCON:	POPJ P,	;FOR NOW
^ABSPIN:
	JUMPL A,CPOPJ		;DON'T TOUCH CONNECTOR PINS
	LDB TT,[POINT 6,A,17]	;GET THE PIN NUMBER
	TLZ A,77
	SOJLE TT,CPOPJ		;NORMALIZE, GET OUT IF ALREADY ABSOLUTE
	LDB T,[POINT 6,A,29]	;GET COLUMN LETTER
	ASH TT,1		;DOUBLE PIN NUMBER
	CAIGE TT,(B)		;FIRST SIDE?
	JRST SIDEOK		;YES
	ADDI T,1		;NO, NEXT COLUMN
	CAIL B,=23		;DIP HAVE 23 OR MORE PINS?
	ADDI T,1		;YES, FUDGE ONE MORE COLUMN
	CAIG T,=9		;OVERFLOW INTO NEXT GROUP?
	JRST GRPOK		;NO
	SUBI T,=9		;YES, FIX THINGS UP
	HRRI A,1B23(A)		;INCLUDING THE GROUP
GRPOK:	DPB T,[POINT 6,A,29]
	SUBM B,TT		;GET CORRECT PIN #
	ADDI TT,-2(B)
SIDEOK:	ASH TT,-1
	ADDI A,(TT)
	POPJ P,
;FIND POWER AND GROUND PINS
^FNDPWR:
	SKIPE T,PWRLVL
	CAME T,MAINV
	JUMPN T,FRANDM
	JUMPL A,FPWRC
	PUSH P,T		;SAVE THE VOLTAGE
	PUSHJ P,ABSPIN
	POP P,T			;RESTORE THE VOLTAGE
	ADDI A,4
	TRZ A,100!7		;ROUND TO NEAREST MULTIPLE OF 8 IN EVEN COLUMN
	TRNN A,77		;PIN 0?
	TRO A,=8		;YES, GO TO PIN 8.
	TRNN A,7700		;WERE WE IN COLUMN A?
	TRO A,200		;YES, GO TO COLUMN B.
	JUMPE T,[SUBI A,4
		TLO A,MAPGND
		POPJ P, ]
	TLO A,MAPPWR
	POPJ P,

;The following code hooks all GND and MAINV voltages together
;in a given jack, but doesn't connect them to anything!!!!!!!
FPWRC:	LDB A,[POINT 6,A,23]	;GET JUST THE JACK NUMBER
	HRLZI A,MAPCON!PWRDMY(A)
	TRO A,(T)		;REMEMBER THE VOLTAGE WE USED
	POPJ P,
^PGPRNT:
	PUSH P,A
	JUMPL A,PGCPNT
	TLNE A,MAPPWR!MAPGND
	JRST PGPRPG
	PUSHJ P,LOCPIN
	POP P,A
	POPJ P,

^PGPRTM:
	PUSH P,A
	JUMPL A,PGCPNT
	TLNE A,MAPPWR!MAPGND
	JRST PGPRPG
	PUSHJ P,LOCPNM
	POP P,A
	POPJ P,

PGPRPG:	PUSHJ P,LOCOUT
	POP P,A
	PUTBYT "-"
	TLNE A,MAPPWR
	PUTBYT "V"
	TLNE A,MAPGND
	PUTBYT "G"
	POPJ P,

PGCPNT:	HRLI A,(A)
	TLZ A,MAPCON
	TRZ A,7777
	PUSHJ P,LOCPNC
	POP P,A
	POPJ P,
^GNDCLR:OUTSTR[ASCIZ/24 PIN DIPS NOT YET IMPLEMENTED!
/]
	POPJ P,

^WAGGND:
^GNDOUT:
^VCCOUT:
	OUTSTR[ASCIZ/NOT SUPPORTED FOR UNIVERSAL AUGAT BOARDS!!
/]
	POPJ P,

>;WWOR(<AUGU1,AUGU6,AUGcmu>)
SUBTTL	PINMAP,PINBIT

;PIN SPECIFICATION IN A
;SIGN BIT (MAPCON) ON IN A MEANS CONNECTOR
;# OF PINS ON THIS DIP IN B
;RETURNS X,Y IN T, BITS IN LEFT HALF TT

^PINMAP:PUSHJ P,MAPIT
	JRST PINERR
	JRST CPOPJ1

;JUST BITS INTO TT, ERROR RETURNS 0 BITS
^PINBIT:PUSHJ P,MAPIT
	SETZ TT,
	POPJ P,

PINERR:	PUSH P,PUTCHR
	MOVE T,[OUTCHR TTT]
	MOVEM T,PUTCHR
	PUSHJ P,PGPRNT
	POP P,PUTCHR
	OUTSTR [ASCIZ/ MAPPING ERROR!
/]
	POPJ P,
SUBTTL	DISTANCE CALCULATOR FOR ROUTER STUFF
;CALLS WITH ONE PIN IN A,B OTHER IN C,D RETURNS DISTANCE IN G

WWOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>),<

^CITYBL:	0		;ALWAYS DIAGONAL FOR NOW!

^DOCITY:SETOM CITYBL
	POPJ P,
^NOCITY:SETZM CITYBL
	POPJ P,
^DSTCLC:

WWOR(<HWLAUG>),<
	TLNN A,MAPCON
	JUMPGE C,NRMLDST
	MOVEI G,=10000
	IMUL G,FRACTN
	POPJ P,
>;WWOR(<HWLAUG>)

NRMLDST:
	PUSHJ P,PINMAP		;MAP ONE OF THEM
	JRST DSTERR
	MOVE A,C		;GET OTHER POINT
	MOVE B,D
	MOVE C,T		;SAVE X,Y
	PUSHJ P,PINMAP
	JRST DSTERR
	HLRE TT,T
	HLRE TTT,C
	SUB TT,TTT		;GET VERTICAL DISTANCE
	HRRE T,T
	HRRE C,C
	SUB T,C			;HORIZONTAL DISTANCE
	SKIPGE CITYBL		;CITY BLOCK WIRING?
	JRST [	MOVM T,T	;YES, GET ABSOLUTE VALUES
		MOVM TT,TT
		ADD T,TT
		JRST GOTDST ]
	IMUL TT,TT		;SQUARE VERTICAL DISTANCE
	IMUL T,T		;SQUARE HORIZONTAL DISTANCE
	ADD T,TT
	JUMPE T,DSTIS0		;DON'T WASTE TIME ON 0 LENGTH RUNS
	PUSHJ P,SQRT		;SQUARE ROOT = HYPOTENEUSE (?SP?)
GOTDST:	CAILE T,=8000		;LONGER THAN 8 INCHES?
	ADDI T,=250		;YES, ADD 1/4 INCH
	ADD T,BARELN		;ADD THE BARE WIRE AT EACH END, IF WANTED
	ADD T,WRAPMG		;ADD SOME INSULATION TO GO AROUND THE PINS
	IMUL T,FRACTN		;CONVERT TO INCREMENTS OF 1/FRACTN INCHES
	IDIVI T,=1000		; "		"		"
	SKIPE TT		;REMAINDER?
	ADDI T,1		;YES, ROUND UP
DSTIS0:	MOVE G,T
	POPJ P,

DSTERR:	SETZ G,
	POPJ P,

>;WWOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>)
SUBTTL	SQRT -- TAKES INTEGER SQUARE ROOTS

WWOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>),<

SQRT:	JFFO T,.+2		;GET LOC OF FIRST BIT
	POPJ P,
	MOVNI TTT,(TT)
	ADDI TTT,=35
	ASH TTT,-1
	MOVEI TT,1
	ASH TT,(TTT)
	MOVEI TTT,=5		;5 ITERATIONS FOR NOW
SQRTLP:	MOVE TTTT,TT
	IDIVM T,TTTT
	ADD TT,TTTT
	ASH TT,-1
	SOJG TTT,SQRTLP
	MOVE T,TT
	POPJ P,

>;WWOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>)
SUBTTL FRANDM -- FINDS A DUMMY POWER PIN FOR FUNNY VOLTAGES

FRANDM:	HRRZ A,PWRLVL		;INCLUDE THE VOLTAGE!
	TLO A,PWRDMY
	POPJ P,
BEND	;WW
>;WW
 