;<WIRELIST>PG21.FAI.19, 15-NOV-75 19:17:00, EDIT BY HELLIWELL
.ADD(ALLLOCS,PG21,LP21TV)

BEGIN PG21

;THE TRANSFER VECTOR FOR THE AUGUAT 8136 PG21-180 BOARD

^LP21TV:
	JRST LCINIT		;INITIALIZE LETTER/NUMBER CONVERSION TABLES
	JRST LOCOUT
	JRST QUPIN
	JRST SLTOUT
	JRST GETSLT
	JRST BPINPN
	JRST RPNAM
MDPC,<
	JRST CSLTLP
	JRST SLTLN		;USE THE CANONICAL ONE
	JRST SLTLPN
	JRST PINPLS
MD,<
	JRST CSLTLT
	JRST GTCONP
	JRST CSLTLD
>;MD
>;MDPC
MWL,<
	JRST PINPN5
	JRST TRPNAM
	JRST RPNAMA
	JRST WLOCOUT
	JRST LOCPNC
	JRST LOCPNW
	JRST PRCNPN
	JRST GETLOC
	JRST PADPRT
	JRST RAYDIP
	JRST RAYCON
	JRST LOCPIN
	JRST LOCPNM
	JRST LOCPNP
	JRST CPNSEP
	JRST CPNMER
	JRST BPNPIN
	JRST CPARTP
	JRST PRBCN
	JRST SEQLOC
	JRST CONGIN
	JRST GTSLTT
>;MWL
	[ASCIZ/#LL#/]
	[ASCIZ /#/]
MDPC,<	[ASCIZ/LJ#-#/]
	[ASCIZ/L#/]
	[ASCID /A01/]
>;MDPC
MWL,<	[ASCIZ/L#/]
	[ASCIZ/LJ#/]
>;MWL
CHECK LP21TV,LTVLEN

L2NSUB:	BLOCK L2NLEN
N2LSUB:	REPEAT N2LLEN, < "?"
>
EN2L__.

NNN__1
FOR I IN(A,B,C,D,E,F)
<	L2N2L I,0
>
FOR I IN (G,I,O,Q)
<	L2N2L I,1B0
>

N2LMAX__NNN-1

ORG EN2L

COMMENT 

AUGAT-8136-PG21 CONNECTOR PIN FORMAT PRINTS AS LJ#(#)
WHERE L IS THE GROUP.  THE J IS LITERAL.  THE FIRST DIGIT IS THE JACK
AND THE SECOND IS THE PIN

______|_____|_____|_____|_____|_____|
|        2223                      35
|    5    |1|          12           |
|_________|_|_______________________|
     |     |		|
<    |     |		|------------># PIN
     |     |
<    |     |------------------------->J# JACK
     |
<    |------------------------------->L GROUP



LCINIT:	MOVE T,[L2NSUB,,L2N]
	BLT T,L2N+L2NLEN+N2LLEN-1
	MOVEI T,N2LMAX
	MOVEM T,MAXN2L
	POPJ P,
;THIS BLOCK STRUCTURE HIDES ALL THE STANDARD ROUTINES FOR
;ALL BUT III BOARDS FROM III


;PUT PIN ON END OF BODY LOCATION

BPINPN:	MOVE T,A
	PUSHJ P,PUTDEC
	POPJ P,

MWL,<
PINPN5:	MOVEI TT,5
	MOVEM TT,NDIG
	JRST NPUTDEC

TRPNAM:	TGETNUM
	JRST CPOPJ1

RPNAMA:	GETCH
	CAIL CHRREG,"0"
	CAILE CHRREG,"9"
	TDZA A,A
	PUSHJ P,TRPNAM
	JFCL
	JRST CPOPJ1
>;MWL

RPNAM:	GETNUM
	JRST CPOPJ1

MDPC,<
SLTLPN:PUSHJ P,SLTOUT
	HLRZ A,A
	JRST LOCOUT

PINPLS:HLRZ T,A
	PUSHJ P,PUTDEC
MD,<	TRNE A,R1416
	JRST [	CAML A,[8,,0]
		PUTSTR [ASCIZ/+2/]
		POPJ P, ]
	TRNE A,L1416
	PUTBYT "+"
>;MD
	POPJ P,
>;MDPC
SUBTTL	LOCPIN -- PRINTS LOCATION AND PIN #
MWL,<

LOCPIN:PUSHJ P,LOCOUT
	PUTBYT "("
	HLRZ T,A
	PUSHJ P,PUTDEC
	PUTBYT ")"
	POPJ P,

;LOCPNM -- PRINTS DIP LOC AND PIN # ON WIRE-WRAP SIDE

LOCPNM:PUSH P,T
	PUSHJ P,LOCOUT
	PUTBYT "("
	HLRZ T,A
	MOVE TT,(P)
	TRNE TT,R1416
	JRST [	CAIL T,8
		ADDI T,2
		JRST LCPNM3 ]
	TRNE TT,L1416
	ADDI T,1
LCPNM3:	PUSHJ P,PUTDEC
	POP P,T
	TRNE T,R1416
	JRST [	CAML A,[8,,0]
		PUTSTR [ASCIZ/-2/]
		JRST LCPNM2 ]
	TRNE T,L1416
	PUTBYT "-"
LCPNM2:	PUTBYT ")"
	POPJ P,

LOCPNP:PUSH P,T
	PUSHJ P,LOCOUT
	PUTBYT "("
	HLRZ T,A
	PUSHJ P,PUTDEC
	POP P,T
	TRNE T,R1416
	JRST [	CAML A,[8,,0]
		PUTSTR [ASCIZ/+2/]
		JRST LCPNP2 ]
	TRNE T,L1416
	PUTBYT "+"
LCPNP2:	PUTBYT ")"
	POPJ P,
;MORE WL ROUTINES

;SEPARATE CONNECTOR PIN BODY LOC (PADDLE) FROM PIN # (PIN, SIDE)
CPNSEP:	MOVE TT,T
	ANDI T,770000
	ANDI TT,7777
	POPJ P,

;MERGE CONNECTOR PIN BODY LOC WITH PIN #
CPNMER:	DPB TT,[POINT 12,T,35]
	POPJ P,

;PRINT CONNECTOR PIN NAME AS SEEN FROM BACK PANEL
BPNPIN:	PUSH P,T	;SAVE OFFSET HERE
	LDB T,[POINT 4,A,3]
	SKIPE T		;CONVERT 0 TO SPACE
	ADDI T,20	;ALL THE REST TO DIGITS
	ADDI T,40
	PUTBYT (T)
	LDB T,[POINT 5,A,8]
	LDB TT,[POINT 6,A,23]
	ADDI T,-1(TT)
	CAILE T,77
	SETZ T,
	PUTBYT @N2L(T)
	MOVEI T,2
	MOVEM T,NDIG
	LDB T,[POINT 6,A,17]
	POP P,TT
	JUMPE TT,NOOFFS
	ADD T,TT
	JUMPLE T,[OUTSTR[ASCIZ/OFFSET CAUSED SLOT NUMBER TO BE ZERO OR NEGATIVE.
/]
		SETZ T,
		JRST NOOFFS]
	CAIG T,=99
	JRST NOOFFS
	OUTSTR[ASCIZ/OFFSET CAUSED SLOT NUMBER TO BE MORE THAN 2 DIGITS.
/]
	MOVEI T,=99
NOOFFS:	PUSHJ P,NDECOUT
	LDB T,[POINT 6,A,29]
	PUTBYT @N2L(T)
	LDB T,[POINT 6,A,35]
	JRST DECOUT

;OUTPUT EDGE PIN TO PARTITION FILE AS NUMBER
CPARTP:	LSH T,-14
	PUTBYT "0"(T)
	MOVEI T,2
	MOVEM T,NDIG
	MOVE T,TT
	LSH T,-5
	TRNE TT,1
	SUBI T,1
	JRST NDECOUT

>;MWL
SUBTTL	CSLTLT,LOCPNC,LOCPNW,PRCNPN -- CONNECTOR PIN PRINTING STUFF

MD,<
CSLTLT:	PUSHJ P,SLTOUT
	JRST CSLTLD
>;MD

MWL,<
PRBCN:	PUSH P,A
	TRZ A,7777
	PUSHJ P,LOCOUT
	POP P,A
	JRST PRCNPN
>;MWL
SUBTTL	DETECT IF THIS PIN NAME IS "WILD"
;CALL WITH PIN NAME IN RH(A)
QUPIN:	PUSH P,A
	LSH A,-14
	ANDI A,77
	MOVE A,N2L(A)
	CAIE A,"U"
	JRST [	POP P,A
		POPJ P,]
	POP P,A
	ANDI A,3777
	PUSH P,B
	IDIVI A,=200
	POP P,B
	CAILE A,2
	TDZA A,A
	ADDI A,1
	JRST CPOPJ1

MWL,<
;THESE ROUTINES SHOULD BE MOVED EVENTUALLY, THEY ARE A FUNCTION OF THE BOARD TYPE

;CALL WITH LESSER OF TWO LOCS IN T
;GREATER IN TT
SEQLOC:	XOR T,TT
	TRNE T,770000		;LETTERS SHOULD BE THE SAME
	POPJ P,			;ELSE NOT IN SEQUENCE
	XOR T,TT
	SUB TT,T
	CAIN TT,1
	AOS (P)
	POPJ P,

CONGIN:	PUSH P,A
	HRRZ A,A
	JUMPE A,CONG1
	TRNN A,2
	JRST [	TRC A,3
		JRST CONG3]
	LSH A,-6
	ANDI A,77
	ADDI A,1
	CAIG A,=18
	JRST [	LSH A,6
		TRO A,1
		DPB A,[POINT 12,(P),35]
		POP P,A
		JRST CPOPJ1]
	LDB A,[POINT 6,(P),23]
	ADDI A,1
	PUSH P,T
	LDB T,[POINT 3,-1(P),11]		;GET EXTENT
	CAIG A,1(T)			;DOES THIS PADDLE EXIST?
	JRST [	POP P,T
		JRST CONG2]
	POP P,T
	POP P,A
	POPJ P,

;VARIOUS FLAVORS OF RETURN FOR CONGIN

CONG1:	HRRZ A,L2N+"A"
CONG2:	LSH A,6
	IOR A,L2N+"A"
	HRRZ A,A		;CLEAR ANY LH GARBAGE
	LSH A,6
	TRO A,1
CONG3:	HRRM A,(P)
	POP P,A
	JRST CPOPJ1
>;MWL
SUBTTL	SLTOUT -- PRINTS DIP BAY/RACK/SLOT #

COMMENT 

|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|
|				   18      21        26    29          35
|                 18		    |   4   |    5    |  3  |     6     |
|___________________________________|_______|_________|_____|___________|
		  |			|	 |	 |	  |
<		  |			|	 |	 |	  |------># SLOT
		  |			|	 |	 |
<		  |			|	 |	 |--------------->L +RACK
		  |			|	 |
<		  |			|	 |----------------------->L RACK
		  |			|
<		  |			|--------------------------------># BAY
		  |
<		  |------------------------------------------------------>NOT USED

SLTOUT:	LDB T,[POINT 4,A,21]
	JUMPE T,.+2
	PUSHJ P,PUTDEC
	LDB TT,[POINT 5,A,26]
MDPC,<	JUMPE TT,CPOPJ	>
	PUTBYT @N2L(TT)
	LDB TTT,[POINT 3,A,29]
	JUMPE TTT,SLTOU1
	ADD TT,TTT
	PUTBYT @N2L(TT)
SLTOU1:	MOVEI T,2
	MOVEM T,NDIG
	LDB T,[POINT 6,A,35]
	JRST NPUTDEC
SUBTTL	CSLTOUT -- PRINTS CONNECTOR PIN BAY/RACK/SLOT #

COMMENT 

|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|
|	    |			   18      21        26    29          35
|     6     |          12	    |   4   |    5    |  3  |     6     |
|___________|_______________________|_______|_________|_____|___________|
      |			|		|	 |	 |	  |
<     |			|		|	 |	 |	  |------># SLOT
      |			|		|	 |	 |
<     |			|		|	 |	 |--------------->L +RACK
      |			|		|	 |
<     |			|		|	 |----------------------->L RACK
      |			|		|
<     |			|		|--------------------------------># BAY
      |			|
<     |			|------------------------------------------------>NOT USED
      |
<     |------------------------------------------------------------------>L PADDLE

MD,<
CSLTOUT:
	JRST SLTOUT			;DO SAME AS BODY LOC.
IFN 0,<;REMOVE BY R HELLIWELL 31 MAR 75
;CONFUSING BECAUSE DISPLAYED AND PLOTTED CONNECTOR PIN DESIGNATOR
;WERE DIFFERENT FROM TYPEIN AND TYPEOUT.
	TRNN A,-1
	POPJ P,
	LDB T,[POINT 3,A,29]
	LDB TT,[POINT 6,A,5]
	TLNN A,4000			;"U" PIN?
	CAILE TT,1(T)			;ON BACK PANEL?
	JRST SLTOUT			;NO, TREAT LIKE A BODY
	LDB T,[POINT 4,A,21]		;SHOW ACTUAL BACKPANEL RACK LETTER
	SKIPE T
	PUSHJ P,PUTDEC
	LDB TT,[POINT 5,A,26]
	LDB T,[POINT 6,A,5]
	ADDI TT,-1(T)
	PUTBYT @N2L(TT)
	LDB T,[POINT 6,A,35]
	JRST PUTDEC
>;IFN 0
>;MD
;CHECK TO MAKE SURE CHRREG IS A LETTER (CONVERTS LOWER CASE)

CHKLET:CAIL CHRREG,"a"		;CHECK FOR LOWER CASE
	CAILE CHRREG,"z"
	CAIA			;NOT LOWER CASE
	SUBI CHRREG,<"a"-"A">	;CONVERT TO UPPER CASE
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	JRST CPOPJ1		;ITS LEGAL

TWOLET:ROT CHRREG,-7*2	;MAKE IT ASCII
	MOVSI NUMREG,-TWOLEN
TWOLT1:	CAME CHRREG,TWOTAB(NUMREG)
	AOBJN NUMREG,TWOLT1
	JUMPGE NUMREG,CPOPJ
	MOVEI NUMREG,40(NUMREG)
	JRST CPOPJ1

TWOTAB:	ASCII/BT/
	ASCII/CB/
	ASCII/CR/
	ASCII/DL/
	ASCII/FC/
	ASCII/TP/
REPEAT 40-<.-TWOTAB>,<ASCII/??/>
TWOLEN__.-TWOTAB

MDPC,<
;THE CANONICAL DIP LOC READER WHERE DIP LOC IS OF FORM L#
;SLTLN -- READS A BAY/RACK/SLOT/DIPLOC OR JUST A DIPLOC
;CALL IS:
;	PUSHJ P,SLTLN
;	JRST ERROR
;	JRST CRLF.ONLY
;MD,<	JFCL	>	;LOC ONLY
;	(BRS,,LOC IN DESTIN)

SLTLN:	SETZM DESTIN
MPC,<	GETCH	>
MD,<	GETNUM
	CAIL NUMREG,20
	POPJ P,
	DPB NUMREG,[POINT 4,DESTIN,3]
>;MD
	CAIN CHRREG,12
	JUMPE NUMREG,CPOPJ1
	PUSHJ P,CHKLET
	POPJ P,
MD,<	PUSH P,D
	SKIPN D,L2N(CHRREG)
	JRST POPDJ
	DPB D,[POINT 5,DESTIN,8]
	GETNUM
	PUSHJ P,CHKLET
	JRST SLTLN1
	JUMPL D,SLTLN3		;GIOQ ILLEGAL FOR BRS
	POP P,D
	JUMPN NUMREG,SLTLN2
	LDB NUMREG,[POINT 5,DESTIN,8]
	SKIPN CHRREG,L2N(CHRREG)
	POPJ P,
	JUMPL CHRREG,[SUB CHRREG,NUMREG
		JRST SLTLN4]
	SUB CHRREG,NUMREG
	JUMPLE CHRREG,SLTLN4
	CAILE CHRREG,7	
	JRST SLTLN4
	DPB CHRREG,[POINT 3,DESTIN,11]
	GETNUM
	JUMPE NUMREG,CPOPJ
	PUSHJ P,CHKLET
	JRST SLTLN8
SLTLN2:	CAILE NUMREG,77
	POPJ P,
	DPB NUMREG,[POINT 6,DESTIN,17]
>;MD
	SKIPN CHRREG,L2N(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 6,DESTIN,23]
	GETNUM
	JUMPE NUMREG,SLTLN5
SLTLN7:	CAILE NUMREG,7777
	POPJ P,
	DPB NUMREG,[POINT 12,DESTIN,35]
MD,<	HLRZ NUMREG,DESTIN
	JUMPN NUMREG,CPOPJ3	;THIS RETURN IF BRS TYPED
>;MD
	JRST CPOPJ2		;THIS RETURN IF PC OR NO BRS

SLTLN5:	LDB NUMREG,[POINT 6,DESTIN,23]
	MOVE NUMREG,N2L(NUMREG)
	LSH NUMREG,7
	IOR CHRREG,NUMREG
	PUSHJ P,TWOLET
	POPJ P,
	DPB NUMREG,[POINT 6,DESTIN,23]
	GETNUM
	JUMPN NUMREG,SLTLN7
	POPJ P,

MD,<
SLTLN1:	POP P,D
	JUMPE NUMREG,CPOPJ
	CAILE NUMREG,7777
	POPJ P,
	DPB NUMREG,[POINT 12,DESTIN,35]
	LDB NUMREG,[POINT 9,DESTIN,8]
	CAIL NUMREG,40
	POPJ P,
	DPB NUMREG,[POINT 24,DESTIN,23]
	JRST CPOPJ2

SLTLN3:	MOVE D,N2L(D)		;GET LETTER BACK
	LSH D,7
	IOR CHRREG,D		;PUT 2 LETTERS IN CHRREG
	POP P,D			;RESTORE D
	PUSHJ P,SLTLN6
	POPJ P,
	JRST SLTLN9

SLTLN4:	PUSHJ P,SLTLN0
	POPJ P,
SLTLN9:	GETNUM
	JUMPN NUMREG,SLTLN7
	POPJ P,

SLTLN8:	PUSH P,NUMREG
	PUSH P,CHRREG
	LDB NUMREG,[POINT 5,DESTIN,8]
	LDB CHRREG,[POINT 3,DESTIN,11]
	PUSHJ P,SLTLN0
	JRST [	POP P,CHRREG
		POP P,NUMREG
		POPJ P,]
	POP P,CHRREG
	POP P,NUMREG
	JRST SLTLN7

SLTLN0:	ADD CHRREG,NUMREG	;GET NUMBER BACK
	MOVE NUMREG,N2L(NUMREG)	;GET FIRST LETTER BACK
	MOVE CHRREG,N2L(CHRREG)	;GET SECOND LETTER BACK
	LSH NUMREG,7
	IOR CHRREG,NUMREG
SLTLN6:	LDB NUMREG,[POINT 4,DESTIN,3]
	JUMPN NUMREG,CPOPJ
	PUSHJ P,TWOLET
	POPJ P,
	DPB NUMREG,[POINT 24,DESTIN,23]
	JRST CPOPJ1

POPDJ:	POP P,D
	POPJ P,
>;MD
>;MDPC

;GETSLT -- READS A BAY/RACK/SLOT #

;CALL IS:
;	PUSHJ P,GETSLT
;	JRST ERROR
;	JUMPE TT,CRLF.ONLY	;THIS IS OPTIONAL, OBVIOUSLY
;	MOVEM TT,BRS

MWL,<
GTSLTT:	SETZM DESTIN
	TGETNUM
	JRST GTSLT1
>;MWL

GETSLT:	SETZM DESTIN
	GETNUM
GTSLT1:	DPB NUMREG,[POINT 4,DESTIN,3]
	PUSHJ P,CHKLET
	JRST [	JUMPE NUMREG,CPOPJ1
		POPJ P,]
	SKIPG CHRREG,L2N(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 5,DESTIN,8]
	GETNUM
	JUMPN NUMREG,GTSLT2
	PUSHJ P,CHKLET
	POPJ P,
	SKIPG CHRREG,L2N(CHRREG)
	POPJ P,
	LDB NUMREG,[POINT 5,DESTIN,8]
	SUB CHRREG,NUMREG
	JUMPL CHRREG,CPOPJ
	CAILE CHRREG,7
	POPJ P,
	DPB CHRREG,[POINT 3,DESTIN,11]
	GETNUM
GTSLT2:	DPB NUMREG,[POINT 6,DESTIN,17]
	JRST CPOPJ1
MD,<
;	PUSHJ P,RDLLN
;	    ERROR RETURN
;	    SUCCESS RETURN

RDLLN:	PUSHJ P,CHKLET
	POPJ P,
	SKIPG CHRREG,L2N(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 12,DESTIN,29]
	GETNUM
	JUMPN NUMREG,CKCR
	PUSHJ P,CHKLET
	POPJ P,
	LDB TT,[POINT 6,DESTIN,29]
	DPB TT,[POINT 6,DESTIN,23]
	SKIPG CHRREG,L2N(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 6,DESTIN,29]
	GETNUM
	JUMPE NUMREG,CPOPJ
CKCR:	LDB TT,[POINT 12,DESTIN,29]
	XOR TT,L2N+"U"
	TRNN TT,-1			;SAME LETTER?
	JRST [	CAILE NUMREG,3777	;YES, LEGAL NUMBER?
		POPJ P,			;NO
		HRRZ TT,L2N+"U"
		DPB TT,[POINT 6,DESTIN,23]
		TRO NUMREG,4000
		DPB NUMREG,[POINT 12,DESTIN,35]
		JRST CPOPJ1]
	CAILE NUMREG,77
	POPJ P,
	DPB NUMREG,[POINT 6,DESTIN,35]
	JRST CPOPJ1
>;MD

LOCOUT:	LDB TTT,[POINT 6,A,23]
	JUMPE TTT,CPOPJ			;JUMP IF ILLEGAL
	MOVEI T,2
	TRNE A,7777			;CONNECTOR?
	JRST [	MOVEM T,NDIG		;    NO, PRINT DIP LOC
		PUTBYT @N2L(TTT)
		LDB T,[POINT 12,A,35]
		JRST NPUTDEC]
	LSH TTT,-1			;YES, PRINT JACK
	PUTBYT @N2L(TTT)		;GROUP
	PUTBYT "J"
	TRNN A,10000			;0 IS JACK 1, 1 IS JACK 2
	SUBI T,1
	JRST PUTDEC			;JACK #

MDPC,<
CSLTLP:
MD,<
	PUSHJ P,CSLTOUT
CSLTLD:	HLRZS A
	PUSH P,A
	TRZ A,7777
	PUSHJ P,LOCOUT
	POP P,A
	PUTBYT "-"
>;MD
	MOVEI T,2
	MOVEM T,NDIG
	LDB T,[POINT 12,A,35]
	JRST NPUTDEC
MD,<
GTCONP:	SETZM DESTIN
	GETNUM
	CAIN CHRREG,12
	JUMPE NUMREG,CPOPJ1		;CARRIAGE RETURN ONLY
	JUMPN NUMREG,CPOPJ
	PUSHJ P,CHKLET			;CHECK FOR LETTER
	POPJ P,
	SKIPN CHRREG,L2N(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 5,DESTIN,22]
	GETNUM
	JUMPN NUMREG,CPOPJ
	CAIE CHRREG,"J"
	POPJ P,
	GETNUM
	JUMPE NUMREG,CPOPJ
	CAIN CHRREG,"-"
	CAILE NUMREG,2
	POPJ P,
	SUBI NUMREG,1
	DPB NUMREG,[POINT 1,DESTIN,23]
	GETNUM
	JUMPE NUMREG,CPOPJ
	CAILE NUMREG,=26
	POPJ P,
	DPB NUMREG,[POINT 12,DESTIN,35]
	CAIE CHRREG,12
	POPJ P,
	JRST CPOPJ2			;ALL'S WELL THAT ENDS WELL	
>;MD
>;MDPC

MWL,<
WLOCOUT:JRST LOCOUT

GETLOC:	GETCH
	PUSHJ P,CHKLET
	POPJ P,				;NOT A LETTER
	SKIPN CHRREG,L2N(CHRREG)
	POPJ P,
	HRLM CHRREG,(P)
	GETNUM
	JUMPN NUMREG,[	CAILE NUMREG,=30	;HERE FOR DIP LOC
			POPJ P,			;ONLY 30 DIP SLOTS PER GROUP
			HLRZ TT,(P)
			LSH TT,14
			TRO TT,(NUMREG)
			JRST CPOPJ2]
	PUSHJ P,CHKLET			;HERE TO DO CONNECTOR PIN
	POPJ P,
	CAIE CHRREG,"J"
	POPJ P,
	GETNUM
	JUMPE NUMREG,CPOPJ
	CAIN CHRREG,"-"
	CAILE NUMREG,2			;CHECK FOR LEGAL JACK #
	POPJ P,
	HLRZ CHRREG,(P)
	LSH CHRREG,1			;MAKE ROOM FOR THE JACK BIT
	SUBI NUMREG,1			;REDUCE TO ONE BIT
	IOR CHRREG,NUMREG
	LSH CHRREG,14
	HRLM CHRREG,(P)
	GETNUM
	JUMPE NUMREG,CPOPJ
	CAILE NUMREG,=26		;ONLY 26 PINS PER JACK
	POPJ P,
	HLRZ TT,(P)
	TRO TT,(NUMREG)
	JRST CPOPJ1	

LOCPNW:
LOCPNC:	PUSHJ P,LOCOUT
	HLRZ A,A
	PUTBYT "-"
PRCNPN:	LDB T,[POINT 12,A,35]
RAYDP1:	MOVEI TTT,2
	MOVEM TTT,NDIG
	JRST NPUTDEC

RAYCON:	PUSHJ P,LOCOUT
	PUTSTR [ASCIZ /   /]		;3 SPACES
	HLRZS A
	JRST PRCNPN

PADPRT:	MOVEI T,(G)
	LSH T,-1
	PUTBYT @N2L+1(T)
	PUTBYT "J"
	MOVEI T,1
	TRNE G,1
	MOVEI T,2
	JRST PUTDEC

RAYDIP:	PUSH P,T			;HAS SOME BITS
	PUSHJ P,LOCOUT
	PUTSTR [ASCIZ /   /]		;3 SPACES
	POP P,T
	TRZE T,L1416
	ADD A,[1,,0]
	HLRZ T,A
	JRST RAYDP1
>;MWL
BEND PG21
;PG21 WIREWRAP BOARD
MDWL,<
.ADD(ALLWW,PG21,WP21TV)
.ADD(ALLWW,PG21-60,LP21TV)
.ADD(ALLWW,PG21-180,LP21TV)
MWL,<

BEGIN WPG21

comment 

All calculations are done from the dip side.

(0,0) at lower left hand corner in left handed coordinate system.
Dip sockets are arranged in 5x6 groups.  These 30 dip groups come
in pairs.  Each group comes with a pair of Scotch Flex(R) connectors
labeled "J1" and "J2".  There can be up to 6 30 dip groups on one
board.  The horizontal spacing between groups is 2.700".

A30(8) is at (0,0).  AJ2-26 is at (500,6100).  AJ1-26 is at (500,6400).

It follows that B30(8) is at (2700,0)


NGRPS__6		;PG21-180 HAS 6 GROUPS
GRPCOL__5		;# COLS IN GROUP
GRPROW__6		;# COLUMNS IN GROUP
UMLCOL__GRPROW		;UML INTERCHANGES ROWS AND COLUMNS
UMLROW__GRPCOL
MAXDIP__GRPROW*GRPCOL	;# DIPS IN GROUP
GXOFST__=2700		;2.700" GROUP HORIZONTAL SPACING
XDIPSP__ =500		; .500" DIP HORIZONTAL SPACING
YDIPSP__=1000		;1.000" DIP VERTICAL SPACING
XPINSP__ =300		; .300" DIP PIN HORIZONTAL SPACING
YPINSP__ =100		; .100" DIP PIN VERTICAL SPACING
PXOFST__ =500		; .500" X OFFSET FOR POWER PIN
PYOFST__ =800		; .800" Y OFFSET FOR POWER AND GROUND PINS
JXOFST__ =500		; .500" X OFFSET FOR JACKS
JYOFST__=6100		;6.100" Y OFFSET FOR J2
JYOFS1__ =300		; .300" Y OFFSET FROM J2 TO J1
PXPNSP__ =100		; .100"	CONNECTOR PIN VERTICAL SPACING
PYPNSP__ =100		; .100" CONNECTOR PIN HORIZONTAL SPACING

;SOME BYTE POINTERS FOR EXTRACTING FIELDS

DEFINE %DIPP<[POINT  6,A,17]>	;DIP PIN #
DEFINE %DIPG<[POINT  6,A,23]>	;DIP GROUP
DEFINE %DIPS<[POINT 12,A,35]>	;DIP SLOT

DEFINE %CONP<[POINT 12,A,35]>	;CONNECTOR PIN #
DEFINE %CONG<[POINT  5,A,22]>	;CONNECTOR GROUP
DEFINE %CONJ<[POINT  1,A,23]>	;CONNECTOR JACK

^WP21TV__.	;TRANSFER VECTOR FOR DOUBLE HEIGHT DEC BOARDS

	-1		;this is a wirewrap board
	JRST WWINIT	;WWINIT
	JRST MAPRC
	JRST MAPPAD
	JRST PINMAP	
	JRST PINBIT	
	JRST VGCON	
	JRST DISTPP	;POINT TO POINT WIRING
	JRST FPWR
	JRST FGND
	JRST PGPRTM
	JRST PGPRNT
	JRST GNDCLR
	JRST WAGGND
	JRST GNDOUT
	JRST VCCOUT
	JRST RAYGEN
	UMLROW*NGRPS	;NROWS		    (USED FOR UML ONLY)
	UMLCOL		;NCOLS		    (USED FOR UML ONLY)
	0		;NCLPRG
	MAXDIP*NGRPS	;DIPSLT_NROWS*NCOLS (USED FOR UML ONLY)
	SETPAD(NGRPS*2)	;NPADS		    (USED FOR UML ONLY)
	XWD -=26,1	;PADLET		    (USED FOR UML ONLY)
	XWD -1,0	;PADPIN		    (USED FOR UML ONLY)
	=10		;FRACTN
	=200*2		;WRAPMG .200" INSULATION AROUND EACH POST
	=1500		;POSTMG .750" BARE WIRE AROUND EACH POST
	0		;NEXTR
CHECK WP21TV,WTVLEN

;TABLES FOR MAPIT

;**************************************** DIP PINS

DEFINE XY(X,Y)
<	X*XPINSP,,Y*YPINSP
>

PINTAB:
FOR Y_7, 0, -1
<	XY(1,Y)
>
FOR Y_0, 7, 1
<	XY(0,Y)
>
;**************************************** DIP LOCATIONS

DEFINE XY(X,Y)
<	X*XDIPSP,,Y*YDIPSP
>

DIPLOC:
 FOR Y_5, 0, -1
<FOR X_4, 0, -1
<	XY(X,Y)
>>
;**************************************** SCOTCH-FLEX PINS

DEFINE XY(X,Y)
<	X*PXPNSP,,Y*PYPNSP
>

FLXPIN:
 FOR Y_1, 0, -1
<FOR X_0, =12, 1
<	XY(X,Y)
>>
;WWINT FIGURES OUT IF THIS IS A 60 OR 180 SLOT BOARD

WWINIT:	MOVE T,WWTYP		;GET THE BOARD TYPE
	MOVE T,WNAMES(T)
	MOVE TT,1(T)
	TRNN TT,1771		;CHECK FOR NULL FIFTH CHARACTER
	JRST IS180		;PG21 IS AN ALIAS FOR PG21-180
	MOVE TT,2(T)		;GET THE LAST CHARCTERS OF BOARD NAME
	CAMN TT,[ASCIZ /60/]
	JRST IS60
	CAMN TT,[ASCIZ /180/]
	JRST IS180
	OUTSTR [ASCIZ /I DON'T KNOW ABOUT THIS ONE, WILL SELECT 180.
/]
IS180:	POPJ P,			;180 IS THE DEFAULT

IS60:	MOVEI T,UMLROW*2
	MOVEM T,NROWS
	MOVEI T,MAXDIP*2
	MOVEM T,DIPSLT
	MOVEI T,2*2
	MOVEM T,NPADS
	POPJ P,

MAPIT:	JUMPL A,CONMAP
	LDB TT,%DIPG		;GROUP LETTER
	LDB T,%DIPS		;DIP #
	JUMPE T,CPOPJ
	CAILE T,MAXDIP		;TOO MANY DIPS FOR SLOT
	POPJ P,
	MOVE T,DIPLOC-1(T)	;XY OF DIP SLOT
	IMULI TT,GXOFST		;X FUDGE FOR GROUP
	MOVSI TT,-GXOFST(TT)
	ADD T,TT		;LOCATION OF DIP ON BOARD
	LDB TT,%DIPP		;PIN #
	TLNE A,MAPPWR!MAPGND	;WANT POWER OR GROUND?
	JRST PINPGP		;YES, RETURN FIX IT UP
	CAIE B,=14		;14 PIN DIP?
	JRST MAPIT0		;NO, DON'T NEED TO FUTZ AROUND
	ADDI TT,1
	ADD A,[1,,0]
	TLO A,PLUS1
MAPIT0:	ADD T,PINTAB-1(TT)	;ADD EXTRA XY FOR PIN
	SETZB TT,TTT		;FLUSH AWAY THOSE GOODIES
	JRST CPOPJ2

;POWER AND GROUND PIN FOR DIP

PINPGP:	JUMPN TT,CPOPJ		;THE PIN # SHOULD BE ZERO
	ADDI T,PYOFST		;FIX THE Y
	TLNN A,MAPPWR
	JRST [	MOVSI TT,GND	;HE WANTS GND
		JRST PINPG1]
	ADD T,[PXOFST,,0]	;HE WANTS PWR
	MOVSI TT,PWR
PINPG1:	SETZ TTT,
	JRST CPOPJ2

;HERE FOR CONNECTOR PINS

CONMAP:	AOS (P)
	LDB T,%CONG		;GROUP
	IMULI T,GXOFST
	MOVSI T,-GXOFST(T)	;XY OF GROUP
	ADD T,[JXOFST,,JYOFST]	;LOC OF J2
	TRNN A,10000
	ADDI T,JYOFS1		;FUDGE FOR J1
	LDB TT,%CONP		;PIN #
	JUMPE TT,CPOPJ
	CAILE TT,=26		;REASONABLE # OF PINS
	POPJ P,
	ADD T,FLXPIN-1(TT)
	SETZB TT,TTT
	JRST CPOPJ1

;THE ROUTINES WHICH CALL MAPIT

PINBIT:	PUSHJ P,MAPIT
	JFCL			;DIP ERROR
	SETZ TT,		;CONNECTOR ERROR
	POPJ P,			;HAPPINESS

PINMAP:	PUSHJ P,MAPIT
	JRST PINERR
	JRST CONERR
	JRST CPOPJ1

CONERR:	LDB T,%CONG		;CONNECTOR GROUP
	OUTCHR N2L(T)
	OUTCHR ["J"]
	LDB T,%CONJ
	ADDI T,1
	PUSHJ P,NUMPNT		;JACK
	OUTCHR ["-"]
	LDB T,%CONP
	PUSHJ P,NUMPNT		;PIN
CONER1:	OUTSTR [ASCIZ / MAPPING ERROR
/]
	POPJ P,
		
PINERR:	LDB T,%DIPG		;FORM A#(#)
	OUTCHR N2L(T)
	LDB T,%DIPS		;SLOT #
	PUSHJ P,NUMPNT
	OUTCHR["("]
	LDB T,%DIPP		;PIN #
	PUSHJ P,NUMPNT
	OUTCHR [")"]
	JRST CONER1

MAPRC:	HLRZ TT,T		;(1,1) IS DIP IN UPPER LEFT HAND CORNER
	SOJL TT,CPOPJ
	CAML TT,NROWS
	POPJ P,
	HRRZS T			;ROW IN TT, COL IN T
	SOJL T,CPOPJ
	CAML T,NCOLS		;(0,0) IS NOW IN UPPER LEFT
	POPJ P,
	IDIVI TT,GRPCOL		;GROUP IN TT, SUBROW IN TTT
	ADDI TT,1
	LSH TT,14
	SUBI TTT,UMLROW-1	;TRANSLATE
	MOVNS TTT		;REFLECT
	IMULI T,UMLROW
	ADDI T,1(TTT)
	IOR T,TT		;OR IN GROUP
	JRST CPOPJ1

MAPPAD:	MOVEI T,1(T)
	LSH T,14
	IORI T,(TT)
	POPJ P,

FPWR:	TLZ A,PLUS1!PLUS2!77
	SKIPGE A
	PUSHJ P,FPGC		;FIND POWER AND GROUND FOR CON
	TLO A,MAPPWR
	POPJ P,

FGND:	TLZ A,PLUS1!PLUS2!77
	SKIPGE A
	PUSHJ P,FPGC
	TLO A,MAPGND
	POPJ P,

FPGC:	MOVEI T,(A)		;GET SCOTCH FLEX PIN #
	TRZ T,770000
	SOS T
	IDIVI T,=13
	ANDI A,760000		;GET GROUP IN A
	LSH A,-1
	IOR A,[	REPEAT 4,<2
>
		REPEAT 5,<3
>
		REPEAT 4,<4
>				](TT)
	POPJ P,

PGPRTM:	SETOM PMINUS#
	CAIA
PGPRNT:	SETZM PMINUS
	JUMPL A,PGCPNT		;JUMP FOR CONNECTOR
	LDB T,%DIPG		;LETTER PART OF SLOT LOCATION
	PUTBYT @N2L(T)
	MOVEI T,2		;TWO DIGITS FOR SLOT #
	MOVEM T,NDIG
	LDB T,%DIPS
	PUSHJ P,NDECOUT		;SLOT #
	PUTBYT "("
	TLNN A,MAPPWR!MAPGND
	JRST NPGPNT
	TLNN A,MAPPWR
	SKIPA T,["G"]
	MOVEI T,"V"
	PUTBYT @T
PGPN1:	PUTBYT ")"
	POPJ P,

NPGPNT:	LDB T,%DIPP		;PIN #
	SKIPN PMINUS
	JRST NPGPN1
	TLNE A,PLUS1
	JRST [	PUSHJ P,DECOUT
		PUTBYT "-"
		JRST PGPN1]
NPGPN1:	TLNE A,PLUS1
	SUBI T,1		;SUBTRACT 1 FOR 14 PIN DIP #
	PUSHJ P,DECOUT
	TLNE A,PLUS1
	PUTBYT "+"
	TLNE A,PLUS2
	PUTSTR [ASCIZ /+2??????????/]
	JRST PGPN1

;PRINTS CONNECTOR PIN

PGCPNT:	LDB T,%CONG
	PUTBYT @N2L(T)
	PUTBYT "J"
	LDB T,%CONJ
	PUSHJ P,DECOUT
	PUTBYT "-"
	LDB T,%CONP
	JRST DECOUT

RAYGEN:	JUMPL A,RAYRP1
	LDB T,%DIPG
	PUTBYT @N2L(T)
	MOVEI T,2
	MOVEM T,NDIG
	LDB T,%DIPS		;SLOT #
	PUSHJ P,NDECOUT
	PUTSTR [ASCIZ /   /]	;3 SPACES
	MOVEI T,2		;ASSUME NOT POWER OR GROUND
	MOVEM T,NDIG
	LDB T,%DIPP
	TLNN A,MAPPWR!MAPGND	;ONLY GROUND AND POWER CAN BE GENERATED
	JRST NPUTDEC		;NOT POWER OR GROUND
	PUTBYT "0"
	MOVEI T,"V"
	TLNN A,MAPPWR
	MOVEI T,"G"
	PUTBYT (T)
	POPJ P,

RAYRP1:	OUTSTR [ASCIZ /CONNECTOR BECAME GENERATED PIN
/]
	JRST ERRET

VGCON:	POPJ P,

FOR NAME (GNDCLR,WAGGND,GNDOUT,VCCOUT)
<NAME:	OUTSTR [ASCIZ /NAME NOT IMPLEMENTED FOR THE LEBEL BOARD
/]
	JRST ERRET
>
BEND WPG21
>;MWL
>;MDWL
