;<PLOT>PCARD.FAI.36,  6-NOV-75 19:09:07, EDIT BY HELLIWELL
;ASK FR80, ASK TRW(PC), ASK SCALE(PC), ASK OFFSET(PC), ASK PLOT
;SET PLOT FILE INPUT
FRSET:	TRNN FLAG,FR80
	POPJ P,
MPC,<	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/AT FR80 SCALE OF 3.7 FRAME IS ABOUT 22X17.
/]
	OUTSTR[ASCIZ/FR80 SCALE*10 ?/]
>;MPC
MD,<	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/AT FR80 SCALE OF 3.7 SIZE C JUST FITS (22X17).
/]
	OUTSTR[ASCIZ/FR80 SCALE*10 ?/]
>;MD
	PUSHJ P,DECIN
	JRST [	OUTSTR[ASCIZ/HO HO HO!
TRY AGAIN!/]
		PUSHJ P,IERR
		JRST .-1]
	JUMPN TTT,SETFDG
	OUTSTR[ASCIZ/USING 37!
/]
	MOVEI TTT,=37
SETFDG:	MOVEM TTT,FRFUDG
	TLNN FLAG,QUICK			;IF QUICK, OR
	CAIN TTT,=37			;DID HE USE STANDARD?
	POPJ P,				;YES, THAT'S ALL
	OUTSTR[ASCIZ/FR80 FRAME IS /]
	MOVE T,[FRMAX*=50]
	IDIV T,FRFUDG
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/ X /]
	MOVE T,[(FRMAX-2*FRYFDG)*=50]
	IDIV T,FRFUDG
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/ INCHES.
/]
	POPJ P,

MPC,<
TRWSET:	MOVEI T,MAXRET
	MOVEM T,RETMAP-1(T)			;RESET MAPPINGS!
	SOJG T,.-1
	TRNN FLAG,MAPIT				;MAPPING REQUESTED?
	JRST CHKSYM				;NO
MAPLOP:	OUTSTR[ASCIZ/PAD TYPE NUMBER?/]
	PUSHJ P,DECIN
	JRST [MAPLS1:OUTSTR[ASCIZ/HO HO HO!
/]
		PUSHJ P,IERR
		JRST MAPLOP]
	JUMPE TTT,CHKSYM			;QUIT ON 0
	ADDI TTT,DONUT				;OFFSET TO WHEEL POS
	CAILE TTT,MAXRET			;LEGAL
	JRST MAPLS1
	HRLM TTT,(P)
MAPLP1:	OUTSTR[ASCIZ/WHEEL POS?/]
	PUSHJ P,DECIN
	JRST [MAPLS2:OUTSTR[ASCIZ/HO HO HO!
/]
		PUSHJ P,IERR
		JRST MAPLP1]
	SKIPE TTT
	CAILE TTT,MAXRET
	JRST MAPLS2
	HLRZ T,(P)
	MOVEM TTT,RETMAP-1(T)			;SET MAPPING
	JRST MAPLOP

CHKSYM:	TRNN FLAG,ADDSYM			;ADDING SYMBOLS?
	POPJ P,					;NO
GERB,<	OUTSTR[ASCIZ/SORRY, TEXT NOT AVAILABLE YET.
/]
>;GERB
NOGERB,<
	OUTSTR[ASCIZ/SYMBOL DEFINITIONS LIVE FOR EVER (IN THIS CORE IMAGE).
BE SURE TO MAKE A SKETCH OF THE SYMBOL INDICATING THE "D" CODE.
/]
	MOVEI A,=60		;START AT 60
CHRDEF:	MOVEI B,177		;SCAN TABLE FOR THIS ONE
	CAME A,ONETAB(B)	;THERE ALREADY?
	SOJGE B,.-1		;NO, LOOP
	JUMPGE B,ISDEF		;FIND ONE?
	OUTCHR["D"]
	MOVE T,A
	PUSHJ P,DECOUT
	OUTCHR["?"]
	PUSHJ P,GETCH
	OUTSTR[ASCIZ/
/]
	ANDI T,177
	CAIN T,12
	POPJ P,				;QUIT ON CRLF
	SKIPE ONETAB(T)
	JRST [	OUTSTR[ASCIZ/ALREADY DEFINED AS "D/]
		MOVE T,ONETAB(T)
		PUSHJ P,DECOUT
		OUTSTR[ASCIZ/"
/]
		JRST CHRDEF]
	MOVEM A,ONETAB(T)
	JRST NEWDEF
ISDEF:	OUTCHR["D"]
	MOVE T,A
	PUSHJ P,DECOUT
	OUTCHR["="]
	OUTCHR B
	OUTSTR[ASCIZ/
/]
NEWDEF:	CAIGE A,=99
	AOJA A,CHRDEF				;LOOP UP TO 99
	POPJ P,
>;NOGERB

GETSCL:	SKIPE TTT,SCALE1
	JRST TYPSIZ
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/SCALE FACTOR?/]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/SCALE?/]
	PUSHJ P,DECIN
	JRST [	PUSHJ P,IERR
		JRST GETSCL]
	JUMPN TTT,TYPSIZ
	MOVEI TTT,1
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/USING SIZE 1!
/]
TYPSIZ:	MOVEM TTT,NSCALE
	POPJ P,

GETOFF:
STANFO,<TRNE FLAG,DOTAPE
	OUTSTR[ASCIZ/NOTE:DRILL TAPE PROBABLY NEEDS ROTATION AND SPECIAL OFFSET-SEE DRILL
TAPE INFO IN SUDS.RPH[UP,DOC]
/]>;STANFO
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/X,Y OFFSET (IN INCHES, DECIMAL POINT OK!)?/]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/OFFSET?/]
	PUSHJ P,MILIN
	CAIE T,","
	JRST [	CAIN T,12
		JUMPE TTT,DEFOFF
	ILLOUT:	OUTSTR[ASCIZ/HO, HO, HO!!
/]
		PUSHJ P,IERR
		JRST GETOFF]
NOCMU,<		MOVEM TTT,XOFF >
CMU,<		IMUL TTT,5MIL2INC
		HLREM TTT,XOFF
>;CMU
	PUSHJ P,MILIN
	CAIE T,12
	JRST ILLOUT
NOCMU,<		MOVEM TTT,YOFF >
CMU,<		IMUL TTT,5MIL2INC
		HLREM TTT,YOFF
>;CMU
	TRNE FLAG,FR80
	TLNE FLAG,QUICK
	POPJ P,
	OUTSTR[ASCIZ/OFFSET IS IGNORED FOR FR80 OUTPUT!
/]
	POPJ P,

DEFOFF:	TRNE FLAG,DOMAG
	JRST TRWOFF
	SETZM XOFF
	SETZM YOFF
	POPJ P,

TRWOFF:
GERB,<	OUTSTR[ASCIZ/USING 10 X 8.
/]
	MOVEI T,=10000/5
	MOVEM T,XOFF
	MOVEI T,=8000/5
	MOVEM T,YOFF
>;GERB
NOGERB,<
	OUTSTR[ASCIZ/USING 12 X 10!
/]
	MOVEI T,=12000/5
	MOVEM T,XOFF
	MOVEI T,=10000/5
	MOVEM T,YOFF
>;NOGERB
	POPJ P,
>;MPC
;PRINT MAX X,Y'S AND BIGPAD (PC)
MPC,<
PSIZE:	OUTSTR[ASCIZ/PUT PEN AT 0,0.
FROM FILE, MIN X= /]
	MOVE T,SMLX
	MOVE TT,XOFF
	PUSHJ P,POSOUT
	OUTSTR[ASCIZ/ MAX X= /]
	MOVE T,LRGX
	MOVE TT,XOFF
	PUSHJ P,POSOUT
	OUTSTR[ASCIZ/ MIN Y= /]
	MOVE T,SMLY
	MOVE TT,YOFF
	PUSHJ P,POSOUT
	OUTSTR[ASCIZ/ MAX Y= /]
	MOVE T,LRGY
	MOVE TT,YOFF
	PUSHJ P,POSOUT
	OUTSTR[ASCIZ/
/]
	MOVE T,LRGX
	SUB T,SMLX
	CAILE T,=30000*2/5
	TRNN FLAG,%DOPLT
	CAIA
	OUTSTR[ASCIZ/THIS WILL OVERFLOW THE PLOTTER!!!!!!
/]
	SKIPN T,XOFF
	JRST NXOFF
	OUTSTR[ASCIZ/X OFFSET = /]
	IMULI T,5
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/   /]
NXOFF:	SKIPN T,YOFF
	JRST NYOFF
	OUTSTR[ASCIZ/Y OFFSET = /]
	IMULI T,5
	PUSHJ P,MILOUT
	CAIA
NYOFF:	SKIPE XOFF
	OUTSTR[ASCIZ/
/]
	SKIPGE T,BIGPAD
	POPJ P,
	OUTSTR[ASCIZ/BIGPAD = /]
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/
/]
	POPJ P,

POSOUT:	ASH T,-1
	SCALE(T)
	ADD T,TT
	IMULI T,5
	JRST MILOUT
              
         
;SET CHARACTER SCALE(PC), ASK DRILL PLOT(PC), SETUP TRW OUTPUT
CHRSCL:	MOVEI T,=120/5		;HEIGHT OF SIZE 5 (DEFAULT FOR TITLE LINES
	IMUL T,NSCALE		;SCALE IT
	MOVEM T,MTAB		;SET IT
	MOVSI C,-4
	SETZM MTAB+1(C)
	AOBJN C,.-1
	SETZM ANYTXT
GERB,<	TRNE FLAG,DOMAG		;GERBER TAPE?
	POPJ P,
>;GERB
	TLNN FLAG,TFLUSH	;FLUSHING TEXT?
	TRNE FLAG,DOTAPE	;DOING DRILL TAPE?
	POPJ P,
	MOVEI C,1
	OUTSTR[ASCIZ/CHAR	"M"	 HEIGHT
SCALE	CODE	(IN MILS, BEFORE SCALING)
0	M50	  120
/]
CHRSC1:	MOVE T,C
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/	M5/]
	MOVE T,C
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/	  /]
	PUSHJ P,DECIN
	JRST CHRLOS
	IMUL TTT,NSCALE		;SCALE IT
	MOVE T,TTT
	IDIVI T,5
	JUMPN TT,[OUTSTR[ASCIZ/MUST BE MULTIPLE OF 5 MILS!
/]
		JRST CHRSC1]
	MOVEM T,MTAB(C)		;STO THIS FOR CALCOMP
	TRNN FLAG,DOMAG		;TRW OUTPUT?
	JRST CHRSC2
	IDIVI T,3
	JUMPE TT,CHRSC2
	OUTSTR[ASCIZ/MUST BE MULTIPLE OF 15 MILS FOR TRW!!
/]
	JRST CHRSC1

CHRSC2:	CAIGE C,4		;DONE LAST?
	AOJA C,CHRSC1
	SETZM ANYTXT		;NO TEXT YET
	POPJ P,

CHRLOS:	CAIN T,ALTMOD
	JRST [	OUTSTR[ASCIZ/
/]
		POPJ P,]
	PUSHJ P,IERR
	JRST CHRSC1

PSETUP:	TRC FLAG,DOMAG!DOTAPE
	TRCN FLAG,DOMAG!DOTAPE	;DRILL TAPE AND TRW OUTPUT?
	TRO FLAG,TRWDRL		;YES, MAKE DRILL PLOT
	TRNE FLAG,TRWDRL	;IF DRILL PLOT
	TRZ FLAG,PLANE		;TURN OFF PLANE BIT
	TRNE FLAG,PLANE		;IS IT AN INNER PLANE?
	OUTSTR[ASCIZ/THIS IS AN INNER PLANE.
/]
	TRNN FLAG,DOMAG		;DOING MAGTAPE?
	JRST CHKDRL		;NO ASK ABOUT DRILL TAPE
	INIT TRWCHN,10		;FULL WORD MODE
	'DSK   '
	XWD MAGBUF,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DSK!
/]
		EXIT 1,
		JRST .-3]
NOGERB,<MOVEI T,6	>	;6 BIT BYTES
GERB,<	MOVEI T,4	>	;4 BIT BYTES
	DPB T,[POINT 6,MAGBUF+1,11]
	MOVEI T,MAGBFR
	EXCH T,.JBFF
	OUTBUF TRWCHN,2
	MOVEM T,.JBFF
	MOVSI T,EXTTRW
	PUSHJ P,FILSET		;SET DEFAULT NAME
	ENTER TRWCHN,FILNAM
	JRST [	OUTSTR[ASCIZ/TRW ENTER FAILED!
/]
		TRZ FLAG,DOMAG	;TRY TO IGNORE IT
		RELEASE TRWCHN,
		EXIT 1,
		JRST CHKDRL]
GERB,<	SETZM GERBX		;INITIALIZE POSITION TO
	SETZM GERBY		;LOWER LEFT
>;GERB
	INIT LST,0		;LISTING FILE
	'DSK   '
	XWD LSTHD,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DSK!
/]
		EXIT 1,
		JRST .-3]
	MOVEI T,LSTBUF
	EXCH T,.JBFF
	OUTBUF LST,1
	MOVEM T,.JBFF
	MOVSI T,EXTLST
	PUSHJ P,FILSET		;SET DEFAULT NAME
	ENTER LST,FILNAM
	JRST [	OUTSTR[ASCIZ/LOG ENTER FAILED!
/]
		TRZ FLAG,DOMAG	;TRY TO IGNORE IT
		RELEASE LST,
		EXIT 1,
		JRST CHKDRL]
;TRW MESSAGES(PC), DRILL TAPE SETUP(PC), RETICLE SELECT ROUTINE(PC)
	PUSHJ P,INLMES
	ASCIZ/FILE:	/
	MOVE TT,SAVNAM
	PUSHJ P,LSTSIX
	MOVEI TTT,"."
	PUSHJ P,LSTCHR
	MOVE TT,SAVEXT
	PUSHJ P,LSTSIX
	MOVEI TTT,"["
	PUSHJ P,LSTCHR
	SKIPN TT,SAVPPN
	DSKPPN TT,
	MOVEM TT,SAVPPN
	HRRI TT,0
	PUSHJ P,LSTLJS
	MOVEI TTT,","
	PUSHJ P,LSTCHR
	HRLZ TT,SAVPPN
	PUSHJ P,LSTLJS
	PUSHJ P,INLMES
	ASCIZ/]					FILE # ___
CONTENTS:   /		;SETUP FOR TITLES
GERB,<	SOS T,MAGBUF+2
	IDIVI T,9
	IMULI T,6
	ADDI T,1
	MOVEM T,MAGBUF+2
	MOVEI T,600
	HRLM T,MAGBUF+1
ASKHI:	OUTSTR[ASCIZ/BOARD SIZES:
SINGLE HEIGHT	1
DOUBLE HEIGHT	2
QUAD HEIGHT	3
HEX HEIGHT	4
SPECIAL		5

BOARD SIZE ?/]
	PUSHJ P,DECIN
	JRST [	OUTSTR[ASCIZ/HO, HO, HO.
/]
		PUSHJ P,IERR
		JRST ASKHI]
	MOVE T,TTT
	ROT T,-6
	PUSHJ P,MAGPUT
	ROT T,6
	PUSHJ P,MAGPUT
	OUTSTR[ASCIZ/PLOT TITLE (ONE LINE) ?
/]
	PUSHJ P,GETMES
	MOVE TTT,[POINT 7,STRING]
TITLOP:	ILDB T,TTT
	SKIPE T
	SUBI T,40
	PUSHJ P,MAGPUT
	JUMPN T,TITLOP
	MOVE T,[POINT 7,STRING]
	PUSHJ P,LSTSTR		;OUT TO LISTING FILE
	SOS T,MAGBUF+2
	IDIVI T,6
	IMULI T,9
	ADDI T,1
	MOVEM T,MAGBUF+2
	MOVEI T,400
	HRLM T,MAGBUF+1
>;GERB
NOGERB,<
	MOVEI T,TXTRET
	PUSHJ P,DORET		;SELECT TEXT RETICLE
	MOVEI T,=100		;UP AND OVER 1/2 INCH TO CLEAR FILM EDGE
	MOVEM T,X
	MOVEM T,Y
	PUSHJ P,MAGLNS		;INVISIBLE TO 1,1 INCHES
	MOVE TT,[POINT 7,[ASCIZ/***M50G58D10STANFORD A.I. PROJECT.  */]]
	PUSHJ P,MAGSTR
	OUTSTR[ASCIZ/OPERATOR MESSAGES, 40 CHARS PER LINE (MAX). END WITH BLANK LINE.
THESE WILL BE PLOTTED AT THE BOTTOM OF THE FILM AS WELL AS TYPED.
MESSAGES SHOULD NOT EXTEND PAST HERE.._
STANFORD A.I. PROJECT.	<ALREADY ON TAPE>
/]
DOMES:	PUSHJ P,GETMES
	JUMPE B,CHKDRL		;END WITH NULL STRING
NOGERB,<ADDI B,14		;14 OTHER CHARS
	CAML B,MAGBUF+2
	PUSHJ P,ENDREC
>;NOGERB
	MOVE TT,[POINT 7,[ASCIZ/M50G58D10/]]
	PUSHJ P,MAGSTR
	MOVE TT,[POINT 7,STRING]
	PUSHJ P,MAGSTR		;OUT TO MAG FILE
	PUSHJ P,MGSTAR
	MOVE T,[POINT 7,STRING]
	PUSHJ P,LSTSTR		;OUT TO LISTING FILE
	JRST DOMES
>;NOGERB
CHKDRL:	TRNN FLAG,DOTAPE	;DOING DRILL TAPE?
	JRST NODRIL
	INIT TAP,10
	'DSK   '
	XWD TAPHD,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DISK!!!
/]
		EXIT 1,
		JRST .-3]
TAPNAM:	MOVSI T,EXTDRL
	PUSHJ P,FILSET
	ENTER TAP,FILNAM
	JRST [	OUTSTR[ASCIZ/DRL FILE ENTER FAILED.
/]
		TRZ FLAG,DOTAPE
		RELEASE TAP,
		EXIT 1,
		JRST NODRIL]
	MOVEI T,TAPBUF
	EXCH T,.JBFF
	OUTBUF TAP,2
	MOVEM T,.JBFF
	OUTSTR[ASCIZ/TYPE X,Y OF HOLES TO ADD TO DRILL TAPE
DECIMAL POINT OK, OFFSET WILL BE ADDED.
/]
ASKDRL:	OUTSTR[ASCIZ/X,Y OF HOLE?/]
	PUSHJ P,MILIN
	CAIE T,","
	JRST [	CAIN T,12
		JUMPE TTT,NODRIL	;DONE
	ILLDRL:	OUTSTR[ASCIZ/HO, HO, HO!!
/]
		PUSHJ P,IERR
		JRST ASKDRL]
	ADD TTT,XOFF			;ADD OFFSET
	IMULI TTT,5			;MAKE IT MILS
	HRLM TTT,(P)			;SAVE X
	PUSHJ P,MILIN
	CAIE T,12
	JRST ILLDRL
	ADD TTT,YOFF			;ADD OFFSET
	IMULI TTT,5			;MAKE IT MILS
	HLL TTT,(P)			;GET X BACK
	MOVE T,TTT
	PUSHJ P,PTAPE
	JRST ASKDRL

NODRIL:	MOVN T,XOFF
	UNSCAL(T)		;CLOBBERS TT
	ASH T,1
	HRLM T,CURSE
	MOVN T,YOFF
	UNSCAL(T)		;CLOBBERS TT
	ASH T,1
	HRRM T,CURSE
	POPJ P,
;REITCLE SELECT
RETSEL:	HLRZ T,DOTXT
	XCT (T)[MOVEI T,LINRET
		HALT .+1
		MOVEI T,TXTRET
		HALT .+1
		JRST [	HRRZ T,DOTXT
			ADDI T,DONUT	;LEAVE OFFSET FOR STANDARD RETICLES
			JRST .+1]
		]
DORET:	MOVEM T,PADTYP			;SAVE PAD TYPE FOR PRINTOUT
	CAILE T,MAXRET			;LARGEST LEGAL
	JRST [	OUTSTR[ASCIZ/I'M SORRY THE RETICLE YOU HAVE REQUESTED....
USING /]
		HRLM T,(P)
		MOVEI T,MAXRET
		PUSHJ P,DECOUT
		HLRZ T,(P)
		OUTSTR[ASCIZ/ INSTEAD OF /]
		PUSHJ P,DECOUT
		OUTSTR[ASCIZ/.
/]
		MOVEI T,MAXRET
		JRST .+1]
	HRRZ T,RETMAP-1(T)		;GET MAPPING
	HRROS RETMAP-1(T)		;AND MARK WHAT IT MAPS TO AS USED
	CAMN T,LSTRET			;DIFFERENT FROM LAST?
	POPJ P,				;NO
	MOVEM T,LSTRET
	OUTSTR[ASCIZ/WHEEL POS = /]
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ CODE = /]
	MOVE T,LSTRET
	OUTSTR RETTAB-1(T)
	OUTSTR[ASCIZ/* /]
	PUSHJ P,TPNT
	MOVE T,PADTYP
	CAME T,LSTRET			;DID SOME MAPPING HAPPEN?
	PUSHJ P,MTPNT			;YES, SAY WHAT
	OUTSTR[ASCIZ/
/]
	TRNN FLAG,DOMAG			;REALLY DOING MAGTAPE?
	POPJ P,				;NO
NOGERB,<MOVE T,MAGBUF+2
	CAIG T,=14			;14 CHARS
	PUSHJ P,ENDREC
	MOVE TT,[POINT 7,[ASCIZ/G01D02*G54/]]
	PUSHJ P,MAGSTR
>;NOGERB
	MOVE TT,LSTRET
	ADD TT,[POINT 7,RETTAB-1]
	PUSHJ P,MAGSTR
	JRST MGSTAR

MTPNT:	OUTSTR[ASCIZ/, MAPPED FROM /]
TPNT:	CAILE T,MAXPNT
	JRST [	SUBI T,DONUT
		OUTSTR[ASCIZ/PAD TYPE /]
		JRST DECOUT]
	OUTSTR @RETTXT-1(T)
	POPJ P,

DEFINE R(T)
<	ASCIZ/T/
>

RETTAB:
	R	D10
	R	D11
	R	D12
	R	D13
	R	D14
	R	D15
	R	D16
	R	D17
	R	D18
	R	D19
	R	D70
	R	D71
	R	D20
	R	D21
	R	D22
	R	D23
	R	D24
	R	D25
	R	D26
	R	D27
	R	D28
	R	D29
	R	D72
	R	D73
MAXRET__.-RETTAB

DEFINE R(T)
<	[ASCIZ/T/]
>
RETTXT:	R	LINES
	R	TEXT
	R	INNER PLANE EDGE
	R	FINGERS
	R	TARGETS
	R	DRILL DONUTS
	R	PADS
	R	CLEARANCES
	R	PIN 1 SQUARES
MAXPNT__.-RETTXT

RETMAP:
FOR I_1,MAXRET
<	I
>
>;MPC
              
         
;SETUP FR80 OUTPUT
FRSET1:	INIT F80CHN,10
	'DSK   '
	XWD FRBUF,0
	JRST [	OUTSTR[ASCIZ/CAN'T GET DSK!
/]
		EXIT 1,
		JRST FRSET1]
	MOVEI T,FRBFR
	EXCH T,.JBFF
	OUTBUF F80CHN,2
	MOVEM T,.JBFF
	MOVSI T,EXTF80
	PUSHJ P,FILSET
	ENTER F80CHN,FILNAM
	JRST [	OUTSTR[ASCIZ/FR80 ENTER FAILED!
/]
		RELEASE F80CHN,
		TRZ FLAG,FR80
		EXIT 1,
		JRST CPOPJ]
	MOVE T,[POINT 18,FRBFR+2,35]
	MOVEM T,FRBUF+1
	SETOM LSTROT		;ROTATION STARTS UNKNOWN
	MOVEI T,777777
	MOVEM T,LASTY
	MOVEM T,LASTX
	SETOM LSTSPC		;LAST SPACING
	MOVEI T,(<BYTE(3)2(6)6(2)0(4)0(3)0>)	;SPOT SIZE 0
	PUSHJ P,FROUT
	MOVEI T,(<BYTE(3)2(6)5(2)0(4)0(3)7>)	;INTENSITY 7
	JRST FROUT
              
         
;PC CARD (PC)
MPC,<
CRDCHK:	SKIPE CRDNAM		;DID HE WANT A CARD?
	JRST GOTCRD
CRDN:	PUSHJ P,FORCE		;FINISH CURRENT BUSINESS
	MOVSI T,EXTCRD
	PUSHJ P,SETIT
	JRST NOCARD
	MOVE T,FILNAM
	MOVEM T,CRDNAM
	MOVE T,FILEXT
	MOVEM T,CRDEXT
	SKIPN T,FILPPN
	MOVE T,LIBPPN
	MOVEM T,CRDPPN
GOTCRD:	MOVE T,CRDPPN
	LOOKUP DAT,CRDNAM
	JRST [	MOVEM T,CRDPPN
		MOVE TT,CRDNAM
		PUSHJ P,SIXOUT
		OUTCHR["."]
		HLLZ TT,CRDEXT
		PUSHJ P,SIXOUT
		OUTCHR["["]
		HLLZ TT,CRDPPN
		PUSHJ P,LSIXOUT
		OUTCHR[","]
		HRLZ TT,CRDPPN
		PUSHJ P,LSIXOUT
		OUTSTR[ASCIZ/], LOOKUP FAILED.
/]
		JRST CRDN]
	MOVEM T,CRDPPN
	MOVEI D,3
	MOVE T,T3S
	MOVEM T,T3P
	PUSHJ P,DATIN
	CAIE A,CRDVER
	JRST [	OUTSTR[ASCIZ/IMPROPER PC CARD FILE VERSION NUMBER.
/]
		JRST CRDN]
	SETZ F,
CRDFN4:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	JRST CRDFN3
CRDFNC:	MOVE T,T3P
	CAMG T,.JBREL
	JRST CRDFOK
	CORE T,
	JRST [	PUSHJ P,NOCORE
		JRST CRDFNC]
CRDFOK:	SKIPE FLIP	;FLIPPING?
	PUSHJ P,XFLIP	;FLIP X
	ADD F,A
	TLZ F,1
	MOVEM A,@T3P
	AOS T3P
	JRST CRDFN4
CRDFN3:	MOVEM A,@T3P
	MOVE T,T3P
	SUB T,T3S	;NUMBER OF ENTRIES
	HRRE TT,F
	IDIV TT,T
	HRRM TT,CENTER
	HLRE TT,F
	IDIV TT,T
	HRLM TT,CENTER
CRDLP1:	MOVE A,@T3S
	CAMN A,[(400000)]
	JRST CRDFNG
	CAIN A,400000
	JRST NOCARD
	TRNE FLAG,PLANE	;INNER PLANE?
	SKIPA T,[IPBRET]		;WIDE SWATCH
	MOVEI T,LINRET
	PUSHJ P,DORET
	MOVE T,A
	TRNE FLAG,PLANE	;FUDGE IF OUTER PLANE
	JRST NOPLAN
	MOVE TT,A
	TLO TT,1
	SUB TT,CENTER
BFUDGE__5		;FUDGE BY 5 MILS
	MOVE TTT,[XY	BFUDGE,BFUDGE]
	TLNE TT,400000		;X NEGATIVE?
	HRLI TTT,-BFUDGE/5*2
	TRNE TT,400000
	HRRI TTT,-BFUDGE/5*2
	ADD T,TTT
	TLZ T,1
NOPLAN:	TRZE T,1
	MOVEI D,3
	PUSHJ P,FIXXY
	TRNN FLAG,DOMAG
	JRST NNMAG
	CAIN D,3
	JRST [	PUSHJ P,MAGLNS
		JRST NNMAG]
	PUSHJ P,MAGLIN
NNMAG:	PUSHJ P,PLOTIT
	MOVEI D,2
	AOS T3S
	JRST CRDLP1

;ROUTINE TO INVERT X VALUE FOR FLIPPED PLOTS
XFLIP:	TLC A,-2
	ADD A,[2,,0]
	POPJ P,
              
         
;CARD FINGERS, SHORTING BARS, TARGETS(PC)
CRDFNG:	TRNN FLAG,TRWDRL	;THIS GUY ONLY DOES DRILL HOLES, SKIP FINGERS
	TRNE FLAG,PLANE	;INNER PLANE
	JRST [	PUSHJ P,CSKIP		;SKIP FRONT FINGERS
		PUSHJ P,CSKIP		;SKIP BACK FINGERS
		PUSHJ P,CSKIP		;SKIP FRONT SHORTING BARS
		PUSHJ P,CSKIP		;SKIP BACK SHORTING BARS
		JRST DOTAR2]		;GO DO TARGETS!
	TRNN FLAG,FRONT
	PUSHJ P,CSKIP		;SKIP OVER FRONT SIDE
	PUSHJ P,CRDFN1
	PUSHJ P,CSKIP		;SKIP BACK SIDE OR FRONT SHORTING BARS
DONIT:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	JRST DOTARG
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVE C,A
	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	JRST DOTARG
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVE B,A
	PUSHJ P,SHORT
	JRST DONIT

DOTARG:	TRNE FLAG,FRONT
	PUSHJ P,CSKIP		;YES
DOTAR2:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	JRST NOCARD		;NO TARGETS!
	CAIA			;SKIP CALL TO IN
DOTAR1:	PUSHJ P,DATIN
DOTAR3:	CAME A,[(400000)]
	CAIN A,400000
	JRST NOCARD
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVEM A,CURSE
	MOVEI T,TARRET
	PUSHJ P,DORET
	PUSHJ P,TARGET
	JRST DOTAR1

CRDFN1:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	POPJ P,
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVE C,A
	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	POPJ P,
	SKIPE FLIP
	PUSHJ P,XFLIP
	MOVE B,A
	PUSH P,A
	PUSHJ P,DATIN		;READ PIN# AND CONNECTOR ID AND IGNORE!
	POP P,A
	PUSHJ P,SHORT
	JRST CRDFN1

CSKIP:	PUSHJ P,DATIN
	CAME A,[(400000)]
	CAIN A,400000
	POPJ P,
	JRST CSKIP

SHORT:	MOVEI T,FNGRET
	PUSHJ P,DORET
	TRNN FLAG,DOMAG
	JRST XXXMAG
	MOVE T,C
	PUSHJ P,FIXXY
	PUSHJ P,MAGLNS
	MOVE T,B
	PUSHJ P,FIXXY
	PUSHJ P,MAGLIN
XXXMAG:	TLO A,1
	SUB A,C
	TDZ A,[(1)1]
	MOVEI E,0
	MOVEI F,2
	TLNE A,400000
	MOVEI E,1
	TRNE A,400000
	MOVEI F,3
	HLRE TT,A
	MOVMS TT
	HRRE T,A
	MOVMS T
	CAML TT,T
	MOVE F,E
	JRST @(F)[	FRIGHT
			FLEFT
			FUP
			FDOWN]
              
         
;CHEATING BOX FOR LINE
DEFINE XYZ(X,Y)
<	RADIX =10
	ADD T,[XY X,Y]
	TDZ T,[(1)1]
	RADIX =8
>
FRIGHT:	MOVE T,C
	XYZ	-FWIDTH,FWIDTH
	PUSHJ P,AIVECT
	MOVE T,C
	XYZ	-FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	-FWIDTH,FWIDTH
	JRST AVECT
FLEFT:	MOVE T,B
	XYZ	-FWIDTH,FWIDTH
	PUSHJ P,AIVECT
	MOVE T,B
	XYZ	-FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	-FWIDTH,FWIDTH
	JRST AVECT
FUP:	MOVE T,C
	XYZ	-FWIDTH,-FWIDTH
	PUSHJ P,AIVECT
	MOVE T,C
	XYZ	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	-FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	-FWIDTH,-FWIDTH
	JRST AVECT
FDOWN:	MOVE T,B
	XYZ	-FWIDTH,-FWIDTH
	PUSHJ P,AIVECT
	MOVE T,B
	XYZ	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XYZ	-FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XYZ	-FWIDTH,-FWIDTH
	JRST AVECT

AIVECT:	PUSHJ P,FIXXY
	MOVEI D,3
	JRST PLOTIT

AVECT:	PUSHJ P,FIXXY
	MOVEI D,2
	JRST PLOTIT

SETFLP:	PUSHJ P,STFLP1
DEFCNM:	SETZM CRDNAM
	POPJ P,

FLPCNM:	PUSHJ P,STFLP1
	PUSHJ P,DATIN
	MOVEM A,CRDNAM
	PUSHJ P,DATIN
	MOVEM A,CRDEXT
	PUSHJ P,DATIN
	MOVEM A,CRDPPN
	POPJ P,

STFLP1:	SETOM FLIP
	PUSHJ P,DATIN
	TRNN A,1		;LOW ORDER BIT IS FLIP BIT
	AOSA FLIP		;SET TO NOT FLIPPED
	OUTSTR[ASCIZ/FLIPPED!
/]
	TRNN FLAG,FRONT		;FRONT OR BACK?
	JRST [	SKIPE FLIP	;BACK, MUST BE FLIPPED
		POPJ P,		;OK
		JRST FLPERR]	;MAYBE LOSE
	SKIPN FLIP		;FRONT, NO FLIP!
	POPJ P,
FLPERR:	TRNE FLAG,DOMAG		;TRW OUTPUT?
	SKIPN ANYTXT		;YES, ANY TEXT GOING OUT?
	POPJ P,			;NO, WIN
	OUTSTR[ASCIZ/TEXT ON THIS PLOT MAY NOT BE READABLE, YOU MAY BE LOSING!
/]
	POPJ P,

DEFFLP:	SETZM FLIP		;NO FLIP FOR OLD FILES
>;MPC
;MAGTAPE OUTPUT ROUTINES
MPC,<
MAGSTR:	ILDB T,TT
	JUMPE T,CPOPJ
	PUSHJ P,MAGCHR
	JRST MAGSTR

MAGLNS:
NOGERB,<PUSHJ P,ENDCHK	>
	PUSHJ P,MAGG01
	PUSHJ P,MAGD0
	MOVEI T,"2"
	PUSHJ P,MAGCHR
MGSTAR:	MOVEI T,"*"
	JRST MAGCHR

MAGLIN:
NOGERB,<PUSHJ P,ENDCHK	>
	PUSHJ P,MAGG01
	PUSHJ P,MAGD0
	MOVEI T,"1"
	PUSHJ P,MAGCHR
	JRST MGSTAR

MAGPAD:	MOVE T,CURSE
	PUSHJ P,FIXXY
	PUSHJ P,MAGLNS	;MOVE INVISIBLE
NOGERB,<MOVE T,MAGBUF+2
	CAIG T,7
	PUSHJ P,ENDREC
	MOVE TT,[POINT 7,[ASCIZ/G55D03*/]]
>;NOGERB
GERB,<	MOVE TT,[POINT 7,[ASCIZ/D03*/]]>
	JRST MAGSTR	;FLASH

MAGTXT:
GERB,<	OUTSTR[ASCIZ/FOO, THERE ISN'T SUPPOSED TO BE ANY TEXT!
/]
	POPJ P,
>;GERB
NOGERB,<
	PUSHJ P,MAGLNS	;MOVE INVISIBLE
NOGERB,<MOVE TTT,TTPNT
	HRLI TTT,(<POINT 7,0>)
	SETZ T,
MAGTX1:	ILDB TT,TTT
	JUMPE TT,.+2
	AOJA T,MAGTX1
	IMULI T,4		;4 OUT FOR 1 IN
	ADDI T,6+7		;6 OTHER CHARS + 7 ENDING CHARS
	CAML T,MAGBUF+2		;ENOUGH ROOM?
	PUSHJ P,ENDREC		;NO SPACE, FLUSH TO RECORD END
>;NOGERB
	MOVEI T,"M"
	PUSHJ P,MAGCHR
	MOVE TT,CSIZ		;GET CHAR SIZE FROM HERE
	ADDI TT,=50
	CAILE TT,=54
	JRST [	OUTSTR[ASCIZ/CHAR. SIZE TOO LARGE, USING SIZE 5
/]
		MOVEI TT,=54
		JRST .+1]
	PUSHJ P,MAGDEC
	MOVE TT,[POINT 7,[ASCIZ/G52/]]
	SKIPE ANGLE		;HORZ OR VERT?
	MOVE TT,[POINT 7,[ASCIZ/G53/]]
	PUSHJ P,MAGSTR
	MOVE TTT,TTPNT
	HRLI TTT,(<POINT 7,0>)
MAGHV1:	ILDB T,TTT
	JUMPE T,MAGTXE		;DONE
	SKIPN TT,ONETAB(T)
	JRST [	OUTSTR[ASCIZ/NO "D" CODE FOR "/]
		OUTCHR T
		OUTSTR[ASCIZ/"
/]
		JRST MAGHV1]
	PUSH P,TTT
	MOVEI T,"D"
	PUSHJ P,MAGCHR
	PUSHJ P,MAGDEC		;PUT OUT "D" CODE
	PUSHJ P,MGSTAR		;AND STAR
	POP P,TTT
	JRST MAGHV1

MAGTXE:	MOVE TT,[POINT 7,[ASCIZ/G01D02*/]]
	JRST MAGSTR		;USE THIS TO TERMINATE TEXT
>;NOGERB
              
MAGG01:
NOGERB,<MOVE TT,[POINT 7,[ASCIZ/G01X/]]
	PUSHJ P,MAGSTR
	MOVE TT,X
>;NOGERB
GERB,<	MOVE TT,Y		;ROTATE 90 DEGREES, X_Y
	TLNN FLAG,GROTIT
	JRST NGROTX
	SUB TT,YOFF		;ROTATE ABOUT OFFSET
	ADD TT,XOFF
NGROTX:	SUB TT,GERBX
	JUMPE TT,CKGRBY		;IF NO X CHANGE GO TO Y CHECK
	ADDM TT,GERBX		;UPDATE LAST X PUT OUT
	MOVEI T,"X"
	PUSHJ P,MAGCHR
>;GERB
	IMULI TT,5
	PUSH P,TT
	SKIPGE (P)
	PUSHJ P,MINUS
	POP P,TT
	MOVMS TT
	PUSHJ P,MAGDEC
GERB,<
CKGRBY:	MOVE TT,X		;ROTATE 90 DEGREES, Y_-X
	TLNN FLAG,GROTIT
	JRST NGROTY
	MOVN TT,TT
	ADD TT,YOFF		;ROTATE ABOUT OFFSET
	ADD TT,XOFF
NGROTY:	SUB TT,GERBY
	JUMPE TT,CPOPJ
	ADDM TT,GERBY
>;GERB
NOGERB,<MOVE TT,Y	>
	MOVEI T,"Y"
	PUSHJ P,MAGCHR
	IMULI TT,5
	PUSH P,TT
	SKIPGE (P)
	PUSHJ P,MINUS
	POP P,TT
	MOVMS TT
MAGDEC:	IDIVI TT,=10
	HRLM TTT,(P)
	JUMPE TT,MAGDC1
	PUSHJ P,MAGDEC
MAGDC1:	HLRZ T,(P)
	ADDI T,60
	JRST MAGCHR

MAGD0:	MOVEI T,"D"
	PUSHJ P,MAGCHR
	MOVEI T,"0"
	JRST MAGCHR

NOGERB,<
ENDCHK:	MOVE T,MAGBUF+2
	CAILE T,=19
	POPJ P,
ENDREC:	PUSH P,A
	MOVE A,MAGBUF+2
	ADDI A,2		;3 INTO NEXT RECORD
ENDRC1:	PUSHJ P,MGSTAR
	SOJG A,.-1
	POP P,A
	POPJ P,
>;NOGERB
;BCD CHARACTER TABLE
BCDTAB:	REPEAT 40,<0>
NOGERB,<
	20		;SPACE
	16		;!
	37		;"
	0		;#
	53		;$
	75		;%
	0		;&
	14		;'
	34		;(
	74		;)
	54		;*
	60		;+
	33		;,
	40		;-
	73		;.
	21		;/
	12		;0
	1		;1
	2		;2
	3		;3
	4		;4
	5		;5
	6		;6
	7		;7
	10		;8
	11		;9
	15		;:
	52		;;
	57		;<
	13		;=
	17		;>
	0		;?
	0		;@
	61		;A
	62		;B
	63		;C
	64		;D
	65		;E
	66		;F
	67		;G
	70		;H
	71		;I
	41		;J
	42		;K
	43		;L
	44		;M
	45		;N
	46		;O
	47		;P
	50		;Q
	51		;R
	22		;S
	23		;T
	24		;U
	25		;V
	26		;W
	27		;X
	30		;Y
	31		;Z
	55		;[
	76		;\
	36		;]
	72		;^
	77		;_
>;NOGERB
GERB,<
	FOR I_40,")"
<	0
>
	17		;*
	0		;+
	0		;,
	14		;-
	0		;.
	0		;/
	FOR I_"0","9"
<	1,,I-60
>
	FOR I_":","C"
<	0
>
	16		;D
	FOR I_"E","L"
<	0
>
	15		;M
	FOR I_"N","W"
<	0
>
	12		;X
	13		;Y
	FOR I_"Z",137
<	0
>
>;GERB
	REPEAT 40,<0>

              
         
NOGERB,<
ONETAB:
	FOR I_0,37
<	0
>
	=10		;SPACE
	FOR I_41,53
<	0
>
	=51		;,
	=39		;-
	=50		;.
	=37		;/
	FOR I_=40,=49
<	I
>
	FOR I_72,100
<	0
>
	FOR I_=11,=36
<	I
>
	FOR I_133,177
<	0
>
	0
>;NOGERB


MINUS:
NOGERB,<
	OUTSTR[ASCIZ/NEGATIVE X OR Y VALUE BEING OUTPUT TO 'MAG' FILE.
TYPE CONTINUE TO GO ON.
/]
	EXIT 1,
>;NOGERB
	MOVEI T,"-"
MAGCHR:	SKIPN T,BCDTAB(T)	;AGG!
	JRST BITCH
MAGPUT:	SOSG MAGBUF+2
	OUT TRWCHN,
	CAIA
	JRST [	OUTSTR[ASCIZ/MAGTAPE OUTPUT ERROR.
START OVER./]
		EXIT 1,
		JRST .+1]
	IDPB T,MAGBUF+1
	POPJ P,

BITCH:	OUTSTR[ASCIZ/CHAR. WITH NO BCD EQUIVALENT, THIS IS IMPOSSIBLE!
/]
	EXIT 1,
	POPJ P,
;TRW LOG FILE STUFF
INLMES:	POP P,T			;POP RETURN
	HRLI T,440700		;MAKE IT A BYTE POINTER
	PUSHJ P,LSTSTR		;DO THE STRING THING
	JRST 1(T)		;RETURN IN LINE

LSTLJS:
DEC,<	HLRZ T,TT
LSTOCT:	IDIVI T,10
	HRLM TT,(P)
	SKIPE T
	PUSHJ P,LSTOCT
	HLRZ TTT,(P)
	ADDI TTT,60
	JRST LSTCHR
>;DEC
NODEC,<	TLNN TT,777700
	LSH TT,14
	TLNN TT,770000
	LSH TT,6
>;NODEC
LSTSIX:	JUMPE TT,CPOPJ
	SETZ T,
	LSHC T,6
	MOVEI TTT,40(T)
	PUSHJ P,LSTCHR
	JRST LSTSIX

LSTSTR:	ILDB TTT,T		;GET A CHAR
	JUMPE TTT,CPOPJ		;RETURN ON NULL
	PUSHJ P,LSTCHR
	JRST LSTSTR

LSTMIL:	IMULI T,=5
	MOVEI TTT,"-"
	SKIPGE T
	PUSHJ P,LSTCHR
	MOVM T,T
	IDIVI T,=1000
	PUSH P,TT
	PUSHJ P,LSTDEC
	MOVEI TTT,"."
	PUSHJ P,LSTCHR
	POP P,T
	MOVEI TTT,"0"
	CAIGE T,=100
	PUSHJ P,LSTCHR
	CAIGE T,=10
	PUSHJ P,LSTCHR		;FALL INTO LSTDEC
LSTDEC:	MOVEI TTT,"-"
	SKIPGE T
	PUSHJ P,LSTCHR
	MOVM T,T
LSTDC1:	IDIVI T,=10
	HRLM TT,(P)
	SKIPE T
	PUSHJ P,LSTDC1
	HLRZ TTT,(P)
	ADDI TTT,60		;MAKE ASCII AND FALL INTO LSTCHR
LSTCHR:	SOSG LSTHD+2
	OUT LST,
	CAIA
	JRST [	OUTSTR[ASCIZ/LOG FILE OUTPUT ERROR!
/]
		EXIT 1,
		JRST .+1]
	IDPB TTT,LSTHD+1
	POPJ P,

FINLST:	PUSHJ P,INLMES
	ASCIZ/


RETICLE IDENTIFIERS USED:
D	WHEEL	DASH
CODE	POS	NUMBER		USE
/
	MOVSI A,-MAXRET
LRTLOP:	SKIPL RETMAP(A)		;WAS IT USED?
	JRST LRTLP1		;NO
	MOVE T,[POINT 7,RETTAB(A)]
	PUSHJ P,LSTSTR		;D CODE
	MOVEI TTT,11
	PUSHJ P,LSTCHR
	MOVEI T,1(A)
	PUSHJ P,LSTDEC		;WHEEL POS
	MOVEI TTT,11
	PUSHJ P,LSTCHR
	MOVEI T,(A)
	CAIG T,STDLEN-1		;IN STANDARD TABLE?
	SKIPA T,STDRET(T)	;YES, PICKUP POINTER
	MOVE T,STDRET+STDLEN-1	;NO, USE LAST ENTRY
	HRLI T,440700
	PUSHJ P,LSTSTR
	MOVEI T,(A)
	CAIL T,STDLEN-1
	JRST LRTLP2
	PUSHJ P,INLMES
	ASCIZ/
		____________	____________________________________________/
LRTLP2:	PUSHJ P,INLMES
	ASCIZ/
/
LRTLP1:	AOBJN A,LRTLOP
	PUSHJ P,INLMES
	ASCIZ/
TEXT SCALE IDENTIFIERS:
IDENT	SCALE	HEIGHT (IN MILS)
/
	MOVSI A,-5
SIZLOP:	PUSHJ P,INLMES
	ASCIZ/M5/
	MOVEI TTT,"0"(A)
	PUSHJ P,LSTCHR
	MOVEI TTT,11
	PUSHJ P,LSTCHR
	MOVE T,MTAB(A)
	JUMPE T,[PUSHJ P,INLMES
		ASCIZ/NOT USED
/
		JRST SIZLP1]
	IDIVI T,=15/5
	PUSHJ P,LSTDEC
	MOVEI TTT,11
	PUSHJ P,LSTCHR
	MOVE T,MTAB(A)
	IMULI T,5
	PUSHJ P,LSTDEC
	PUSHJ P,INLMES
	ASCIZ/
/
SIZLP1:	AOBJN A,SIZLOP
	PUSHJ P,INLMES
	ASCIZ/
X RANGE: FROM	/
NOGERB,<MOVE T,SMLX>
GERB,<	OUTSTR[ASCIZ/VALUES OUTPUT TO PLOT TAPE:
X RANGE: FROM   /]
	MOVE T,SMLY
	SUB T,YOFF
	ADD T,XOFF
	PUSH P,T
	IMULI T,5
	PUSHJ P,MILOUT
	POP P,T
>;GERB
	PUSHJ P,LSTMIL
	PUSHJ P,INLMES
	ASCIZ/	TO	/
NOGERB,<MOVE T,LRGX>
GERB,<	OUTSTR[ASCIZ/  TO	/]
	MOVE T,LRGY
	SUB T,YOFF
	ADD T,XOFF
	PUSH P,T
	IMULI T,5
	PUSHJ P,MILOUT
	POP P,T
>;GERB
	PUSHJ P,LSTMIL
	PUSHJ P,INLMES
	ASCIZ/	INCHES
Y RANGE: FROM	/
NOGERB,<MOVE T,SMLY>
GERB,<	OUTSTR[ASCIZ/  INCHES
Y RANGE: FROM   /]
	MOVN T,LRGX
	ADD T,XOFF
	ADD T,YOFF
	PUSH P,T
	IMULI T,5
	PUSHJ P,MILOUT
	POP P,T
>;GERB
	PUSHJ P,LSTMIL
	PUSHJ P,INLMES
	ASCIZ/	TO	/
NOGERB,<MOVE T,LRGY>
GERB,<	OUTSTR[ASCIZ/  TO	/]
	MOVN T,SMLX
	ADD T,XOFF
	ADD T,YOFF
	PUSH P,T
	IMULI T,5
	PUSHJ P,MILOUT
	POP P,T
	OUTSTR[ASCIZ/  INCHES
/]
>;GERB
	PUSHJ P,LSTMIL
	PUSHJ P,INLMES
	ASCIZ/	INCHES

FILM SIZES:	ORIGINAL	# OF EXTRA COPIES
		POS  NEG      POSITIVE	  NEGATIVE
11" X 14" FILM	___  ___      ________	  ________
20" X 24" FILM	___  ___      ________	  ________
36" X ___ FILM	___  ___      ________	  ________

MIROR IMAGE AND SHIFT ORIGIN TO LOWER RIGHT? YES ___  NO ___

TEXTUAL PLOT LABELS START AT X = 0.500 AND Y = 0.500 INCHES.
/
	POPJ P,

STDRET:	[ASCIZ/DS0048-13	13 MIL DIAMETER, LINE PRODUCING (DRAW)/]
	[ASCIZ/DS0048-10	10 MIL DIAMETER, LINE PRODUCING (DRAW)/]
	[ASCIZ/DS0049-99	125 MIL SQUARE FOR BOARD EDGE. (DRAW)/]
	[ASCIZ/DS0049-67	80 MIL SQUARE, LINE PRODUCING. (DRAW)/]
	[ASCIZ/DS0049-172	181 MIL DIAMETER REGISTRATION TARGET(FLASH)/]
	[ASCIZ/DS0049-157	50 MIL X 15 MIL DONUT PAD(FLASH)/]
	[ASCIZ/DS0050-55	55 MIL DIAMETER, PAD PRODUCING (FLASH)/]
	[ASCIZ/DS0050-70	70 MIL DIAMETER, PAD PRODUCING (FLASH)/]
	[ASCIZ\DS0049-244	55 X 55 MIL SQUARE W/ 20 MIL ROUNDED CORNERS\]
	[ASCIZ/____________	____________________________________________/]
STDLEN__.-STDRET
;PTAPE(PC), GETMES(PC)
PTAPE:	SOSG TAPHD+2
	OUT TAP,
	CAIA
	JRST [	OUTSTR[ASCIZ/DRILL TAPE OUTPUT ERROR!
/]
		EXIT 1,
		JRST .+1]
	IDPB T,TAPHD+1
IFN 0,<
	TDNN T,[400000,,400000]
	POPJ P,
	OUTSTR[ASCIZ\NEGATIVE X AND/OR Y VALUE BEING OUTPUT TO 'DRL' FILE.
TYPE CONTINUE TO GO ON.
\]
	EXIT 1,
>;IFN 0
	POPJ P,

GETMES:	MOVEI B,0	;NO CHARS YET!
	MOVE A,[POINT 7,STRING]
CHRGET:	PUSHJ P,GETCHL
	ANDI T,177
	CAIN T,12
	JRST CHRDON
NOGERB,<
	CAIN T,"*"	;CAN'T BE IN MESSAGE
	JRST CHRERR
	SKIPE BCDTAB(T)	;MUST HAVE BCD EQUIVALENT
	SKIPN ONETAB(T)	;AND MUST BE PLOTTABLE!
	JRST CHRERR
	CAIL B,=40		;TOO MANY CHARS?
	JRST CHRTOO
>;NOGERB
GERB,<	CAIL T,"A"+40
	CAILE T,"Z"+40
	CAIA
	SUBI T,40
	CAILE T,40
	CAIL T,140
	JRST CHRERR
	CAIL B,=200
	JRST CHRTOO
>;GERB
	IDPB T,A
	AOJA B,CHRGET

CHRDON:
NOGERB,<
	JUMPE B,NOSPCX
	LDB T,A
	CAIN T,40	;SPACE ALREADY?
	JRST NOSPCX
	MOVEI T,40
	IDPB T,A
	IDPB T,A
	ADDI B,2
NOSPCX:
>;NOGERB
	MOVEI T,0
	IDPB T,A
NOGERB,<CAIG B,=40	>;TOO MANY CHARS?
GERB,<	CAIG B,=200	>
	POPJ P,
CHRTOO:	OUTSTR[ASCIZ/TOO MANY CHARACTERS.
/]
CHRER1:	PUSHJ P,IERR
	OUTSTR[ASCIZ/TRY AGAIN.
/]
	JRST GETMES

CHRERR:	OUTSTR[ASCIZ/ILLEGAL CHARACTER.
/]
	JRST CHRER1

>;MPC
;FR80 SUBRS
FROUT:	SOSG FRBUF+2
	OUT F80CHN,
	CAIA
	JRST [	OUTSTR[ASCIZ/FR-80 OUTPUT ERROR!
/]
		EXIT 1,
		JRST FROUT]
	IDPB T,FRBUF+1
	POPJ P,

MPC,<
FRFIXX:
FRFIXY:
	PUSH P,TT
	IMUL T,FRFUDG
	IDIVI T,=10		;ACCOUNT FOR EXTRA FACTOR OF TEN IN FRFUDG
	POP P,TT
	ADDI T,20000		;16384/2
>;MPC
MD,<
FRFIXX:	PUSH P,TT
	HLRE TT,OFFSET
	SUB T,TT
	IMUL T,FRFUDG
	IDIVI T,=10
	POP P,TT
	ADDI T,FRMAX-100-FRXFDG	;KEEP AWAY FROM EDGE
	JRST FRFIX

FRFIXY:	PUSH P,TT
	HRRE TT,OFFSET
	SUB T,TT
	IMUL T,FRFUDG
	IDIVI T,=10		;ACCOUNT FOR EXTRA FACTOR OF TEN IN FRFUDG
	ADDI T,FRYFDG+100	;KEEP AWAY FROM EDGE
	POP P,TT
FRFIX:
>;MD
	CAIGE T,FRMAX
	JUMPGE T,.+2
	OUTSTR[ASCIZ/FR80 WRAP-AROUND!
/]
	ANDI T,FRMAX-1
	POPJ P,

FRLNS:	TDZA TT,TT		;INVISIBLE
FRLIN:	MOVEI TT,(<BYTE(4)10>)	;VISIBLE
	MOVE T,X
	CAMN T,LASTX
	JRST YONLY
	MOVEM T,LASTX
MPC,<	SUB T,XOFF	>;RE-CENTER
	PUSHJ P,FRFIXX
	TRO T,(<BYTE(4)2>)
	TDO T,TT
	PUSHJ P,FROUT		;X PART
	MOVE T,Y
	CAMN T,LASTY		;NEED Y PART?
	POPJ P,			;NO
	MOVEM T,LASTY
MPC,<	SUB T,YOFF	>;RE-CENTER
	PUSHJ P,FRFIXY
	CAIG T,FRMAX-FRYFDG
	CAIGE T,FRYFDG
	OUTSTR[ASCIZ/FR80 Y VALUE OVERFLOW!
/]
	TRO T,(<BYTE(4)1>)
	JRST FROUT		;AND Y PART

YONLY:	MOVE T,Y
	CAMN T,LASTY
	POPJ P,
	MOVEM T,LASTY
MPC,<	SUB T,YOFF	>
	PUSHJ P,FRFIXY
	CAIG T,FRMAX-FRYFDG
	CAIGE T,FRYFDG
	OUTSTR[ASCIZ/FR80 Y VALUE OVERFLOW!
/]
	TRO T,(<BYTE(4)3>)
	TDO T,TT
	JRST FROUT

FRLINS:	CAIN D,2
	JRST FRLIN		;VISIBLE
	JRST FRLNS		;INVISIBLE

FRTXT:	PUSH P,TT
	PUSHJ P,FRLNS		;INVISIBLE
	MOVEI T,777777
	MOVEM T,LASTY
	MOVEM T,LASTX		;FLUSH THESE
	POP P,TT
	MOVE T,@3(TT)		;GET ROTATION
	CAMN T,LSTROT		;DIF?
	JRST OLDROT
	MOVEM T,LSTROT
	LSH T,1
	ANDI T,7
	TRO T,(<BYTE(3)2(6)10>)
	PUSHJ P,FROUT
OLDROT:	MOVE T,@2(TT)
	IMUL T,FRFUDG
	PUSH P,TT
	IDIVI T,=10			;ACCOUNT FOR EXTRA FACTOR OF 10 IN FRFUDG
	CAILE T,777
	MOVEI T,777
	CAMN T,LSTSPC			;NEW CHAR SPACING?
	JRST OLDSPC
	MOVEM T,LSTSPC
	TRO T,(<BYTE(3)2(6)11>)		;SET CHAR SPACING
	PUSHJ P,FROUT
	MOVE T,LSTSPC			;GET CHAR SPACING
	MOVE TT,LSTSPC			;AND ANOTHER COPY
	LSH TT,-3			;TO 1/8
	SUB T,TT
	CAILE T,777
	MOVEI T,777
	TRO T,(<BYTE(3)2(6)24>)		;SET CHAR HEIGHT 7/8 TIMES SPACING
	PUSHJ P,FROUT
OLDSPC:	POP P,TT
	MOVEI T,(<BYTE(3)2(6)4>)
	PUSHJ P,FROUT			;TYPE MODE
	PUSH P,A
	SKIPA A,4(TT)
FRSTR:	PUSH P,A
	HRLI A,(<POINT 7,0>)
	SETZ T,
FRSLOP:	ILDB TT,A
	JUMPE TT,FRSTDN
	MOVEM TT,1(P)
	MOVE TT,IIITAB(TT)
	JUMPE TT,[	OUTSTR[ASCIZ/ILLEGAL CHAR "/]
			OUTCHR 1(P)
			OUTSTR[ASCIZ/"
/]
			JRST FRSLOP]
	PUSHJ P,FRCHR
	JRST FRSLOP

FRSTDN:	POP P,A
	MOVEI TT,203
	PUSHJ P,FRCHR
	JUMPE T,CPOPJ
	MOVEI TT,0
FRCHR:	LSH T,9
	IOR T,TT
	TRNN T,777000
	POPJ P,
	PUSHJ P,FROUT
	SETZ T,
	POPJ P,
;III CHARACTER TABLE
IIITAB:	0
	436		;
	401		;
	402		;BETA
	660		;
	657		;
	405		;
	413		;
	410		;
	0		;TAB
	0		;LF
	424		;INTEGRAL SIGN
	425		;PLUS MINUS
	0		;CR
	0		;
	427		;
	0		;
	0		;
	420		; PRINT AS OMEGA
	0		;
	0		;
	0		;
	0		;
	0		;
	537		;_
	434		;
	534		;TILDA
	650		;
	647		;
	651		;
	0		;
	652		;

FOR I_40,77
<	400+I
>
	540		;@
FOR I_101,133
<	400+I
>
	437		;\
	535		;]
	435		;^
	433		;_
	500		;`
FOR I_141,173
<	400+I
>
	576		;|
	0		;ALTMODE
	575		;RIGHT CURLY BRACKET
	536		;HAT
