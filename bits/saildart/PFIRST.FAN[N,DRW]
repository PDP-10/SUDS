;DRAWING SYSTEM PLOTTER PROGRAM -- R. HELLIWELL

LALL

DEFINE VERSION ' (V) <V'13>
VERSION (SUBTTL PPCP V)    RPH<STANFORD>,RPM+DAG<DEC>,AED(AD0L)<CMU>
VERSION VPPCP__
EXTERNAL VPLOTS

;AC'S, BITS, RETICLES(PC), BOX SIZES

DEFINE SETSW $ (NAME,DEFVAL)
<	IFNDEF NAME$SW,<NAME$SW__IFIDN <DEFVAL> <> <0;> DEFVAL
>
	NAME$SW__NAME$SW
>

DEFINE ONOFSW $ (NAME,DEFVAL)
<	SETSW(NAME,DEFVAL)
	IFN NAME$SW,<NAME$SW__-1>	;MAKE IT NICE FOR  AND 
>
DEFINE DEFSW $ (NAME)
<	DEFINE NAME,<IFN NAME$SW>
	DEFINE NO$NAME,<IFE NAME$SW>
>
DEFINE MAKESW(NAME,VAL)
<	ONOFSW(NAME,VAL)
	DEFSW(NAME)
>

MAKESW(STAN)
MAKESW(DEC)
MAKESW(CMU)		;CARNEGIE-MELLON UNIVERSITY
MAKESW(ITS)

DEFINE STANFO,<STAN>		;LONG FORM FOR HYSTERICAL RAISINS

DEFINE CHECK $ (SITE,VAR) <IFDEF VAR,<SITE$SW__-1;>>
IFE STANSW!DECSW!CMUSW!ITSSW,<
;IF NO SITE SET MANUALLY ABOVE, WE MUST DECIDE FOR OURSELVES WHERE WE ARE
CHECK(ITS,.IOT) CHECK(CMU,CMUDEC) CHECK(STAN,SPWBUT) DECSW__-1
>

NOCMU,<
NOITS,<
DEFINE SPL
<SPLSW__-1
PRINTS /PLOTTER SPOOLER VERSION
/
>
DEFINE PC<PCSW__-1
PRINTS /PC VERSION SELECTED
/>

DEFINE NOVIROS<VIROSSW__0
PRINTS /NON VIROS VERSION SELECTED
/>
PRINTS /	TYPE	TO GET
	PC	PC PROGRAM
	SPL	OUTPUT TO PLOTTER SPOOLER AREA
	NOVIROS	NON VIROS VERSION
	END WITH ^Z
/

.INSERT TTY:
>;NOITS
>;NOCMU


NODEC,<VIROSSW__0>
MAKESW(VIROS,-1)

ONOFSW(PC,0)
DEFINE MD,<IFE PCSW>
DEFINE MPC,<IFN PCSW>

MD,<SETSW(GERB,0)>	;NO GERBER IF DWG PROG
MAKESW(GERB,DECSW)	;RELATIVE GERBER AT DEC

MAKESW(SPLIT,DECSW)		;PLOTTER RUNS IN ANOTHER PROCESS

NOSPLIT,<SPLSW__0>
MAKESW(SPL)
SPLPPN__<4,,414>		;AREA <PLTSPOOL>

SPLIT,<ONOFSW(XGP,0)>		;OFF IF SPLIT PROG
ONOFSW(XGP,STANSW!CMUSW!ITSSW)	;PRODUCE CODE TO RUN A XEROX GRAPHIC PRINTER
DEFINE MXGP <IFN XGPSW>
DEFINE NOXGP <IFE XGPSW>

MAKESW(DECOS,DECSW!CMUSW)	;DEC LIKE OPERATING SYSTEM

MAKESW(MAC,0)			;MIT PROJECT MAC (NOT TO BE CONFUSED WITH ITS)

MAKESW(DSKO,SPLITSW!DECSW)
DEFINE DSKOUT <DSKO>		;LONG FORM FOR HYSTERICAL RAISINS

MAKESW(BSCL,CMUSW!MACSW)	;SCALE THE BOXES
MAKESW(CMUB,CMUSW!MACSW)	;CMU STYLE BOX LABEL

MAKESW(LOGO,CMUSW)		;PUT OUT A LOGO IF IT FITS

MD,<TITLE P>
MPC,<TITLE PCP>

VMAJOR__1	;MAJOR VERSION #
VMINOR__0	;MINOR VERSION LETTER
VGROUP__2	;MODIFYING GROUP

ORG	137
	<BYTE (3) VGROUP (9) VMAJOR (6) VMINOR>+VPLOTS+VPPCP
ORG

EXTERNAL PLOTS,PLOT,SYMBOL,REF,.JBFF,.JBREL
SPLIT,<EXTERNAL MAXMIN,PLOTID>
NOSPLIT,<EXTERNAL ROTIT,SETXY,WHERE
MXGP,<	EXTERNAL XTHICK	>
>;NOSPLIT

ITS,<
OPDEF SWAP [CALLI 400004]
OPDEF DSKPPN[CALLI 400071]
>;ITS

NOSTANFO,<
OPDEF	RESET	[CALLI]
OPDEF	DEVCHR	[CALLI	4]
OPDEF	WAIT	[CALLI	10]
OPDEF	CORE	[CALLI	11]
OPDEF	EXIT	[CALLI	12]
OPDEF	DATE	[CALLI	14]
OPDEF	MSTIME	[CALLI	23]
OPDEF	GETPPN	[CALLI	24]
OPDEF	PJOB	[CALLI	30]
OPDEF	SLEEP	[CALLI	31]
OPDEF	GETLN	[CALLI	34]
>;NOSTANFO

DECOS,<OPDEF DSKPPN [GETPPN] >

;MAXIMUM VERSION # WE KNOW ABOUT
MD,<MAXVER__13>
MPC,<MAXVER__5>

;MAX STRING LENGTH FOR BRSTR
STRMAX__40

;PUSHDOWN STACK LENGTH
PDLLEN__200

STAN,<ALTMOD__175>
NOSTAN,<ALTMOD__33>

;AC'S:

A_1
B_2
C_3
D_4
E_5
F_6
G_7
H_10
I_11
FLAG_12		;FLAG WORD
T_13
TT_14
TTT_15
P_17

;FLAG BITS FOUND IN FLAG

;RIGHT HALF

DEFINE FLGMAC(A,B,C)
<A__B
IFIDN<C><P><PBITS__PBITS!A>
>

PBITS__0		;"PERMANENT" BITS

MPC,<
FLGMAC(DOMAG,1,P)		;MAKING TRW MAGTAPE
FLGMAC(DOTAPE,2,P)		;MAKING DRILL TAPE
FLGMAC(PLANE,4)			;THIS IS AN INNER PLANE
FLGMAC(TRWDRL,10,P)		;DRILL HOLES ONLY
FLGMAC(ADDSYM,20)		;ADDING SYMBOL DEFINITIONS
FLGMAC(MAPIT,40)		;MAPPING RETICLES
FLGMAC(FRONT,200000)		;FRONT SIDE OF PC CARD
>;MPC
MD,<
FLGMAC(PRODUCE,1,P)		;FR80 PRODUCTION RUN!
NOSPLIT,<FLGMAC(REPOS,2,P)		;REPOSITION AT END>
CMU,<FLGMAC(VERTICAL,4,P)>		;VERTICAL OUTPUT BOXES
>;MD
FLGMAC(FR80,100,P)		;FR80 OUTPUT
FLGMAC(IKNOW,200)		;I KNOW WHERE I WAS LAST
FLGMAC(%DOPLT,400,P)		;PLOTTING ON CALCOMP
FLGMAC(IFLAG,1000)		;READING INDIRECT DESCRIPTOR
FLGMAC(IREAD,2000,P)		;READING INDIRECT FILE
NODEC,<NOSPLIT,<FLGMAC(RSTENB,4000,P)	;ENABLE RESTART CAPABILITY>>
DSKOUT,<FLGMAC(DODSK,4000,P)	;OUTPUTTING TO DSK, NOT PLT>
MXGP,<
FLGMAC(XGP,10000,P)		;XGP OUTPUT
FLGMAC(BXGP,20000)		;USING XGP BOX
FLGMAC(XGPGO,40000,P)		;GO TO X (SWAP WITH THIS JOB)
FLGMAC(XGPSPL,100000,P)		;TELL X TO SPOOL .XGP FILES FOR LATER OUTPUT
>;MXGP

;LEFT HALF

DEFINE FLGMAC(A,B,C)
<A__B
IFIDN<C><P><PBITS__PBITS!A=18>
>

FLGMAC(QUICK,1,P)		;QUICK MODE, LESS TYPING
FLGMAC(TFLG,2)			;TEMP FLAG
MD,<FLGMAC(SIMBOX,4,P)>		;SIMPLE BOX, NO LETTERS OR EXTRA BOXES
MPC,<FLGMAC(TFLUSH,4,P)		;SKIP ANY TEXT FROM FILE
GERB,<FLGMAC(GROTIT,10,P)>	;ROTATE GERBER PLOT OUTPUT
>;MPC
FLGMAC(NODEL,20,P)		;DON'T DELETE DPL FILE AFTER PLOT
LOGO,<FLGMAC(LOGFLG,40)>	;LOGO WILL FIT
SPL,<FLGMAC(SKPSPL,100,P)>	;DON'T SPOOL OUTPUT IF ON


;DEFAULT BITS TURNED ON AT OUTSET
DEC,<
MPC,<SIMBOX__0>
SPLIT,<	DEFBIT__<SIMBOX,,DODSK!%DOPLT>>
NOSPLIT,<	DEFBIT__<SIMBOX,,0>>
>;DEC
CMU,<
MPC,<	SIMBOX__0>
>;CMU
NODEC,<	DEFBIT__<SIMBOX!NODEL,,0>>


MPC,<
;1/2 WIDTH OF CONNECTOR FINGER IN MILS
FWIDTH__=40

;RETICLE DEFINITIONS
LINRET__1		;LINE DRAWING
TXTRET__2		;TEXT DRAWING
IPBRET__3		;INNER PLANE BORDER
FNGRET__4		;FINGERS
TARRET__5		;TARGETS
DONUT__6		;FIRST PAD MUST BE DONUT
	;7		NORMAL PAD
	;8		INNER PLANE CLEARANCE
	;9		PIN 1 SQUARE
>;MPC

;CHARACTER SIZES IN RASTER POINTS
NODEC,<CWIDTH__10
CHGHT__20
RCHGHT__10	;ACTUAL HIEGHT OF LETTER
>;NODEC
DEC,<CWIDTH__6
CHGHT__12
RCHGHT__6
>;DEC
BASLIN__(CHGHT-RCHGHT)/2

;STEP SIZE IN TENTHS OF MILS
STEPSIZE__=50

;PLOTTER SIZE
PLTWID__=28000/5		;PLOTTER IS 28" WIDE
ITS,<PLTWID__=11000/5>		;EXCEPT AT MIT IT'S 11"

;XGP SIZE
MXGP,<
NOCMU,<	XGPWID__=200*=17/2 >	;200 BPI, 8.5 INCHES
CMU,<	XGPWID__=183*=17/2 >	;183 BPI, 8.5 INCHES
>;MXGP

MD,<
;DRAWING SIZES ***********
MXGP,<
;XGP SPECIAL 8.5 X 11
XGPH__(=8500-=500)/5
XGPW__(=11000-=500)/5
XGPLAB__=300/5
>;MXGP

;A	8.5 X 11
AH__(=8500-=500)/5
AW__(=11000-=500)/5

;B	11 X 17
BH__(=11000-=1000)/5
BW__(=17000-=1000)/5

;C	17 X 22
CH__(=17000-=1000)/5
CW__(=22000-=1000)/5

;D	22 X 34
DH__(=22000-=1000)/5
DW__(=34000-=1000)/5

;E	34 X 44
EH__(=34000-=1000)/5
EW__(=44000-=1000)/5

LABH__=1000/5
CMUB,<LABH__=2000/5>

LABW__AW		;SAME AS INSIDE OF SMALLEST BOX
CMU,<LABW__LABW-=1100/5>
CMUB,<LABW__=10000/5>

LOGO,<LOGOW__=2000/5>

DEC,<
DLABH__=1200/5
DLABW__=13000/5
LABH__DLABH
>;DEC
NODEC,<
DLABH__LABH
DLABW__LABW
>;NODEC
>;MD


;PRACTICAL BOUNDS OF FR80 FRAME
FRMAX__40000	;SIZE OF FR80 IMAGE SQUARE (16384)
		;MUST BE POWER OF 2!!!!!!
FRXFDG__0	;FULL X
FRYFDG__=2000	;TAKE OFF 2000 POINTS ON TOP AND BOTTOM

TFLG__2

CPOPJ1:	AOS (P)
CPOPJ:	POPJ P,
;IO CHANNEL ASSIGNMENTS

TRWCHN__0	;TRW OUTPUT
SIG__1		;SIGNATURE INPUT
F80CHN__2	;FR80 OUTPUT
ICHN__3		;DSKIN CHANNEL
DAT__5		;DATA INPUT
TAP__6		;DRILL TAPE OUTPUT
LST__7		;TRW LISTING OUTPUT
NOITS,<PCHN__17	>	;PLOTTER OUTPUT CHANNEL
ITS,<PCHN__10	>	;CHANNEL 17 IS USED BY ITS COMPATIBILITY PACKAGE

;UDP DEVICE BIT IN DEVCHR
UDP__100000

;DEFINITIONS FOR SORT PACKAGE
TEXP__5		;NUMBER OF BITS OF SIGNIFICANCE IN X,Y'S
TSIZ__1TEXP	;NUMBER OF TABLE ENTRIES PER DIMENSION
TSQR__TSIZ*TSIZ	;TOTAL SIZE OF TABLE

;FILE EXTENSION DEF'S
EXTTXT__<'TXT'>			;FOR @ FILES
MD,<
NODEC,<EXTPLT__<'PLT'>>	;LOGIC DRAWING INPUT
DEC,<EXTPLT__<'DPL'>>
>;MD
MPC,<EXTPLT__<'PCP'>>	;PC CARD INPUT
EXTF80__<'F80'>		;FR80 OUTPUT
MD,<EXTSIG__<'SIG'>>	;SIGNATURE INPUT
MPC,<EXTTRW__<'MAG'>	;TRW OUTPUT
EXTLST__<'LOG'>		;TRW LOG FILE
EXTDRL__<'DRL'>		;DRILL TAPE OUTPUT
>;MPC
DEC,<EXTPLO__<'PLT'>>		;DISK OUTPUT FILE EXT
SPLIT,<
MD,<EXTPLO__<'PLO'>>
MPC,<EXTPLO__<'PCO'>>
>;SPLIT
MXGP,<EXTPLX__<'PLX'>>		;XGP OUTPUT
MPC,<
EXTCRD__<'CRD'>		;PC CARD DEFINITION FILE
CRDVER__1		;PC CARD FILE VERSION NUMBER
>;MPC
;MACROS
DEFINE GETFS(AC)
<	SKIPN AC,FSTPNT
	PUSHJ P,NOFST
	PUSH P,(AC)
	POP P,FSTPNT
>

DEFINE FSTRET(AC)
<	HLLI AC,
	EXCH AC,FSTPNT
	HRRZM AC,@FSTPNT
>

DEFINE SCALE(AC)
<	IMUL AC,NSCALE
MD,<	ASH AC,-3	>
>

DEFINE UNSCALE(AC)
<MD,<	ASH AC,3	>
	IDIV AC,NSCALE
>
              
         
DEC,<
DEFINE BSCALE(AC)
<	IMUL AC,NSCALE
	ASH AC,-1
>
DEFINE UNBSCL(AC)
<	MOVEM AC+1,UNBSCS#	;CAN'T PUSH BECAUSE AC MIGHT BE P-1
	ASH AC,1
	IDIV AC,NSCALE
	MOVE AC+1,UNBSCS
>
;MACRO TO GET FROM EXTERNAL VALUE TO BOX VALUE
DEFINE XSCALE(AC)
<	ASH AC,-2	>
>;DEC
NODEC,<
NOCMU,<
NOBSCL,<
DEFINE BSCALE(AC)
<>
DEFINE UNBSCL(AC)
<>
>;NOBSCL
BSCL,<
DEFINE BSCALE(AC)
<	IMUL AC,BSCALF
	ASH AC,-1
>
DEFINE UNBSCL(AC)
<	MOVEM AC+1,UNBSCS#
	ASH AC,1
	IDIV AC,BSCALF
	MOVE AC+1,UNBSCS
>
>;BSCL
>;NOCMU
CMU,<
DEFINE BSCALE(AC)
<	IMUL AC,MIL5.INC	;FUDGE FROM 5-MIL UNITS TO INCREMENTS
BSCL,<	IMUL AC,BSCALF>		;NOW SCALE IT FOR BOX SIZE
	ADDI AC,400000		;ROUND IT
	HLRES AC		;AND PUT IT WHERE IT BELONGS
>
DEFINE UNBSCL(AC)
<	MOVEM AC+1,UNBSCS#	;CAN'T PUSH BECAUSE AC MIGHT BE P-1
	IMUL AC,INC.MIL5
BSCL,<	IDIV AC,BSCALF>
	ADDI AC,400000
	HLRES AC
	MOVE AC+1,UNBSCS
>
BPI__=183			;CMU XGP HAS 183 BITS PER INCH, ROUGHLY
MIL5.INC:	5B17*BPI/<BSCL,<2*>=1000>	;FACTOR FOR CONVERTING 200 BPI TO 183 BPI FOR CMU XGP
INC.MIL5:	BSCL,<2*>=200B17/BPI	;FACTOR FOR CONVERTING 183 BPI TO 200 BPI
>;CMU
DEFINE XSCALE(AC)
<	SCALE(AC)	>
>;NODEC

NOCMU,<
DEFINE BTXSCL<BSCALE>
>;NOCMU

CMU,<
DEFINE BTXSCL(AC)
<
BSCL,<	IMUL AC,BSCALF
	ASH AC,-1
>;BSCL
>
>;CMU
;DATA
DEFINE DATA(LABEL,D.PC,SIZE)
<
IFIDN <D.PC><D><
MD,<SDATA(LABEL,SIZE)>
>
IFIDN <D.PC><PC><
MPC,<SDATA(LABEL,SIZE)>
>
IFIDN <D.PC><BOTH><
SDATA(LABEL,SIZE)
>
>;DATA

DEFINE SDATA(LABEL,SIZE)
<
LABEL:
IFIDN <SIZE><><0>
IFDIF <SIZE><><BLOCK SIZE>
>;SDATA

DOPLT:	REF
INTERNAL DOPLT


DATA	LBUF,BOTH,9
DATA	TOPS,BOTH,TSQR
DATA	FSTPNT,BOTH
DATA	FSTTOP,BOTH
DATA	T1SI,BOTH
DATA	T2SI,BOTH
DATA	LOOPY,BOTH
DATA	MINX,BOTH
DATA	MINY,BOTH
DATA	MAXX,BOTH
DATA	MAXY,BOTH
DATA	DIVX,BOTH
DATA	DIVY,BOTH
DATA	DRAWL,BOTH
DATA	CURX,BOTH
DATA	CURY,BOTH
DATA	VALBST,BOTH
DATA	POSBST,BOTH

DATA	PDL,BOTH,PDLLEN
DATA	DATHD,BOTH,3
DATA	IBUF,BOTH,210*2
DATA	STR0,D,10
DATA	CRDLOC,D,STRMAX
DATA	AUTHOR,D,STRMAX
DATA	TITL1,D,STRMAX
DATA	TITL2,D,STRMAX
DATA	SITE1,D,STRMAX
DATA	SITE2,D,STRMAX
DATA	MODULE,D,STRMAX
DATA	REV,D,STRMAX
DATA	TPROJ,D,STRMAX
DATA	TPAGE,D,STRMAX
DATA	TOF,D,STRMAX
DATA	TDCODE,D,STRMAX
DEC,<
DATA	TNXTHI,D,STRMAX
DATA	DRNNAM,D,3
DATA	CHKNAM,D,3
DATA	ENGNAM,D,3
>;DEC
DATA	TANGLE,D
DATA	FLIP,PC
DATA	LSTRET,PC
DATA	PADTYP,PC
DATA	BIGPAD,PC
DATA	STRING,PC,=200/5
DATA	MAGBUF,PC,3
DATA	MAGBFR,PC,210*2
DATA	LSTHD,PC,3
DATA	LSTBUF,PC,210
DATA	TAPHD,PC,3
DATA	TAPBUF,PC,210*2
DATA	FRBUF,BOTH,3
DATA	FRBFR,BOTH,210*2
DATA	LASTX,BOTH
DATA	LASTY,BOTH
DATA	LSTROT,BOTH
DATA	LSTSPC,BOTH
DATA	FRFUDG,BOTH
DATA	SAVNAM,BOTH
DATA	SAVEXT,PC
DATA	SAVPPN,PC
DATA	BOXNAM,D
DATA	BOXPPN,D
DATA	FILNAM,BOTH
DATA	FILEXT,BOTH
DATA	FILDAT,BOTH
DATA	FILPPN,BOTH
CMU,<
DATA PPNBUF,BOTH,3
>;CMU
DATA	DELNAM,BOTH
DATA	DELEXT,BOTH
DATA	DELDAT,BOTH
DATA	DELPPN,BOTH
DATA	CRDNAM,PC
DATA	CRDEXT,PC
DATA	CRDDAT,PC
DATA	CRDPPN,PC
MXGP,<
DATA	XGPNAM,BOTH
DATA	XGPEXT,BOTH
DATA	XGPPPN,BOTH
>;MXGP
DATA	IBUFR,BOTH,3
DATA	IBUFRD,BOTH,210
DATA	THING1,BOTH
DATA	T3S,BOTH
DATA	T3P,BOTH
DATA	T2S,BOTH
DATA	T2P,BOTH
DATA	T1S,BOTH
DATA	T1P,BOTH
DATA	XOFF,BOTH
DATA	YOFF,BOTH
DATA	PVER,BOTH
DATA	DOTXT,PC
DATA	ANGLE,BOTH
DATA	CSIZZ,BOTH
DATA	Y,BOTH
DATA	X,BOTH
DATA	MAGWRD,PC
DATA	EXTSAV,BOTH
DATA	SMLY,BOTH
DATA	SMLX,BOTH
DATA	LRGX,BOTH
DATA	LRGY,BOTH
DATA	CURSE,BOTH
DATA	NSCALE,BOTH
BSCL,<
DATA	(BSCALF,BOTH)		;BOX SIZE
>;BSCL
DATA	SCALE1,BOTH
DATA	ANYTXT,PC
DATA	CSIZ,PC
DATA	MTAB,PC,5
GERB,<
DATA	GERBX,PC
DATA	GERBY,PC
>;GERB
DATA	WIDTH,D
DATA	OFFSET,D
DATA	HEIGHT,D
DATA	LABSIZ,D
DATA	BRDPNT,D
DATA	LSIZE,D
DATA	LSTBOX,D
DATA	XVAL,D
DATA	YVAL,D
DATA	STUBXY,D
DEC,<
DATA	BOXINC,D
DATA	ENDBOX,D
>;DEC
DATA	BOXPNT,D
NODEC,<
DATA	SIGNAM,D,3
>;NODEC
DATA	DRWDAT,D
DATA	PADNUM,PC
DATA	CENTER,BOTH
DATA	PARG,D
DATA	PATCH,BOTH,100
NOSPLIT,<
DATA	START,D
DATA	STOP,D
DATA	FROTIT,D
DATA	%ROTIT,BOTH
MXGP,<
DATA	%XTHICK,BOTH
>;MXGP
NODEC,<
DATA	RSTART,D
DATA	SAVEP,BOTH
DATA	SX,BOTH
DATA	SY,BOTH
DATA	RSTCNT,BOTH
DATA	RSTSET,BOTH

PSWAP:	'DSK   '
	'PLOT00'
	0
SIZE:	XWD 0,PLTRST
	0
>;NODEC
>;NOSPLIT

	DATPPN_'DATDRW'
CMU,<	DATPPN_<10173,,101310>>	;E210DP00
DEC,<
NOVIROS,<	DATPPN__0 >
VIROS,<	DATPPN__<4,,253>	>
>;DEC

MPC,<
LIBPPN:	DATPPN
>;MPC

N2L:	0
FOR I IN(A,B,C,D,E,F,H,J,K,L,M,N,P,R,S,T,U,V,W,X,Y,Z)
<	"I"
>
REPEAT 100-(.-N2L),<"?">
;FREE STORAGE ROUTINES
FSTINI:	SETZM FSTPNT
	MOVE T,T1P	;GET TOP OF CORE
	MOVEM T,FSTTOP	;SET AS CURRENT NXM
	POPJ P,

NOFST:	SOS (P)
	SOS (P)		;RETURN TO SKIPN
	PUSH P,T	;SAVE AN AC
NOFST2:	MOVE T,FSTTOP
	MOVEM T,FSTPNT	;NEW FREE STORAGE POINTER
	ADDI T,1777	;GET AT LEAST 1K
	CORE T,
	JRST [	PUSHJ P,NOCORE
		JRST NOFST2]
	AOS T,FSTTOP
NOFST1:	HRRZM T,-1(T)
	CAMG T,.JBREL
	AOJA T,NOFST1
	SETZM -1(T)
	MOVEM T,FSTTOP	;NEW NXM
	POP P,T
	POPJ P,
    