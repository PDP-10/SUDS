SUBTTL	LOCS.FAI: ROUTINES WITH KNOWLEDGE OF BOARD LOCATIONS

BEGIN LOCS

MDPC,<	VERSION(LOCS,1)	>

;THIS SOURCE FILE (&WWC.FAI) CONTAINS ALL ROUTINES WITH KNOWLEDGE OF
;THE EXTERNAL (PRINTED) REPRESENTATION OF LOCATIONS.
;THE FOLLOWING ARE THE ONLY VALID ASSUMPTIONS OUTSIDE OF HERE:
;
;1)	A BOARD LOCATION (BAY/RACK/SLOT # FOR DEC PDP-10 LIKE STUFF)
;	IS 18 BITS, NON-ZERO

;2)	A DIP LOCATION IS 18 BITS, OF WHICH AT LEAST THE LOW ORDER
;	12 MUST BE NON-ZERO

;3)	A DIP PIN # IS 6 BITS, NON-ZERO

;4)	A CONNECTOR PIN LOCATION IS 6 BITS OF PADDLE/JACK, NON-ZERO

;5)	A CONNECTOR PIN # IS 12 BITS, NON-ZERO (DEC SUBDIVIDES THIS INTO 2
;	6-BIT FIELDS, FOR INSTANCE)
SUBTTL	WLOCOUT, LOCOUT -- LOCATION PRINTING ROUTINES; SLTLPN

MWL,<
^WLOCOUT:
WWNOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>),<
	TRNE T,BBC		;BACK CONNECTOR?
	PUTBYT BSCHR
	TRNE T,BFC		;FRONT CONNECTOR?
	PUTBYT "_"
	TRNE T,BWILD
	PUTBYT WLDCHR
>;WWNOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>)
>;MWL
MDPC,<
^SLTLPN:
	PUSHJ P,SLTOUT
	HLRZ A,A
>;MDPC
^LOCOUT:
	LDB TTT,[POINT 6,A,23]
	JUMPE TTT,CPOPJ		;NOTHING HERE, MEANS NOTHING AT ALL
WWNOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>),<
	PUTBYT @N2L(TTT)
	TRNN A,7777		;CON?
	POPJ P,			;YES
	LDB T,[POINT 12,A,35]	;NO, PRINT NUMBER
	JRST PUTDEC
>;WWNOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>)
WWOR(<HWLAUG,HWLMQX>),<
	LDB TTT,[POINT 12,A,35]
	TRNE A,7777
	PUTBYT "0"-1(TTT)
	LDB TTT,[POINT 6,A,23]
	PUTBYT @N2L(TTT)
	POPJ P,
>;WWOR(<HWLAUG,HWLMQX>)
WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
	TRNN A,7777		;CONNECTOR PIN?
	JRST [
WWOR(<AUGHEX>),<
		TRNE TTT,40		;Is it a DEC paddle?
		JRST [	PUTBYT "J"
			MOVEI T,-40(TTT)
			JRST PUTDEC ]
		PUTBYT "*"	;yes
		PUTBYT @N2L(TTT)
>;WWOR(<AUGHEX>)
WWNOR(<AUGHEX>),<
		PUTBYT "J"
WWOR(<AUGU6,AUGcmu>),<	ROT TTT,-1 >
		PUTBYT @N2L(TTT)
WWOR(<AUGU6,AUGcmu>),<
		LSH TTT,1-=36
		PUTBYT "1"(TTT)
>;WWOR(<AUGU6,AUGcmu>)
>;WWNOR(<AUGHEX>)
		POPJ P, ]
	PUTBYT @N2L(TTT)
	LDB TTT,[POINT 6,A,29]
	PUTBYT @N2L(TTT)
	MOVEI TTT,2
	MOVEM TTT,NDIG
	LDB T,[POINT 6,A,35]
	JRST NPUTDEC
>;WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
SUBTTL	LOCPIN -- PRINTS LOCATION AND PIN #
MWL,<
^LOCPIN:
	PUSHJ P,LOCOUT
	PUTBYT "("
	HLRZ T,A
	PUSHJ P,PUTDEC
	PUTBYT ")"
	POPJ P,
>;MWL
SUBTTL	PINPLS -- PRINTS PIN # ON COMPONENT SIDE

MDPC,<
^PINPLS:
	HLRZ T,A
	PUSHJ P,PUTDEC
WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
MD,<	TRNE A,R1416
	JRST [	CAML A,[8,,0]
		PUTSTR [ASCIZ/+2/]
		POPJ P, ]
	TRNE A,L1416
	PUTBYT "+"
>;MD
>;WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
	POPJ P,
>;MDPC
SUBTTL	LOCPNP -- PRINTS DIP LOC AND PIN # ON COMPONENT SIDE

MWL,<
^LOCPNP:
	PUSH P,T
	PUSHJ P,LOCOUT
	PUTBYT "("
	HLRZ T,A
	PUSHJ P,PUTDEC
	POP P,T
WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
	TRNE T,R1416
	JRST [	CAML A,[8,,0]
		PUTSTR [ASCIZ/+2/]
		JRST LCPNP2 ]
	TRNE T,L1416
	PUTBYT "+"
>;WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
LCPNP2:	PUTBYT ")"
	POPJ P,
>;MWL
SUBTTL	LOCPNM -- PRINTS DIP LOC AND PIN # ON WIRE-WRAP SIDE

MWL,<
^LOCPNM:
	PUSH P,T
WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
	PUSHJ P,LOCOUT
	PUTBYT "("
	HLRZ T,A
	MOVE TT,(P)
	TRNE TT,R1416
	JRST [	CAIL T,8
		ADDI T,2
		JRST LCPNM3 ]
	TRNE TT,L1416
	ADDI T,1
LCPNM3:	PUSHJ P,PUTDEC
	POP P,T
	TRNE T,R1416
	JRST [	CAML A,[8,,0]
		PUTSTR [ASCIZ/-2/]
		JRST LCPNM2 ]
	TRNE T,L1416
	PUTBYT "-"
LCPNM2:	PUTBYT ")"
>;WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
	PUSHJ P,ABSPIN
	PUSHJ P,LOCOUT
	POP P,T
>;WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
	POPJ P,
>;MWL
SUBTTL	CSLTLP,LOCPNC,LOCPNW,PRCNPN -- CONNECTOR PIN PRINTING STUFF

^CSLTLP:
MD,<	PUSHJ P,CSLTOUT
	HLRZ A,A
	PUSH P,A
	TRZ A,7777
	PUSHJ P,LOCOUT
	POP P,A
>;MD
WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
MWL,<
^LOCPNC:
	PUSHJ P,LOCOUT
	JRST LCPNC3
^LOCPNW:
	PUSHJ P,WLOCOUT
LCPNC3:	HLRZ A,A
^PRCNPN:	
>;MWL
DEC,<	TRNE A,4000
	JRST [	LDB T,[POINT 11,A,35]
		JRST LCPNC2 ]
>;DEC
	LDB T,[POINT 6,A,29]
	PUTBYT @N2L(T)
	LDB T,[POINT 6,A,35]
LCPNC2:	
WWNOR(<HWLAUG,HWLMQX>),<
	JRST PUTDEC
>;WWNOR(<HWLAUG,HWLMQX>)
WWOR(<HWLAUG,HWLMQX>),<
	MOVEI TTT,2
	MOVEM TTT,NDIG
	SOJA T,NPUTDEC
>;WWOR(<HWLAUG,HWLMQX>)
>;WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
MWL,<
^LOCPNC:
^LOCPNW:
	PUSHJ P,LOCOUT
	HLRZ A,A
>;MWL
WWOR(<AUGHEX>),<
	TRNE A,7700
	JRST [	LDB T,[POINT 6,A,29]
		PUTBYT @N2L(T)
		LDB T,[POINT 6,A,35]
		JRST PUTDEC ]
	PUTBYT "-"
>;WWOR(<AUGHEX>)
MWL,<
^PRCNPN:
>;MWL
	LDB T,[POINT 6,A,35]
	MOVEI TTT,2
	MOVEM TTT,NDIG
	JRST NPUTDEC
>;WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
SUBTTL	SLTOUT -- PRINTS DIP BAY/RACK/SLOT #

^SLTOUT:
	LDB T,[POINT 4,A,21]
	JUMPE T,.+2
	PUSHJ P,PUTDEC
	LDB TT,[POINT 5,A,26]
MDPC,<	JUMPE TT,CPOPJ	>
	PUTBYT @N2L(TT)
	LDB TTT,[POINT 3,A,29]
	JUMPE TTT,SLTOU1
	ADD TT,TTT
	PUTBYT @N2L(TT)
SLTOU1:	MOVEI T,2
	MOVEM T,NDIG
	LDB T,[POINT 6,A,35]
	JRST NPUTDEC
SUBTTL	CSLTOUT -- PRINTS CONNECTOR PIN BAY/RACK/SLOT #

MD,<
^CSLTOUT:
	TRNN A,-1
	POPJ P,
	LDB T,[POINT 3,A,29]
	LDB TT,[POINT 6,A,5]
	CAILE TT,1(T)			;ON BACK PANEL?
	JRST SLTOUT			;NO, TREAT LIKE A BODY
	LDB T,[POINT 4,A,21]		;SHOW ACTUAL BACKPANEL RACK LETTER
	SKIPE T
	PUSHJ P,PUTDEC
	LDB TT,[POINT 5,A,26]
	LDB T,[POINT 6,A,5]
	ADDI TT,-1(T)
	PUTBYT @N2L(TT)
	LDB T,[POINT 6,A,35]
	JRST PUTDEC
>;MD
SUBTTL	PUTDEC,NPUTDEC -- DECIMAL OUTPUT ROUTINES

^PUTDEC:SETZM NDIG
^NPUTDEC:
	SKIPGE T
	PUTBYT "-"
	MOVM T,T
DECOU1:	IDIVI T,=10
	HRLM TT,(P)
	SOSG NDIG
	JUMPE T,.+2
	PUSHJ P,DECOU1
	HLRZ TT,(P)
	MOVEI TTT,"0"(TT)
	XCT PUTCHR
	POPJ P,

MWL,<	^DECOUT_PUTDEC
	^NDECOUT_NPUTDEC
>;MWL
SUBTTL	L2N,N2L -- LETTER/NUMBER CONVERSION TABLES

^L2N:	REPEAT 100, < 0
>
^N2L:	REPEAT 100, < "?"
>
EN2L:
NNN__1
DEFINE FOOMAC % (I,J) <
	ORG L2N+"I"-"A"
	MDPC,<J+>NNN
	^L2NI.%I__NNN
	ORG N2L+NNN
	"I"
NNN__NNN+1
>

WWNOR(<AUGU6,AUGcmu,AUGHEX,AUGU1,HWLAUG,HWLMQX>),<
FOR I IN(A,B,C,D,E,F,H,J,K,L,M,N,P,R,S,T,U,V,W,X,Y,Z)
<	FOOMAC I,0
>
FOR I IN (G,I,O,Q)
<	FOOMAC I,1B0
>
>;WWNOR(<AUGU6,AUGcmu,AUGHEX,AUGU1,HWLAUG,HWLMQX>)

WWOR(<HWLAUG,HWLMQX>),<
FOR I IN(A,B,C,D,E,F,H,J,K,L,M,N,P,R,S,T,U,V,W,X,G,Q,Y,Z)
<	FOOMAC I,0
>
>;WWOR(<HWLAUG,HWLMQX>)

WWOR(<AUGU6,AUGcmu,AUGHEX,AUGU1>),<
FOR I IN(A,B,C,D,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,U,V,W,X,Y,Z)
<	FOOMAC I,0
>
>;WWOR(<AUGU6,AUGcmu,AUGHEX,AUGU1>)

ORG EN2L

^N2LMAX__NNN-1
SUBTTL	LOCATION, SLOT, PIN READING ROUTINES

MWL,<	CHRREG__TTT
	NUMREG__A
	DESTIN__SLICEL
	DEFINE GETCH <	XCT GETCHR
			 JFCL
>
	DEFINE GETNUM <	PUSHJ P,DECIN
			 JFCL
>
	DEFINE CHKCUE <>
>;MWL

MDPC,<	CHRREG__C
	NUMREG__T
	DESTIN__LETTER
	DEFINE GETCH <	XCT GTCHRX
>
	DEFINE GETNUM <	PUSHJ P,GETDEC
>
	DEFINE CHKCUE <	TLNN M,DSKACT!MACACT
>

GETDEC:	SETZ NUMREG,
GTDEC1:	GETCH
	CAIL CHRREG,"0"
	CAILE CHRREG,"9"
	POPJ P,
	IMULI NUMREG,=10
	ADDI NUMREG,-"0"(CHRREG)
	JRST GTDEC1
>;MDPC
;GETSLT -- READS A BAY/RACK/SLOT #

;CALL IS:
;	PUSHJ P,GETSLT
;	JRST ERROR
;	JUMPE TT,CRLF.ONLY	;THIS IS OPTIONAL, OBVIOUSLY
;	MOVEM TT,BRS

^GETSLT:
;WE SHOULD PRINT A CUE MESSAGE HERE
	SETZM DESTIN
	GETNUM
	DPB NUMREG,[POINT 4,DESTIN,3]
	CAIN CHRREG,12
	JUMPE NUMREG,CPOPJ1
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPG CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 5,DESTIN,8]
	GETNUM
	JUMPN NUMREG,GTSLT2
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPG CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	LDB NUMREG,[POINT 5,DESTIN,8]
	SUB CHRREG,NUMREG
	JUMPL CHRREG,CPOPJ
	CAILE CHRREG,7
	POPJ P,
	DPB CHRREG,[POINT 3,DESTIN,11]
	GETNUM
GTSLT2:	DPB NUMREG,[POINT 6,DESTIN,17]
	JRST CPOPJ1
;GETLOC -- READS A LOC FOR EITHER A DIP OR A CONNECTOR PIN

;CALL IS:
;	PUSHJ P,GETLOC
;	JRST ERROR
;MDPC,<	JRST CRLF.ONLY >
;	JRST GOT.CONNECTOR.IN.TT
;	(DIP LOC IN TT)

WWNOR(<AUGU6,AUGcmu,AUGHEX,AUGU1,HWLAUG,HWLMQX>),<
MWL,<
^GETLOC:
	GETCH
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPN TT,L2N-"A"(CHRREG)		;CONVERT LETTER TO NUMBER
	POPJ P,
	HRLM TT,(P)
	GETNUM
	HLRZ TT,(P)
	LSH TT,14
	JUMPE NUMREG,CPOPJ1
	CAILE NUMREG,7777
	POPJ P,
	TRO TT,(NUMREG)
	JRST CPOPJ2
>;MWL
>;WWNOR(<AUGU6,AUGcmu,AUGHEX,AUGU1,HWLAUG,HWLMQX>)

WWOR(<HWLAUG,HWLMQX>),<
^GETLOC:
;SHOULD PRINT A CUE MESAGE HERE
GTLOC2:	GETCH
MDPC,<	CAIN CHRREG,12
	JRST CPOPJ1
>;MDPC
	CAIL CHRREG,"0"
	CAILE CHRREG,"9"
	JRST GETCON		;FUNNY, IT BETTER BE A CONNECTOR
	MOVEI TT,1-"0"(CHRREG)
	GETCH
	CAIL CHRREG,"A"
	CAILE CHRREG,"V"
	POPJ P,
	SKIPN CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	LSH CHRREG,14
	TRO TT,(CHRREG)
	GETCH
MDPC,<	AOS (P) >
	JRST CPOPJ2

GETCON:	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPN TT,L2N-"A"(CHRREG)
	POPJ P,
	LSH TT,14
	GETCH
MDPC,<	AOS (P) >
	JRST CPOPJ1
>;WWOR(<HWLAUG,HWLMQX>)

WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
^GETLOC:
;SHOULD PRINT A CUE MESAGE HERE
GTLOC2:
WWNOR(<AUGHEX>),<
	MOVSI NUMREG,400000
	IORM NUMREG,(P)		;FLAG THAT WE HAVEN'T SEEN A "J"
>;WWNOR(<AUGHEX>)
	GETCH
MDPC,<	CAIN CHRREG,12
	JRST CPOPJ1
>;MDPC
WWNOR(<AUGHEX>),<
	CAIN CHRREG,"J"
	JRST [	ANDCAM NUMREG,(P)
		GETCH
		JRST GTLOC3 ]
>;WWNOR(<AUGHEX>)
WWOR(<AUGHEX>),<
	CAIN CHRREG,"*"		;DEC PADDLE??
	JRST GDECCN
>;WWOR(<AUGHEX>)
GTLOC3:	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPN TT,L2N-"A"(CHRREG)
	POPJ P,
WWOR(<AUGU6,AUGcmu,AUGHEX>),<
	PUSH P,TT
	GETNUM
	POP P,TT
	JUMPN NUMREG,GETCON
WWNOR(<AUGHEX>),<
	SKIPL (P)
	POPJ P,
>;WWNOR(<AUGHEX>)
>;WWOR(<AUGU6,AUGcmu,AUGHEX>)
WWOR(<AUGU1>),<	GETCH >
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
WWOR(<AUGU1>),<	JRST GETCON >
WWNOR(<AUGU1>),<POPJ P, >
	SKIPN CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	LSH TT,6
	TRO TT,(CHRREG)
	HRLM TT,(P)
	GETNUM
	JUMPLE NUMREG,CPOPJ
	CAILE NUMREG,=99
	POPJ P,
	HLRZ TT,(P)
	LSH TT,6
	TRO TT,(NUMREG)
MDPC,<	AOS (P) >
	JRST CPOPJ2

GETCON:
WWOR(<AUGU6,AUGcmu>),<
	CAILE NUMREG,2
	POPJ P,
	LSH TT,1
	ADDI TT,-1(NUMREG)
>;WWOR(<AUGU6,AUGcmu>)
WWOR(<AUGHEX>),<
	CAIN TT,L2NI.J
	CAIL NUMREG,40
	POPJ P,
	MOVEI TT,40(NUMREG)
>;WWOR(<AUGHEX>)
GCNXIT:	LSH TT,=12
WWNOR(<AUGHEX>),< IORI TT,L2NI.J*100 >	;THIS IS HERE FOR HYSTERICAL RAISINS!!
MDPC,<	AOS (P) >
	JRST CPOPJ1
WWOR(<AUGHEX>),<
GDECCN:	GETCH
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPN TT,L2N-"A"(CHRREG)
	POPJ P,
	GETCH
	JRST GCNXIT
>;WWNOR(<AUGHEX>)
>;WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
;GTSLTL -- READS A BAY/RACK/SLOT/DIPLOC OR JUST A DIPLOC

;CALL IS:
;	PUSHJ P,GTSLTL
;	JRST ERROR
;	JRST CRLF.ONLY
;MD,<	JFCL	>	;LOC ONLY
;	(BRS,,LOC IN DESTIN)
;		MD,< NOTE: REGISTER D CLOBBERED >

MDPC,<

^GTSLTL:
	SETZM DESTIN
	CHKCUE
WWNOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>),<
MPC,<	OUTSTR[ASCIZ/
L#? /]
	GETCH
>;MPC
MD,<
	OUTSTR[ASCIZ/
#LL#L# OR L#? /]
	GETNUM
	CAIL NUMREG,20
	POPJ P,
	DPB NUMREG,[POINT 4,DESTIN,3]
>;MD
	CAIN CHRREG,12
	JUMPE NUMREG,CPOPJ1
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
MD,<
	SKIPN D,L2N-"A"(CHRREG)
	POPJ P,
	DPB D,[POINT 5,DESTIN,8]
	GETNUM
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	JRST [	JUMPE NUMREG,CPOPJ
		CAILE NUMREG,7777
		POPJ P,
		DPB NUMREG,[POINT 12,DESTIN,35]
		LDB NUMREG,[POINT 9,DESTIN,8]
		CAIL NUMREG,40
		POPJ P,
		DPB NUMREG,[POINT 24,DESTIN,23]
		JRST CPOPJ2]
	JUMPL D,CPOPJ		;GIOQ ILLEGAL FOR BRS
	JUMPE NUMREG,[
		LDB NUMREG,[POINT 5,DESTIN,8]
		MOVE CHRREG,L2N-"A"(CHRREG)
		SUB CHRREG,NUMREG
		JUMPLE CHRREG,CPOPJ
		CAILE CHRREG,7	
		POPJ P,
		DPB CHRREG,[POINT 3,DESTIN,11]
		GETNUM
		JUMPE NUMREG,CPOPJ
		CAIL CHRREG,"A"
		CAILE CHRREG,"Z"
		POPJ P,
		JRST .+1]
	CAILE NUMREG,77
	POPJ P,
	DPB NUMREG,[POINT 6,DESTIN,17]
>;MD
	SKIPN CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 6,DESTIN,23]
	GETNUM
	JUMPE NUMREG,CPOPJ
	CAILE NUMREG,7777
	POPJ P,
	DPB NUMREG,[POINT 12,DESTIN,35]
MD,<
^CPOPJ3:
	AOS (P)
>;MD
	JRST CPOPJ2
>;WWNOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>)
WWOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>),<
WWOR(<HWLAUG,HWLMQX>),<
	OUTSTR [ASCIZ/
#L? /]
>;WWOR(<HWLAUG,HWLMQX>)
WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
	OUTSTR [ASCIZ/
LL#? /]
>;WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
	PUSHJ P,GTLOC2
	POPJ P,
	JRST CPOPJ1
	POPJ P,
	HRRZM TT,DESTIN
	JRST CPOPJ2
>;WWOR(<HWLAUG,HWLMQX,AUGU1,AUGU6,AUGcmu,AUGHEX>)
>;MDPC
;GTCONP -- LIKE GTSLTL BUT FOR CONNECTOR PINS.

;CALL IS LIKE GTSLTL EXCEPT:
;LAY,<	CPOPJ1 RETURN MAY BE TAKEN ON TEXIST CHAR ALSO >

MD,<
^GTCONP:
	SETZM DESTIN
	CHKCUE
WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
WWNOR(<HWLAUG,HWLMQX>),<
	OUTSTR[ASCIZ/
CONNECTOR PIN # AND LOC
#LL#LL# OR LL#? /]
>;WWNOR(<HWLAUG,HWLMQX>)
WWOR(<HWLAUG,HWLMQX>),<
	OUTSTR[ASCIZ/
CONNECTOR PIN NUMBER, LL#? /]
>;WWOR(<HWLAUG,HWLMQX>)
	GETNUM
LAY,<	CAIE CHRREG,TEXIST >
	CAIN CHRREG,12
	JUMPE NUMREG,CPOPJ1
	DPB NUMREG,[POINT 4,DESTIN,3]
	PUSHJ P,RDLLN
	POPJ P,
	JRST [	LDB NUMREG,[POINT 4,DESTIN,3]
		JUMPN NUMREG,CPOPJ
		JRST CPOPJ2]
WWNOR(<HWLAUG,HWLMQX>),<
	LDB NUMREG,[POINT 6,DESTIN,35]
	DPB NUMREG,[POINT 6,DESTIN,17]
	LDB TT,[POINT 6,DESTIN,23]
	LDB NUMREG,[POINT 6,DESTIN,29]
DEC,<	TRZE NUMREG,40
	JRST [	JUMPN NUMREG,CPOPJ
		JRST GOTRA1]
>;DEC
	JUMPE TT,GOTRAK
	SUB NUMREG,TT
GOTRA1:	EXCH NUMREG,TT
GOTRAK:	JUMPL TT,CPOPJ
	DPB NUMREG,[POINT 5,DESTIN,8]
	DPB TT,[POINT 3,DESTIN,11]
	PUSHJ P,RDLLN
	POPJ P,
	JRST CPOPJ3
>;WWNOR(<HWLAUG,HWLMQX>)
	POPJ P,

RDLLN:	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	SKIPG CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 12,DESTIN,29]
	GETNUM
	JUMPN NUMREG,CKCR
	CAIL CHRREG,"A"
	CAILE CHRREG,"Z"
	POPJ P,
	LDB TT,[POINT 6,DESTIN,29]
	DPB TT,[POINT 6,DESTIN,23]
	SKIPG CHRREG,L2N-"A"(CHRREG)
	POPJ P,
	DPB CHRREG,[POINT 6,DESTIN,29]
	GETNUM
WWOR(<HWLAUG,HWLMQX>),<
	ADDI NUMREG,1
>;WWOR(<HWLAUG,HWLMQX>)
	JUMPE NUMREG,CPOPJ
CKCR:
DEC,<	LDB TT,[POINT 12,DESTIN,29]
	CAIN TT,L2NI.U
	JRST [	DPB TT,[POINT 6,DESTIN,23]
		TRO NUMREG,4000
		DPB NUMREG,[POINT 12,DESTIN,35]
		JRST CKCR1]
>;DEC
	DPB NUMREG,[POINT 6,DESTIN,35]
CKCR1:	CAIE CHRREG,12
CPOPJ2:	AOS (P)
	JRST CPOPJ1
>;WWNOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)
WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>),<
WWOR(<AUGU6,AUGcmu>),<
	OUTSTR [ASCIZ/
L#-#? /]
>;WWOR(<AUGU6,AUGcmu>)
WWOR(<AUGHEX>),<
	OUTSTR [ASCIZ/
J#-# or LL# ? /]
>;WWOR(<AUGHEX>)
WWOR(<AUGU1>),<
	OUTSTR [ASCIZ/
L-#? /]
>;WWOR(<AUGU1>)
	PUSHJ P,GTLOC2
	POPJ P,
	JRST CPOPJ1
WWNOR(<AUGHEX>),<
	CAIE CHRREG,"-"
	POPJ P,
>;WWNOR(<AUGHEX>)
WWOR(<AUGHEX>),<
	JRST [	TRNN TT,400000
		JRST [	CAIL CHRREG,"A"
			CAILE CHRREG,"Z"
			POPJ P,
			SKIPN CHRREG,L2N-"A"(CHRREG)
			POPJ P,
			LSH CHRREG,=6
			IORI TT,(CHRREG)
			JRST GTCNP2 ]
		CAIE CHRREG,"-"
		POPJ P,
		JRST GTCNP2 ]
	JRST [	HRRZM TT,DESTIN
		JRST CPOPJ2 ]
>;WWOR(<AUGHEX>)
GTCNP2:	HRRZM TT,DESTIN
	GETNUM
	CAILE T,77
	POPJ P,
	IORM T,DESTIN
	JRST CPOPJ2
>;WWOR(<AUGU1,AUGU6,AUGcmu,AUGHEX>)

>;MD
BEND LOCS
 