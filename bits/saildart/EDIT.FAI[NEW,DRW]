;<DRAW>EDIT.FAI.62, 15-NOV-75 18:04:18, EDIT BY HELLIWELL
VERSION(EDIT,6)
;ENTER EDIT MODE, SETDIP
MD,<
ENTEPN:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ A,(A)	;POINTER TO DATA BLOCK
	HRRZ A,1(A)	;POINTER TO TYPE
	JRST ALREAD	;SKIP "TYPE BODY NAME"

ENTEDC:	MOVEI T,[ASCIZ/TYPE BODY NAME
/]
	PUSHJ P,BODYGT	;GET POINTERS TO BODY STUFF
	POPJ P,		;IF ALTMODE
	POPJ P,		;NULL
	CAIA		;NEW NAME
	JRST ALREAD	;ALREADY EXISTS
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/NEW BODY.
/]
	GETFS (A)
	HRRZM B,(A)	;DEPOSIT (WITH 0 LIBRARY POINTER)
	MOVE B,BODPNT	;GET CURRENT BODY POINTER
	MOVEM B,1(A)	;DEPOSIT
	MOVEM A,BODPNT	;PUT THIS BODY IN CHAIN
	GETFS (B)
	HRLM B,1(A)	;DEPOSIT POINTER TO POINTER BLOCK
	GETFS(T)	;GET A DEF LOC OFFSET BLOCK (AND BITS)
	HRLZM T,(B)	;STORE
	SETZM 1(T)	;CLEAR LOC OFFSET
	SETZM (T)	;CLEAR BITS AND CHAR OFFSET POINTER
	SETZM 1(B)	;CLEAR REST OF POINTER BLOCK
ALREAD:	HLRZ T,(A)
	SKIPN MODLIB	;ALLOW MODIFICATION
	JUMPN T,NOEDIT	;CAN'T EDIT FROM LIBRARY
	MOVEM A,CURBOD	;SAVE POINTER TO CURRENT BODY
	MOVE T,XOFF
	MOVEM T,EDXOFF
	MOVE TT,YOFF
	MOVEM TT,EDYOFF
	MOVE T,CURSE
	MOVEM T,EDCURS
	MOVE T,NSCALE
	MOVEM T,EDSCAL
	PUSHJ P,HOME	;CENTER EVERYTHING
	MOVE T,MODE
	MOVEM T,EDMODS
	MOVEI T,MAINPG-1;CLEAR ALL THESE
	PUSHJ P,HYDPOG
	SOJG T,.-1
	TRO MCHG
	MOVEI T,EDTM	;GET NEW MODE (EDIT)
	JRST CHNGMD	;CHANGE MODE

NOEDIT:	OUTSTR[ASCIZ/I AM SORRY BUT YOU
CAN'T MODIFY LIBRARY BODIES!
/]
	POPJ P,

;CLEAR MARK BITS IN TYPE DEFINITION
CDFMRK:	SKIPN T,BODPNT
	POPJ P,
	MOVSI TT,DTMP1
CDFMK1:	HLRZ TTT,1(T)
	JUMPE TTT,CDFMK2
	HLRZ TTT,(TTT)
	ANDCAM TT,(TTT)	;CLEAR MARK BITS
CDFMK2:	HRRZ T,1(T)
	JUMPN T,CDFMK1
	POPJ P,

;STUFF EITHER BODY DEF NAME OR DIP TYPE NAME INTO MACRO
STFLNM:	TROA TFLG
STFLDP:	TRZ TFLG
	MOVE T,CURBOD
	JRST STODEF

SETDLC:	SKIPA B,[TLZE C,XDISLOC]	;INST TO CLEAR "DON'T DISPLAY" BIT
CLRDLC:	MOVE B,[TLON C,XDISLOC]	;INST TO SET		"
	MOVEI T,1
	LSH T,@MODE
	TDNN T,[ALLEDM!1EDTAM]
	JRST PERRET
	MOVE A,CURBOD
	HLRZ A,1(A)
	HLRZ A,(A)
	MOVE C,(A)		;GET BODY DEF BITS
	XCT B			;TURN BIT ON OR OFF AND TEST
	TLNN M,BLOCS		;CHANGED, ARE WE DISPLAYING A01
	CAIA			;NO
	TRO MCHG		;YES
	MOVEM C,(A)		;STORE BIT BACK
	POPJ P,
;ENTER INSERT MODE (BOTH WAYS)
EDINS2:	PUSHJ P,GETCLS
	JRST PERRET
	MOVEM A,CLSTPN
	SETZM CRPPNT		;MAKE SURE WE DON'T ADD A POINT.
	HRRZ A,(A)
	TRZ ATLP!ATFP
	MOVEI T,EDTIM
	PUSHJ P,CHNGMD
	JUMPN A,EDBS
	TRO ATLP
	JRST EDBS	;BACK UP TO THE RIGHT POINT

EDINS:	MOVEI T,EDTIM	;GET NEW MODE (EDIT INSERT)
	PUSHJ P,CHNGMD
	MOVE A,CURBOD	;GET CURRENT BODY POINTER
	HLRZ B,1(A)	;GET POINTER TO POINTER BLOCK
	ADDI B,1	;MAKE POINTER TO LINE POINTER
	MOVEM B,CLSTPN	;DEPOSIT
	HRRZ B,(B)	;GET POINTER TO FIRST LINE
	MOVEM B,CRPPNT	;DEPOSIT
	TRO ATFP!TYPNEG!MCHG	;MARK AS AT FIRST POINT, AND MAKE FIRST VECTOR INVIS.
	TRZ ATLP	;ASSUME NOT A LAST POINT YET!
	JUMPN B,EDPOS	;VIRGIN LINE LIST?
	PUSHJ P,EDROT	;YES, MAKE A FIRST POINT
	MOVEM T,1(A)
	SETZM (A)
	MOVE B,A
	HRRM B,@CLSTPN	;LINK IN
EDPOS:	SKIPN B,CRPPNT	;GET POINTER TO CURRENT POINT
	POPJ P,		;NONE
	PUSHJ P,CLEAR1	;CLEAR THESE UNTIL DISP!
	PUSHJ P,CLEAR2
	MOVE T,1(B)	;GET X,Y
	TRZE T,1
	TRO TYPNEG
	JRST SETPOS	;CENTER CURSOR THERE

EDROT:	MOVE T,CURSE	;GET CURRENT CURSOR POSITION
	TRZE TYPNEG	; - LAST?
	TRO T,1		;YES
	GETFS (A)
	POPJ P,
EDROT1:	TRZE ATFP	;TURN OFF AT-FIRST-POINT. ARE WE?
	TRO T,1		;YES, MAKE INVISIBLE
	TRO MCHG
	MOVEM T,1(A)	;DEPOSIT X,Y
	MOVE B,CLSTPN	;GET POINTER TO CURRENT "LAST" (PRECEDING) POINT
	HRRZ T,(B)	;GET LINK TO NEXT
	MOVEM T,(A)	;DEPOSIT HERE
	HRRM A,(B)	;LINK LAST ONE TO THIS ONE
	MOVEM A,CLSTPN	;MAKE THIS THE "LAST" ONE
	MOVEM T,CRPPNT	;MAKE NEXT ONE CURRENT
	MOVE A,1(T)
	TRZ A,1
	TRNE TYPNEG	;SHOULD THIS ONE BE NEGATIVE?
	TRO A,1
	MOVEM A,1(T)
	POPJ P,
;INSERT MODE, PLUS, MINUS, SPACE, BS
EDPLUS:	PUSHJ P,EDROT
	JRST EDROT1

EDMINS:	PUSHJ P,EDROT
	TRO TYPNEG	;MAKE NEXT ONE AN INVISIBLE VECTOR
	JRST EDROT1

EDSPC:	TRNN ATLP	;AT LAST POINT?
	SKIPN B,CRPPNT	;GET POINTER TO CURRENT POINT
	POPJ P,		;NONE
	TRO MCHG
	TRZ ATFP!TYPNEG
	MOVEI T,1
	AND T,1(B)	;GET VISIBLE/INVISIBLE BIT
	IOR T,CURSE	;PUT IN CURRENT POSITION
	MOVEM T,1(B)	;DEPOSIT
	HRRZ D,(B)	;GET POINTER TO NEXT POINT
	HRRZM B,CLSTPN	;MAKE THIS POINT THE "LAST" POINT
	MOVEM D,CRPPNT	;MAKE NEXT POINT THE CURRENT POINT
	HRRZ D,(D)
	JUMPN D,EDPOS
	TRO ATLP	;AT LAST POINT NOW
	JRST EDPOS	;POSITION CURSOR

EDBS:	TRNE ATFP	;AT FIRST POINT?
	POPJ P,		;YES, DO NOTHING
	TRO MCHG
	TRZ ATLP!TYPNEG	;NO LONGER AT LAST POINT.
	MOVE A,CURBOD	;NO, GET POINTER TO BODY
	HLRZ B,1(A)	;GET POINTER TO POINTER BLOCK
	ADDI B,1	;POINT TO POINT POINTER
	MOVE C,B	;SAVE IT
	MOVE D,B	;SAVE CURRENT ONE
	HRRZ B,(B)	;GET NEXT ONE
	CAME B,CLSTPN	;ARE WE THERE?
	JRST .-3	;NO, LOOP
	CAMN C,D	;NOW AT FIRST?
	TRO ATFP!TYPNEG	;YES, SET BIT
	EXCH D,CLSTPN	;MAKE NEW ONE "LAST" ONE
	EXCH D,CRPPNT	;MAKE "LAST" ONE CURRENT ONE
	JUMPE D,EDBSOU	;IF FORMER CURRENT ONE DIDN'T EXIST, LEAVE
	MOVEI T,1
	AND T,1(D)	;GET VISIBLE/INVISIBLE BIT
	IOR T,CURSE	;GET CURRENT POSITION
	MOVEM T,1(D)	;DEPOSIT IN OLD POINT
EDBSOU:	HRRZ D,CRPPNT
	HRRZ D,(D)
	JUMPN D,EDPOS
	TRO ATLP
	JRST EDPOS	;POSITION CURSOR
;D, R+, R-
EDDELE:	PUSHJ P,GETCLS
	JRST PERRET
	MOVE B,CURBOD
	HLRZ B,1(B)
	ADDI B,1
	MOVE C,B
	HRRZ B,(B)
	CAME B,A
	JRST .-3
	HRRZ B,(A)
	HRRM B,(C)
	FSTRET (A)
	TRO MCHG!NEEDCL
	MOVE B,CURBOD
	HLRZ B,1(B)
	HRRZ B,1(B)
	JUMPE B,CPOPJ		;IF NO POINTS LEFT AT ALL, LEAVE
	MOVEI T,1
	IORM T,1(B)	;MAKE SURE FIRST POINT IS STILL INVIS
	POPJ P,

EDDEL:	SKIPN B,CRPPNT	;GET POINTER TO CURRENT POINT
	POPJ P,		;NONE
	MOVE A,CLSTPN	;GET POINTER TO PRECEDING POINT
	HRRZ D,(B)	;GET POINTER TO NEXT POINT
	HRRM D,(A)	;REMOVE CURRENT POINT FROM CONSIDERATION
	MOVEM D,CRPPNT	;....
	FSTRET (B)
	TRO MCHG
	JUMPE D,EDBS	;IF AT END, BACK UP
	MOVEI T,1
	TRNE ATFP	;AT FIRST POINT?
	IORM T,1(D)	;YES, MAKE IT INVIS
	JRST EDPOS

EDCHNE:	PUSHJ P,GETCLS
	JRST PERRET
	MOVE B,A
	JRST EDCHN1

EDCHNG:	HRRZ B,CRPPNT	;GET POINTER TO CURRENT POINT
	JUMPE B,PERRET	;NONE?
EDCHN1:	PUSHJ P,GETCHR	;GET CHAR
	HRRZ D,(B)	;GET POINTER TO NEXT POINT
	JUMPE D,CPOPJ 	;NONE?
	MOVE T,1(D)	;GET X,Y
	CAIN C,"+"	;WAS + TYPED?
	JRST ITPLS	;YES
	CAIE C,"-"	;WAS - TYPED?
	JRST PERRET	;NO, ERROR
ITMNS:	TROA T,1	;MAKE INVISBLE
ITPLS:	TRZ T,1		;MAKE VISIBLE
	MOVEM T,1(D)	;DEPOSIT
	TRO MCHG
	POPJ P,
;P, N, EXIT EDIT MODE
EDPENT:	MOVEI T,EDTPM
	JRST CHNGMD

PNUMS:	PUSHJ P,GETCLS	;CURRENT PIN
	JRST PERRET
	HLRZ A,(A)
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/NEW PIN NAME?/]
	HLRZ T,(A)
	ANDI T,BASSLH
	PUSHJ P,PSET
	JRST INNERR
	HRRM T,1(A)
	MOVE T,(A)
	TLZ T,BASSLH
	TLO T,(TT)
	MOVEM T,(A)
	TLNE M,PINIDS
	TRO MCHG
	POPJ P,

SETORI:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ A,(A)
STORI1:	TLNE M,DSKACT!MACACT
	JRST STORI2
	OUTSTR[ASCIZ/CURRENT PIN POSITION IS /]
	LDB T,[POINT POSW,1(A),POSB]
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/
NEW PIN POSITION # (0-7)?/]
STORI2:	PUSHJ P,READN
	CAIE C,12		;END WITH CR?
	JRST [	CAIE C,"?"
		JRST INNERR
		PUSHJ P,GETLIN
		CAIE C,12
		JRST INNERR
		TLNN M,DSKACT!MACACT
		OUTSTR[ASCIZ/
0	UP AND RIGHT		1	UP
2	UP AND LEFT		3	LEFT
4	DOWN AND LEFT		5	DOWN
6	DOWN AND RIGHT		7	RIGHT
/]
		JRST STORI1]
	CAILE T,(1POSW)-1		;LEGAL?
	JRST INNERR
	HRRZS 1(A)		;CLEAR X,Y OFFSETS
	DPB T,[POINT POSW,1(A),POSB]	;STORE HERE
	TRO MCHG
	POPJ P,

XYPOFF:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ A,(A)
	TLNE M,DSKACT!MACACT
	JRST XYPOF1
	OUTSTR[ASCIZ/CURRENT X,Y PIN OFFSET IS /]
	LDB T,[POINT XOFFW,1(A),XOFFB]
	TRNE T,1(XOFFW-1)
	ORCMI T,(1XOFFW)-1
	PUSHJ P,DECOUT
	OUTCHR[","]
	LDB T,[POINT YOFFW,1(A),YOFFB]
	TRNE T,1(YOFFW-1)
	ORCMI T,(1YOFFW)-1
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/
NEW X,Y PIN OFFSET?/]
XYPOF1:	PUSHJ P,SREADN
	CAIGE T,1(YOFFW-1)
	CAMGE T,[-<1(YOFFW-1)>]
	JRST INNERR
	HRLM T,(P)		;SAVE X
	SETZ T,
	CAIN C,","
	PUSHJ P,SREADN
	CAIGE T,1(YOFFW-1)
	CAMGE T,[-<1(YOFFW-1)>]
	JRST INNERR
	CAIE C,12
	JRST INNERR		;LOSE
	DPB T,[POINT YOFFW,1(A),YOFFB]
	HLRE T,(P)
	DPB T,[POINT XOFFW,1(A),XOFFB]
	TLNE M,PINIDS		;IF SHOWING DEFAULT PINS
	TRO MCHG		;THEN REDRAW SCREEN
	POPJ P,

STOBPN:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ T,(A)
	PUSHJ P,SETTT
	PUSH P,A
	PUSHJ P,OUTPID
	POP P,A
	JRST ITSTUF

EDALT:	TRO MCHG
	MOVEI T,EDTM
	JRST CHNGMD

EDITE:	MOVE A,CURBOD
	HLRZ A,1(A)
	JRST EDITE4

EDITE5:	PUSH P,A
	PUSHJ P,PSPRED
	POP P,A
EDITE4:	HRRZ A,(A)
	JUMPN A,EDITE5
	MOVE T,EDMODS		;GET OLD MODE BACK
	PUSHJ P,CHNGMD		;CHANGE NOW IN CASE IN EDIT INSERT MODE
	MOVE T,EDXOFF
	MOVEM T,XOFF
	MOVE T,EDYOFF
	MOVEM T,YOFF
	MOVE T,EDSCALE
	MOVEM T,NSCALE
	TRO MCHG
	MOVE T,EDCURS	;BACK TO WHERE EVER
	JRST CHANGE

EDITP:	TLNN M,DSKACT!MACACT
	OUTSTR [ASCIZ /PIN NAME?/]
	SETZ T,
	PUSHJ P,PSET
	JRST INNERR
	TRO MCHG!NEEDCL
	PUSH P,TT
	PUSHJ P,PUTPIN	;MAKE PIN EVERYWHERE
	POP P,TT
	HLRZ T,(C)
	HLL T,(T)
	TLO T,(TT)
	HLLM T,(T)
	MOVE G,C
	JRST FIXPUT	;CALC INITIAL PIN OFFSET

PSET:	HRLM T,(P)
	MOVE T,[PUSHJ P,GETLCH]
	MOVEM T,GTCHRX
	PUSHJ P,RPNAM		;GET PIN NAME INTO T
	POPJ P,
	JUMPE T,CPOPJ		;DEFAULT PIN = 0 IS ILLEGAL
	HLRZ TT,(P)
DEC,<	CAIE C,"-"		;ASSERTION AFTER PIN NAME?
	JRST NOASS
	TRZ TT,ASSL!ASSH
	PUSHJ P,GETLIN
	CAIE C,"H"+40
	CAIN C,"H"
	JRST [	TRO TT,ASSH
		JRST NOASS1]
	CAIE C,"L"
	CAIN C,"L"+40
	CAIA
	JRST NOASS
	TRO TT,ASSL
NOASS1:	PUSHJ P,GETLIN
NOASS:
>;DEC
	CAIE C,"/"
	JRST NOBUSS
	TRZ TT,BUSSED
	PUSHJ P,GETLIN
	CAIE C,"B"
	CAIN C,"B"+40
	CAIA
	JRST NOBUSS
	TRO TT,BUSSED
	PUSHJ P,GETLIN
NOBUSS:	CAIN C,12
	AOS (P)
	POPJ P,
;SPREAD PIN #'S OVER SAME PIN ID'S
PSPRED:	HLRZ A,(A)
	HRRZ A,1(A)
	PUSH P,A		;SAVE PIN NAME
	MOVEI B,DBODPN
PSPRD1:	MOVE A,CURBOD
	PUSHJ P,BODFNN
	JRST PSPRD2
	POP P,(P)
	POPJ P,

PSPRD2:	HLRZ A,(B)
	HRRZ A,(A)
	SETZ F,
PSPRD3:	HLRZ A,(A)
	HRRZ TTT,1(A)
	HRRZ T,(TTT)
	HLRZ T,(T)
	HRRZ TT,1(T)
	CAME TT,(P)		;SAME PIN NAME?
	JRST PSPRD4
	MOVE F,TTT		;SAVE THIS ONE
	MOVE TT,(T)
	TLNN TT,BUSSED		;IS IT BUSSED?
	JRST PSPRD5
PSPRD4:	HRRZ A,(A)
	JUMPN A,PSPRD3
	JUMPE F,PSPRD1
PSPRD5:	HRRZ F,1(F)		;GET PIN NAME TO SET
	HLRZ A,(B)
	HRRZ A,(A)
PSPRD6:	HLRZ A,(A)
	HRRZ TTT,1(A)
	HRRZ T,(TTT)
	HLRZ T,(T)
	HRRZ T,1(T)
	CAMN T,(P)
	HRRM F,1(TTT)
	HRRZ A,(A)
	JUMPN A,PSPRD6
	JRST PSPRD1
;PLACE A PIN SUBR, UPDATE LOC OFFSET IN BODIES
PUTPIN:	MOVE A,CURBOD	;GET POINTER TO CURRENT BODY
	GETFS (B)	;A NEW NUMBER, GET FREE STORAGE
	PUSH P,B
	HLRZ C,1(A)	;DATA BLOCK POINTER
	HRRZ D,(C)	;GET PIN POINTER
	MOVEM D,(B)	;LINK IN NEW THING
	HRRM B,(C)
	GETFS(C)
	HRLM C,(B)
	HRRZM T,1(C)
	MOVEI TT,1	;START AT 1
	MOVEI C,1	;FOR LARGEST ALSO
PTPIN1:	HRRZ T,(B)
	JUMPE T,PTPIN3
PTPIN2:	HLRZ TTT,(T)
	HRRZ TTT,(TTT)
	CAMLE TTT,C
	ADDI C,1
	CAMN TTT,TT
	AOJA TT,PTPIN1
	HRRZ T,(T)
	JUMPN T,PTPIN2
PTPIN3:	CAILE C,777777		;CAN WE ASSIGN A NEW LARGER PIN ID?
	MOVE TT,C		;YES
	HLRZ C,(B)
	HRRZM TT,(C)
	MOVE T,CURSE	;GET CURRENT POSITION
	MOVEM T,1(B)	;DEPOSIT AS POSITION OF PIN
	MOVE C,B	;HOLD POINTER TO PIN ENTRY IN TYPE
	MOVE B,DBODPN	;GET POINTER TO BODIES
BFRT:	PUSHJ P,BODFN	;FIND INSTANCES OF THIS TYPE
	JRST BFNDD	;FOUND ONE
	POP P,A		;RETURN POINTER TO TYPE BLOCK IN A
	POPJ P,		;NONE LEFT

BFNDD:	PUSH P,A	;SAVE A
	MOVE A,C	;GET POINTER TO PIN ENTRY IN TYPE
	PUSH P,(B)	;SAVE POINTER TO NEXT
	HRLI B,ISPIN	;PUT BITS IN WITH BODY POINTER
	HLRZ T,(B)
	HLRZ F,(T)	;ORIENTATION
	MOVE T,1(C)	;GET PIN X,Y
	PUSHJ P,ORIENT	;ROTATE IT
	ADJUST(ADD,T,<1(B)>)	;ADD BODY CENTER
	PUSH P,T
	PUSHJ P,PUTPNT	;CREATE THE POINT
	POP P,1(D)	;SET X,Y
	HLRZ B,(B)	;GET POINTER TO BODY DATA BLOCK
	HRRZ E,(B)	;GET PIN LINK
	HRRM E,(TTT)	;DEPOSIT IN APPROPRIATE PLACE IN POINT ENTRY
	HRRM D,(B)	;LINK NEW ONE INTO BODY
	POP P,B		;GET POINTER TO NEXT
	HRRZS B
	HLRZ TT,(A)
	HRRZ TT,1(TT)
	POP P,A
BFNDD1:	JUMPE E,BFRT
	HLRZ E,(E)
	HRRZ TTT,1(E)
	HRRZ E,(E)
	HRRZ D,(TTT)
	HLRZ D,(D)
	HRRZ D,1(D)
	CAME D,TT
	JRST BFNDD1
	HRRZ D,1(TTT)
	HRRM D,1(T)
	JRST BFRT

BODFNA:	HLRZ T,(B)	;GET POINTER TO DATA BLOCK
	HRRZ T,1(T)	;GET TYPE POINTER
	CAMN T,A	;BODY OF THIS TYPE?
	POPJ P,		;YES, RETURN IT
BODFNN:	HRRZ B,(B)	;GET NEXT
BODFN:	JUMPN B,BODFNA
	AOS (P)
	POPJ P,

UPLOFF:	MOVE A,CURBOD
	HLRZ C,1(A)
	HLRZ C,(C)
	MOVEI B,DBODPN
UPLOF2:	PUSHJ P,BODFNN
	JRST UPLOF1
	POPJ P,

UPLOF1:	HLRZ D,(B)
	HLRZ F,(D)
	HLRZ D,1(D)
	MOVE T,1(D)
	TLNN T,FIXLOC!FIXBLO	;DOES IT WANT TO BE FIXED?
	JRST UPLOF2
	HRRZ TTT,(D)
	JUMPE TTT,UPLOF2		;JUST IN CASE
	TLNN T,FIXLOC		;FIXING LOC?
	JRST UPLOF3
	MOVE T,1(C)
	PUSHJ P,ORIENT
	MOVEM T,1(TTT)
UPLOF3:	MOVE T,B
	PUSH P,A
	PUSH P,B
	PUSHJ P,OFFBLO
	POP P,B
	POP P,A
	JRST UPLOF2

ELCCLR:	TRZ INMOV
	MOVE A,CURBOD
	HLRZ A,1(A)
	HLRZ A,(A)
	HRRZ B,(A)
	JUMPE B,CPOPJ
	HLLZS (A)
	FSTRET(B)
	TLNE M,BLOCS
	TRO MCHG
	POPJ P,
;DELETE PIN
EDPDEL:	PUSHJ P,GETCLS	;GET POINTER TO CLOSEST PIN
	JRST PERRET
	MOVE C,A
	MOVE A,CURBOD	;GET POINTER TO CURRENT TYPE
	HLRZ D,1(A)	;GET POINTER TO DATA BLOCK
			;LET DATA BLOCK POINTER LOSE FIRST TIME
EDPDL2:	CAMN D,C	;IS THIS THE ONE THAT POINTS TO THE CLOSEST ONE?
	JRST EDPDL1	;YES
	MOVE B,D	;NO, TRY ANOTHER
	HRRZ D,(B)
	JUMPN D,EDPDL2
	PUSHJ P,FUCKUP
EDPDL1:	HRRZ D,(C)	;GET POINTER TO ONE BEYOND CLOSEST
	HRRM D,(B)	;LINK AROUND CLOSEST ONE
	MOVEI B,PONPNT	;GET ON-SCREEN POINTER
	PUSHJ P,TPINFN	;FIND INSTANCES OF THIS PIN IN THE WORLD AND REMOVE THEM
	HLRZ B,(C)
	FSTRET (B)
	FSTRET (C)	;RETURN THING TO FREE STORAGE
	TRO MCHG!NEEDCL
	POPJ P,

TPNFN1:	HLRZ D,(B)	;DATA BLOCK POINTER
	HRRZ E,1(D)	;GET POINTER TO TEXT, PIN AND BODY BLOCK
	HRRZ F,(E)	;GET POINTER TO BODY PIN BLOCK!
	CAME F,C	;SAME AS PIN WE ARE DELETING?
	JRST TPINFN	;NO, TRY ANOTHER
	PUSH P,C	;SAVE OLD PIN BLOCK POINTER
	HLRZ C,(D)	;GET BODY POINTER FROM PIN WE WANT TO DELETE
			;AND TREAT AS FIRST POINT (WILL LOSE FIRST TIME)
GOPN:	CAME C,B	;IS THIS THE POINT IN QUESTION
	JRST GOPN1	;NO
	HLRZ D,(C)	;YES, LINK IT OUT OF BODY LIST
	HRRZ D,(D)
	HRRM D,(E)
	TRO TFLG	;DELETE PINS OK!
	PUSH P,A
	PUSHJ P,DELPNT
	POP P,B		;RESTORE LAST AS CURRENT
	JRST NTPNFN

GOPN1:	HLRZ E,(C)
	HRRZ C,(E)
	JUMPN C,GOPN
	PUSHJ P,FUCKUP
NTPNFN:	POP P,C		;RESTORE OLD PIN TYPE BLOCK POINTER
TPINFN:	MOVE A,B	;SAVE LAST
	HRRZ B,(B)
	JUMPN B,TPNFN1
	POPJ P,
;GET -- G, SPACE
BODGET:	MOVEI T,[ASCIZ/TYPE BODY NAME
/]
	PUSHJ P,BODYGT	;GET BODY NAME & POINTER
	POPJ P,		;ALTMODE
	POPJ P,		;NULL NAME
	JRST OOPS1
	CAMN A,CURBOD
	JRST [	OUTSTR[ASCIZ/SORRY YOU CAN'T "GET" THE CURRENT BODY!!!
/]
		POPJ P,]
	MOVEM A,GETBOD	;CURRENT BODY WE ARE GETTING
	SETZM GETORT	;START WITH STANDARD ORIENTATION
	TRO MCHG
	MOVEI T,EDTGM	;SET MODE
	JRST CHNGMD

GETSPC:	AOS T,GETORT
	ANDI T,7
	MOVEM T,GETORT
	TRO MCHG
	POPJ P,
;GET -- Y
GETYES:	PUSH P,CURSE
	TRO MCHG
	MOVE G,GETBOD	;NEW BODY
	MOVE A,CURBOD		;CHECK FOR EMPTY BODY AND COPY NEW LOC
	HLRZ A,1(A)
	SKIPE 1(A)
	JRST GETY1		;IF LINES OR TEXT, NO COPY
	HRRZ T,(A)
	JUMPN T,GETY1		;IF PINS, NO COPY
	HLRZ A,(A)
	SKIPE 1(A)
	JRST GETY1		;IF LOC OFFSET, NO COPY
	HRRZ T,(A)
	JUMPN T,GETY1		;IF LOC CHAR OFFSET, NO COPY
	HLRZ T,1(G)
	HLRZ T,(T)
	MOVE TTT,1(T)
	ADJUST(ADD,TTT,<(P)>)	;ADD CURSOR POS
	MOVEM TTT,1(A)		;COPY LOC OFFSET
	HRRZ TT,(T)
	JUMPE TT,GETY1		;ANY CHAR OFFSET TO COPY?
	MOVE TTT,1(TT)		;YES, GET IT
	GETFS(TT)		;NEW BLOCK FOR OUR BODY
	MOVEM TTT,1(TT)		;STORE OFFSET
	HRRM TT,(A)		;LINK IN BLOCK
	SETZM (TT)		;CLEAR UNUSED WORD
GETY1:	HLRZ G,1(G)	;DATA BLOCK LINK
	HRRZ G,(G)	;POINTER TO PINS
	JUMPE G,GNOPINS	;NONE
NEWPINS:MOVE T,1(G)	;LOC OF PIN
	MOVE F,GETORT
	PUSHJ P,ORIENT	;ORIENT IT
	ADJUST(ADD,T,<(P)>)	;ADD OFFSET
	MOVEM T,CURSE		;PUTPIN WILL LOOK HERE
	HLRZ T,(G)
	HRRZ T,1(T)		;COPY DEFAULT PIN NUMBER
	PUSHJ P,PUTPIN		;MAKE A PIN
	HLRZ T,(G)
	HLRZ T,1(T)
	MOVE TTT,F
	PUSHJ P,PINORI		;ROTATE PIN POS
	HLRZ TT,(C)
	HRLM T,1(TT)		;COPY PIN POS
	HLRZ T,(G)
	HLRZ T,(T)
	HRLM T,(TT)		;COPY BITS ALSO
	HRRZ G,(G)		;NEXT PIN
	JUMPN G,NEWPINS		;ANOTHER?
GNOPINS:MOVE A,CURBOD		;CURRENT BODY
	HLRZ A,1(A)		;LINK TO DATA BLOCK
	MOVEI A,1(A)		;POINT TO LINK FIELD
LOOPLN:	HRRZ B,(A)		;NEXT LINE IN CHAIN
	JUMPE B,LOOPL1
	MOVE A,B
	JRST LOOPLN		;FOLLOW CHAIN
LOOPL1:	MOVE G,GETBOD		;NEW BODY
	HLRZ G,1(G)		;LINK TO DATA BLOCK
	HRRZ G,1(G)		;
	JRST NXTLIN		;JUMP INTO LOOP
GMAKLN:	GETFS(TT)		;GET FREE STORAGE BLOCK FOR NEW LINE
	HRRM TT,(A)		;LINK ONTO LIST
	MOVE A,TT		;NEW END
	MOVE T,1(G)		;NEW LINE END
	LDB TT,[POINT 1,T,35]	;SAVE VIS OR INVIS
	TRZ T,1
	MOVE F,GETORT
	PUSHJ P,ORIENT		;ORIENT IT
	ADJUST(ADD,T,<(P)>)	;OFFSET IT
	DPB TT,[POINT 1,T,35]	;PUT BACK VIS OR INVIS
	MOVEM T,1(A)		;TO MEMORY
	HRRZ G,(G)		;NEXT NEW LINE
NXTLIN:	JUMPN G,GMAKLN		;DO ANOTHER?
	HLLZS (A)		;CLEAR LINK
	MOVE A,CURBOD		;CURRENT BODY
	HLRZ A,1(A)		;LINK TO ....
	HLRZ C,1(A)		;SAVE THESE 2 POINTERS.
	MOVE G,GETBOD		;NEW BODY
	HLRZ G,1(G)		;LINK TO ....
	HLRZ G,1(G)		;LINE TO BODY TEXT
	JUMPE G,GETDON		;IS THAT ALL?
GBTEXT:	HLRZ T,(G)
	HLRZ T,(T)
	JUMPE T,NPROP2		;ALWAYS COPY IF JUST TEXT
	MOVE TTT,CURBOD
	HLRZ TTT,1(TTT)
	HLRZ TTT,1(TTT)
	JUMPE TTT,NPROP2	;COPY IF NO PROPERTIES YET
	PUSHJ P,FPROPX
	JRST NPROP2		;DOESN'T EXIST, COPY
	JRST NPROP1		;EXISTS, DON'T COPY

NPROP2:	GETFS(D)		;GET A BLOCK FOR MAGIC WORDS
	MOVE T,1(G)		;X,Y
	MOVE F,GETORT
	PUSHJ P,ORIENT		;ORIENT IT
	ADJUST(ADD,T,<(P)>)	;OFFSET IT
	MOVEM T,1(D)		;SAVE IT
	HRLM D,1(A)		;LINK IT IN
	MOVEM C,(D)		;AND THE REST OF THE LIST TO IT.
	MOVE C,D		;THIS IS NOW THE REST OF THE LIST
	HLRZ T,(G)		;POINTER TO TEXT (IN STANDARD FORMAT)
	PUSHJ P,STRCOP		;COPY TEXT
	HRLM B,(C)		;LINK IN TEXT
	HLRZ T,(G)
	HLRZ T,(T)
	JUMPE T,NPROP1
	PUSHJ P,LSTCOP
	HLRZ T,(C)
	HRLM B,(T)
NPROP1:	HRRZ G,(G)		;NEXT NEW BTEXT
	JUMPN G,GBTEXT
GETDON:	POP P,CURSE	;RESTORE CURSOR POS
GETALT:	TRO MCHG
	MOVEI T,EDTM	;BACK TO EDIT MODE
	JRST CHNGMD
;CALC PIN LOC'S AND THUS OFFSET #'S
;FIX ALL BODIES
FIXALL:	SKIPN H,BODPNT
	POPJ P,
FIXAL1:	HLRZ T,(H)		;LIBRARY POINTER
	SKIPN MODLIB		;ALLOW MODIFICATION?
	SKIPN T			;SKIP THESE, CAN'T FIX THEM
	PUSHJ P,FIXSOM
	HRRZ H,1(H)
	JUMPN H,FIXAL1
	POPJ P,

;FIX ALL PIN #'S OF THIS BODY
PALL:	MOVE H,CURBOD
;CALL WITH BODY DEF POINTER IN H
FIXSOM:	HLRZ G,1(H)
	JUMPE G,CPOPJ		;QUIT IF BODY NOT IN YET!!!
	HRRZ G,(G)
	JUMPE G,CPOPJ
	PUSHJ P,CALSET
FIXSM1:	PUSHJ P,CALFIX
	HRRZ G,(G)
	JUMPN G,FIXSM1
	POPJ P,

;FIX PIN # OFFSET FOR CLOSEST PIN
FIXONE:	PUSHJ P,GETCLS
	JRST PERRET
	MOVE G,A
FIXPUT:	MOVE H,CURBOD
	PUSHJ P,CALSET		;SET UP PIN CENTERS
;FALL INTO CALFIX
;CALL WITH BODY DEF POINTER IN H, AND PIN POINTER IN G
CALFIX:
DEC,<	HLRZ F,(G)
	HLRZ F,1(F)
	ANDI F,7
	SKIPE OUTSIDE
	ADDI F,5
>;DEC
	PUSHJ P,CALP		;FIND HIS NUMBER
NODEC,<	POPJ P,		>	;NO CAN DO
DEC,<	JFCL	>		;TRY HARDER
	SKIPE OUTSIDE		;PUTTING OUTSIDE?
	SUBI F,5		;YES, USE THIS NUMBER
DEC,<	CAMN F,[-2]
	SETZ F,
>;DEC
	ANDI F,7
	HLRZ T,(G)
	HRRZS 1(T)		;CLEAR X,Y OFFSET FIRST
	DPB F,[POINT POSW,1(T),POSB]
	TRO MCHG
	POPJ P,

;CALL WITH BODY DEF POINTER IN H, AND PIN POINTER IN G
;DX1 - AVERAGE OF ALL PIN X'S
;DY1 - 		"	  Y'S
CALP:	HLRZ T,(G)
	HLRZ T,(T)
	TRNE T,BUSSED			;IF BUSSED THROUGH, SAY CAN'T DO
	POPJ P,
	HLRZ A,1(H)
	MOVE E,1(G)
	HRRZ B,1(A)
	JUMPN B,CALP1
	POPJ P,

CALP2:	MOVE T,1(B)
	TRNE T,1		;INVIS?
	JRST CALP1		;YES, TRY ANOTHER
	XOR T,1(A)
	TLNE T,-2		;VERT?
	JRST NVERT		;YES
	TRNN T,-2		;ZERO LENGTH SEG?
	JRST CALP1		;YES, IGNORE IT
	MOVE T,E
	XOR T,1(A)
	TLNE T,-2		;PIN ON SAME LINE?
	JRST CALP1		;NO
	HLRE T,E		;GET PIN X
	CAMLE T,DX1		;COMPARE WITH CENTER OF ALL PINS
	SKIPA F,[3]		;RIGHT
	MOVEI F,7		;LEFT
	HRRE T,1(A)
	HRRE TT,E
	HRRE TTT,1(B)
	JRST DELCAL

NVERT:	TRNE T,-2		;HORZ?
	JRST CALP1		;NO
	MOVE T,E		;YES
	XOR T,1(A)
	TRNE T,-2		;PIN ON SAME LINE?
	JRST CALP1		;NO
	HRRE T,E
	CAMLE T,DY1
	SKIPA F,[5]		;UP
	MOVEI F,1		;DOWN
	HLRE T,1(A)
	HLRE TT,E
	HLRE TTT,1(B)
DELCAL:	SUB T,TTT
	SUB TT,TTT
	JUMPG TT,NNEG
	JUMPGE T,CALP1		;OFF END?
	CAML T,TT
	JRST CALP1
	JRST CPOPJ1

NNEG:	JUMPLE T,CALP1
	CAMLE T,TT
	JRST CPOPJ1
CALP1:	MOVE A,B
	HRRZ B,(A)
	JUMPN B,CALP2
	POPJ P,		;LOSE RETURN

;CALL WITH BODY DEF POINTER IN H
;RETURNS WITH:
;DX1 - (MAX+MIN)/2 OF ALL PIN X'S
;DY1 - 		"	      Y'S
CALSET:	HRLOI T,377777
	MOVEM T,DX3
	MOVEM T,DY3
	MOVSI T,400000
	MOVEM T,DX1
	MOVEM T,DY1
	HLRZ T,1(H)		;FIRST CHECK EXISTING PINS
	PUSHJ P,CALST1
	HLRZ T,1(H)
	ADDI T,1		;NOW CHECK LINES
	PUSHJ P,CALST1
	MOVE T,DX1
	ADD T,DX3
	ASH T,-1
	MOVEM T,DX1
	MOVE T,DY1
	ADD T,DY3
	ASH T,-1
	MOVEM T,DY1
	POPJ P,

CALST2:	MOVE TTT,1(T)
	HLRE TT,TTT
	CAMGE TT,DX3
	MOVEM TT,DX3
	CAMLE TT,DX1
	MOVEM TT,DX1
	HRRE TT,TTT
	CAMGE TT,DY3
	MOVEM TT,DY3
	CAMLE TT,DY1
	MOVEM TT,DY1
CALST1:	HRRZ T,(T)
	JUMPN T,CALST2
	POPJ P,
;DELETE TYPE
TYPDEL:	MOVEI T,1
	LSH T,@MODE
	TDNE T,[ALLEDM!1EDTAM]	;ANY EDIT MODE?
	JRST PERRET		;YES, ILLEGAL
	MOVEI T,[ASCIZ/TYPE BODY NAME
/]
	PUSHJ P,BODYGT
	POPJ P,		;ALTMODE
	POPJ P,		;NULL
	JRST OOPS1	;NO SUCH BODY
	TLZ WFLAG	;DON'T QUIT IF YOU FIND ONE
TYPFLU:	PUSH P,A	;SAVE TYPE POINTER
	MOVEI A,DBODPN
	JRST TYPDL1
TYPDL2:	HLRZ T,(A)
	HRRZ T,1(T)
	CAME T,(P)
	JRST TYPDL1
	TLNE WFLAG
	JRST [	POP P,A
		POPJ P,];QUIT IF WFLAG SET (WE WANT IT!)
	PUSH P,B
	PUSHJ P,BCLEAR	;DELETE BODY
	POP P,A		;RESTORE LAST AS CURRENT
TYPDL1:	MOVE B,A
	HRRZ A,(A)
	JUMPN A,TYPDL2
	SKIPE MODLIB
	JRST TCLEAR
	HLRZ T,@(P)
	JUMPE T,TCLEAR
	OUTSTR[ASCIZ/ALL INSTANCES OF THIS BODY HAVE BEEN
DELETED, BUT THE TYPE MUST REMAIN
AS IT IS PART OF A LIBRARY!
/]
	POP P,A
	POPJ P,

TCLEAR:	MOVEI A,BODPNT-1
	JRST TYPDL6
TYPDL4:	CAMN A,(P)
	JRST TYPDL5
TYPDL6:	MOVE B,A
	HRRZ A,1(A)
	JUMPN A,TYPDL4
	POP P,A
	PUSHJ P,FUCKUP
	POPJ P,		;SHOULDN'T HAPPEN.
TYPDL5:	HRRZ C,1(A)
	HRRM C,1(B)	;LINK HIM OUT
	POP P,A		;GET BACK POINTER
	JRST TYPREL	;RELEASE STORAGE
;DELETE LIBRARY
DELLBS:	TLOA WFLAG		;SAVE USED ONES
DELLIB:	TLZ WFLAG		;DON'T SAVE THEM
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/LIBRARY /]
	MOVSI T,EXTLIB
	PUSHJ P,SETNAM
	POPJ P,			;IF HE HOLLER, LET HIM GO!
	ENTPPN
	MOVEI TT,LIBLST
	MOVE A,FILNAM
	HLLZ B,FILEXT
	MOVE C,FILPPN
	JRST LIBLP1
LIBLP2:	CAME A,1(TT)
	JRST LIBLP1
	HLRZ TTT,(TT)
	CAME C,1(TTT)
	JRST LIBLP1
	HLLZ TTT,(TTT)
	CAMN TTT,B
	JRST FNDLIB
LIBLP1:	MOVE T,TT
	HRRZ TT,(TT)
	JUMPN TT,LIBLP2
	OUTSTR[ASCIZ/SORRY, NO SUCH LIBRARY!
/]
	POPJ P,

FNDLIB: HRRZ TTT,(TT)
	HRRM TTT,(T)		;LINK THIS LIBRARY OUT
	PUSH P,TT		;SAVE POINTER
	SKIPN A,BODPNT
	JRST FNDLBE
FNDLB1:	HRRZ B,1(A)		;GET LINK AHEAD
	HLRZ T,(A)		;GET LIBRARY POINTER
	CAME T,(P)		;THIS ONE
	JRST FNDLB2		;NO
	PUSH P,B
	HRRZS (A)		;CLEAR POINTER SO WE CAN DELETE
	PUSHJ P,TYPFLU		;DELETE THIS TYPE
	POP P,B
FNDLB2:	MOVE A,B		;NEXT
	JUMPN A,FNDLB1
FNDLBE:	POP P,A
	HLRZ B,(A)
	FSTRET(A)
	FSTRET(B)
	POPJ P,
;RSPINI	RESET PINIDS CANONICALLY FROM DEFAULT PIN NAMES

RSPINI:	MOVE T,MODE
	CAIE T,EDTM		;MUST BE IN NORMAL EDIT MODE
	JRST ERRET
	MOVE A,DBODPN
	HRRZ C,CURBOD		;POINTER TO BODY DEFINITION
RSPIN2:	HLRZ B,(A)
	HRRZ B,1(B)
	CAIN B,(C)
	JRST RSPIN1		;TYPE IS IN USE
	HRRZ A,(A)		;NEXT BODY
	JUMPN A,RSPIN2		;LOOP
	HLRZ C,1(C)
	HRRZ C,(C)		;POINTER TO BEGINNING OF PIN BLOCK LIST
	MOVEI D,(C)		;SAVE IN D
	MOVEI B,0		;GET LARGEST PIN NAME VALUE IN USE IN B
RSPIN3:	HLRZ A,(C)		;POINTER TO PIN BLOCK
	HRRZ T,1(A)		;PIN NAME
	CAIGE B,(T)		;SKIP IF LE THAN BIGGEST SO FAR
	MOVEI B,(T)		;NEW BIGGEST PIN NAME
	HRRM T,(A)		;SO COPY PIN NAME TO PIN ID
	HRRZ C,(C)		;NEXT PIN LIST BLOCK
	JUMPN C,RSPIN3		;LOOP IF MORE PINS
	MOVSI TTT,BUSSED
	MOVEI C,(D)
RSPIN4:	HLRZ A,(C)		;POINTER TO PIN BLOCK
	TDNE TTT,(A)
	JRST RSPIN5		;BUSSED THROUGH PIN
RSPIN6:	HRRZ C,(C)		;NEXT PIN LIST BLOCK
	JUMPN C,RSPIN4		;LOOP IF MORE PINS
RSPIN8:	HLRZ A,(D)		;POINTER TO PIN BLOCK
	TDNE TTT,(A)
	JRST RSPIN7		;BUSSED THROUGH PIN
RSPIN9:	HRRZ D,(D)		;NEXT PIN LIST BLOCK
	JUMPN D,RSPIN8		;LOOP IF MORE PINS
	TRO MCHG		;ALL DONE
	POPJ P,

RSPIN1:	OUTSTR [ASCIZ /CAN'T CHANGE PINIDS - BODY IN USE IN DRAWING
/]
	POPJ P,

RSPIN5:	HRRZ TT,1(A)		;PIN NAME
	ADDI TT,(B)		;NEW PIN ID
	HRRM TT,(A)
	JRST RSPIN6

RSPIN7:	HRRZ TT,1(A)		;PIN NAME
	ADDI TT,(B)		;WHAT NEW PIN ID SHOULD BE
	HRRZ T,(A)		;WHAT NEW PIN ID IS
	CAIE T,(TT)
	JRST RSPIN9		;NOT EQUAL - HAVE DIDDLED THIS ONE ALREADY
	PUSH P,B
	PUSH P,D		;SEE IF THERE IS AN IDENTICAL BUSSED BIN LATER
	PUSH P,A
	HRRZ T,1(A)		;PIN NAME
	PUSH P,T
RSPINB:	HRRZ D,(D)
	JUMPE D,RSPINA		;OFF END OF LIST
	HLRZ A,(D)		;POINTER TO PIN BLOCK
	HRRZ T,1(A)		;PIN NAME
	CAMN T,(P)		;SKIP IF NOT SAME PIN NAME
	TDNN TTT,(A)
	JRST RSPINB		;NOT BUSSED THROUGH OR NOT SAME PIN NAME
	HRRZ T,(A)		;PIN ID
	ADDI T,(B)		;MAKE IT UNIQUE
	HRRM T,(A)
	LSH B,1
	JRST RSPINB

RSPINA:	SUB P,[2,,2]
	POP P,D
	POP P,B
	JRST RSPIN9
>;MD
  