00100	SUBTTL	<CTRL><META>U	COPY DIP ASSIGNMENTS FROM D WIRE LIST TO PC WIRE LIST
00200	DTOPC:	MOVE L,DEFLST
00300		FETCH(W,L,WIRL)
00400		PUSHJ P,LSTGT0		;GET A CARD NAME
00500		POPJ P,
00600		HRRM W,GOODW
00700		FETCH(W,L,PCWL)		;GET POINTER TO FIRST CARD BLOCK
00800		JUMPE W,NXCRD1		;IS THERE ONE?
00900		PUSHJ P,GETLOP		;LOOKUP SAME CARD
01000		JRST NXCRD1
01100		HRRM W,BADW
01200		OUTSTR[ASCIZ/
01300	/]
01400	FIXDIP:	MOVE T,[OUTCHR TTT]
01500		MOVEM T,PUTCHR
01600		HRRZ H,GOODW
01700		MOVEI H,RADDR(H,WBDY,NXTB);POINT TO BODY LIST LINK
01800		SETZM LETTER
01900		SETZM SLICEL
02000		JRST DTOPC1
02100	
02200	DTOPC2:	FETCH(T,H,BLOC)
02300		JUMPE T,DTOPC1		;ANY LOC?
02400		CAMN T,SLICEL		;DIFFERENT FROM LAST?
02500		JRST DTOPC1		;NO, SKIP IT
02600		MOVEM T,SLICEL		;REMEMBER LAST
02700		FETCH(TT,H,DIPT)	;DIP TYPE POINTER
02800		JUMPE TT,DTOPC1
02900		MOVEM T,LETTER
03000		MOVEM TT,DIPPNT
03100		HRRZ C,BADW
03200		MOVEI C,RADDR(C,WBDY,NXTB)
03300		PUSHJ P,BDLNXT		;FIND AND MAP ALL SUCH LOCS IN PC LIST!
03400		TRNE FLAG
03500		JRST DTOPC1
03600		MOVE A,LETTER
03700		PUSHJ P,LOCOUT
03800		OUTSTR[ASCIZ/ NOT FOUND IN "OTHER" LIST!
03900	/]
04000	DTOPC1:	FETCH(H,H,NXTB)
04100		JUMPN H,DTOPC2
04200		POPJ P,
04300	
04400	NXCRD1:	OUTSTR[ASCIZ/SAME CARD DOESN'T EXIST IN "OTHER" WIRE LIST!
04500	/]
04600		POPJ P,
04700	
04800	BDLNXT:	PUSHJ P,FN2BOD		;FIND BODY BY LOC IN LETTER
04900		POPJ P,			;NO MORE
05000		TRO FLAG
05100		FETCH(T,C,DIPT)		;DIP TYPE POINTER
05200		JUMPN T,BDLNXT		;ALREADY LINKED?
05300		PUSHJ P,LNKDIP
05400		JRST BDLNXT
05500	
05600	FN2BOD:	FETCH(C,C,NXTB)
05700		JUMPE C,CPOPJ
05800		FETCH(TT,C,BLOC)
05900		CAME TT,LETTER
06000		JRST FN2BOD
06100		JRST CPOPJ1
06200	
06300	LNKDIP:	MOVE A,DIPPNT
06400		STORE(A,C,DIPT)		;STORE DIP POINTER
06500		FETCH(E,C,BPIN)
06600		JUMPE E,CPOPJ		;SKIP THIS IF NO PINS
06700		PUSH P,C
06800	LNKDP1:	FETCH(F,E,PBDY)		;SETUP BODY POINTER
06900		FETCH(G,E,HPNT)		;WIRE HEADER
07000		FETCH(T,E,PINN)		;PIN #
07100		MOVEM T,PINNUM
07200		PUSHJ P,PTLINK		;LINK UP PIN TO TYPE
07300		JUMPE T,LNKDP2		;THIS IS 0 IF NO LINKUP
07400		PUSHJ P,LBCOPY		;DO LOADING AND SHARE CHECK
07500	LNKDP2:	FETCH(E,E,NXBP)
07600		JUMPN E,LNKDP1		;LOOP FOR THEM ALL
07700		POP P,C			;RESTORE BODY POINTER
07800		POPJ P,
     	00100	SUBTTL	'UML'		REPLACE REAL PIN NAMES WITH "U" PIN NAMES
00200	DEC,<
00300	UMLOUT:	MOVE L,DEFLST
00400		PUSHJ P,LSTGET
00500		POPJ P,
00600		MOVSI T,'UML'		;STUFFING EXT
00700		MOVEI TT,0		;DATA MODE
00800		MOVSI TTT,'DSK'
00900		PUSHJ P,OUTSET
01000		POPJ P,
01100		PUSHJ P,UGINSET
01200		PUTSTR[ASCIZ/PINS
01300	/]
01400		FETCH(H,W,WBDY)		;NOW GO DOWN BODY LIST
01500		JUMPE H,UMLBNX		;JUMP IF NONE
01600	UMLO1:	FETCH(T,H,BBIT)
01700		TRNN T,CBODY		;CONNECTOR?
01800		JRST UMLO2		;NO
01900		FETCH(G,H,BPIN)		;YES, GET FIRST PIN
02000	UMLO3:	FETCH(T,G,PBIT)
02100		TRNE T,DUP			;DON'T DO DUPLICATES
02200		JRST UMLO4
02300		FETCH(A,G,HPNT)
02400		FETCH(A,A,TBIT)		;GET WIRE TYPE BITS
02500		PUSHJ P,UGIN
02600		JRST UMLO4
02700		PUSH P,A
02800		FETCH(A,H,BLOC)
02900		FETCH(T,G,PINN)
03000		HRL A,T
03100		PUSHJ P,LOCPNC
03200		PUTBYT 11
03300		POP P,A
03400		PUSHJ P,LOCPNC
03500		CRLF
03600	UMLO4:	FETCH(G,G,NXBP)
03700		JUMPN G,UMLO3
03800	UMLO2:	FETCH(H,H,NXTB)
03900		JUMPN H,UMLO1
04000	UMLBNX:	PUTSTR[ASCIZ/END
04100	/]
04200		RELEASE LST,
04300		POPJ P,
     	00100	SUBTTL	'CPN' ADD CONNECTOR PIN DESIGNATION TO EACH SIGNAL NAME IN DRW FILE
00200	CPNOUT:	MOVE L,DEFLST
00300		PUSHJ P,LSTGET
00400		POPJ P,
00500		MOVSI T,'CPN'		;CON PIN EXT
00600		MOVEI TT,0		;DATA MODE
00700		MOVSI TTT,'DSK'
00800		PUSHJ P,OUTSET
00900		POPJ P,
01000		PUSHJ P,CLEARW		;CLEAR WIRE MARK BITS
01100		TLZ TFLG		;FLAG NOTHING TYPED YET
01200		MOVEI H,RADDR(W,WIRES,ALPH)
01300		JRST CPNC1
01400	
01500	CPNC2:	FETCH(T,H,WBIT)
01600		TRNE T,NAM2ND!WNULL!WSINGL	;SKIP FAKES, NULLS, AND SINGLES
01700		JRST CPNC1
01800		SETO TT,
01900		MOVEI G,RADDR(H,WPIN,NXTP)
02000		JRST CPNC3
02100	
02200	CPNC4:	FETCH(T,G,PBIT)
02300		TRNE T,DUP
02400		JRST CPNC3
02500		FETCH(T,G,PBDY)
02600		FETCH(T,T,BBIT)
02700		TRNE T,CBODY
02800		AOJG TT,CPNC5		;JUMP IF SECOND PIN
02900	CPNC3:	FETCH(G,G,NXTP)
03000		JUMPN G,CPNC4
03100		JRST CPNC1
03200	
03300	CPNC5:	FETCH(T,H,WBIT)
03400		TRO T,WTMP1
03500		STORE(T,H,WBIT)
03600		TRNE T,SPWR!SGND!SHI!SNC	;DON'T PRINT THESE
03700		JRST CPNC1
03800		TLON TFLG		;HEADING PRINTED?
03900		OUTSTR[ASCIZ/THE FOLLOWING MULTI-EDGE-PIN RUNS WILL BE SKIPPED:
04000	/]
04100		MOVE G,H
04200	CPNC6:	OUTSIG ADDR(G,SPNT)
04300		OUTSTR[ASCIZ/
04400	/]
04500		FETCH(G,G,NNAM)
04600		JUMPN G,CPNC6
04700	CPNC1:	FETCH(H,H,ALPH)
04800		JUMPN H,CPNC2
04900		FETCH(H,W,WBDY)		;NOW GO DOWN BODY LIST
05000		JUMPE H,CPNBNX		;JUMP IF NONE
05100	CPNO1:	FETCH(T,H,BBIT)
05200		TRNN T,CBODY		;CONNECTOR?
05300		JRST CPNO2		;NO
05400		FETCH(G,H,BPIN)		;YES, GET FIRST PIN
05500	CPNO3:	FETCH(T,G,PBIT)
05600		TRNE T,DUP			;DON'T DO DUPLICATES
05700		JRST CPNO4
05800		FETCH(F,G,HPNT)
05900		FETCH(T,F,WBIT)			;GET WIRE TYPE BITS
06000		TRNE T,SPWR!SGND!SNC!SHI!WTMP1	;NOT FOR THESE
06100		JRST CPNO4
06200	CPNO5:	FETCH(A,H,BLOC)
06300		FETCH(T,G,PINN)
06400		HRL A,T
06500		PUSHJ P,LOCPNC
06600		PUTBYT 11
06700		PUTSIG ADDR(F,SPNT)
06800		CRLF
06900		FETCH(F,F,NNAM)
07000		JUMPN F,CPNO5
07100	CPNO4:	FETCH(G,G,NXBP)
07200		JUMPN G,CPNO3
07300	CPNO2:	FETCH(H,H,NXTB)
07400		JUMPN H,CPNO1
07500	CPNBNX:	RELEASE LST,
07600		POPJ P,
     	00100	SUBTTL	'SPI' ADD CONNECTOR PIN DESIGNATION TO EACH SIGNAL NAME IN DRW FILE
00200	SPIOUT:	MOVE L,DEFLST
00300		PUSHJ P,LSTGET
00400		POPJ P,
00500		MOVSI T,'SPI'		;CON PIN EXT
00600		MOVEI TT,0		;DATA MODE
00700		MOVSI TTT,'DSK'
00800		PUSHJ P,OUTSET
00900		POPJ P,
01000		TLO SIMTAB		;SIMULATE TABS, THIS IS FOR COBOL
01100		PUSHJ P,CLEARW		;CLEAR WIRE MARK BITS
01200		FETCH(H,W,WBDY)		;NOW GO DOWN BODY LIST
01300		JUMPE H,SPIBNX		;JUMP IF NONE
01400	SPIO1:	FETCH(T,H,BBIT)
01500		TRNN T,CBODY		;CONNECTOR?
01600		JRST SPIO2		;NO
01700		FETCH(G,H,BPIN)		;YES, GET FIRST PIN
01800	SPIO3:	FETCH(T,G,PBIT)
01900		TRNE T,DUP			;DON'T DO DUPLICATES
02000		JRST SPIO4
02100		FETCH(F,G,HPNT)
02200		FETCH(T,F,WBIT)
02300		TRNE T,SPWR!SGND!SNC!SHI	;SKIP THESE
02400		JRST SPIO4
02500		FETCH(A,H,BLOC)
02600		FETCH(T,G,PINN)
02700		HRL A,T
02800		PUSHJ P,LOCPNC
02900		PUTBYT 11
03000		FETCH(T,F,WBIT)
03100		MOVEI E,"0"		;CODE 0 FOR FIRST SIGNAL LINE
03200		TROE T,WTMP1		;MARK RUN OUT
03300		MOVEI E,"1"		;CODE 1 FOR REPEATED SIGNAL LINE
03400		STORE(T,F,WBIT)
03500		PUSHJ P,SPIO5
03600	SPIO4:	FETCH(G,G,NXBP)
03700		JUMPN G,SPIO3
03800	SPIO2:	FETCH(H,H,NXTB)
03900		JUMPN H,SPIO1
04000	SPIBNX:	FETCH(F,W,WIRES)
04100		JUMPE F,SPIWNX
04200	SPIW1:	FETCH(T,F,WBIT)
04300		TRNE T,WTMP1!NAM2ND!WNULL!GENSIG!SPWR!SGND!SNC!SHI	;DON'T DO ANY OF THESE
04400		JRST SPIW2
04500		MOVEI E,"3"			;CODE 3 FOR NON-EDGE SIGNAL
04600		PUSHJ P,SPIO5
04700	SPIW2:	FETCH(F,F,ALPH)
04800		JUMPN F,SPIW1
04900	SPIWNX:	RELEASE LST,
05000		POPJ P,
05100	
05200	SPIO5:	PUSH P,F
05300	SPIO5A:	MOVEI A,=8
05400		PUSHJ P,SPFILL
05500		FETCH(D,F,WPIN)
05600		SETZ C,
05700	SPIO6:	FETCH(T,D,PTYP)
05800		JUMPE T,SPIO7
05900		FETCH(T,T,DPBIT)
06000		TRNN T,OUTLD
06100		JRST SPIO7
06200		JUMPN C,SPIO8
06300		MOVE C,D
06400	SPIO7:	FETCH(D,D,NXTP)
06500		JUMPN D,SPIO6
06600		JUMPE C,SPIO8
06700		FETCH(A,C,FILP)
06800		FETCH(A,A,FPRF)
06900		PUSHJ P,PRINT4		;ONLY 4 CHARS
07000	SPIO8:	MOVEI A,=16
07100		PUSHJ P,SPFILL
07200		PUTBYT (E)
07300		MOVEI E,"2"		;CODE 2 FOR MULTIPLE SIGNAL NAMES
07400		PUTBYT " "
07500		MOVEI T,ADDR(F,SPNT)
07600		MOVE TT,[=64,,=64]
07700		PUSHJ P,SMPPUT		;64 CHARS SIGNAL NAME, ASSERTION/POLARITY
07800		SKIPE OVRFLW			;OVERFLOW?
07900		PUTSTR[ASCIZ/ */]		;YES, FLAG IT
08000		CRLF
08100		FETCH(F,F,NNAM)
08200		JUMPN F,SPIO5A
08300		POP P,F
08400		POPJ P,
08500	>;DEC
     	00100	SUBTTL	'STF' AND 'PRT'	DIP STUFFING AND PARTS LISTS
00200	PRTLST:	TROA DOPRTL
00300	STFLST:	TRZ DOPRTL
00400		SETZM ALLNAM
00500		SETZM ALLCRD
00600	ALLSTF:	MOVE L,DEFLST
00700		SKIPE T,ALLCRD
00800		JRST [	MOVEM T,SLICEL
00900			JRST GALSTF]
01000		PUSHJ P,LSTGET
01100		POPJ P,
01200	GALSTF:	FETCH(H,W,WBDY)
01300		JUMPE H,[OUTSTR[ASCIZ/NO BODIES AT ALL!
01400	/]
01500			POPJ P,]	;SKIP IF NO BODIES
01600		TRNE DOPRTL
01700		SKIPA T,['PRT   ']
01800		MOVSI T,'STF'		;STUFFING EXT
01900		MOVEI TT,0		;DATA MODE
02000		MOVSI TTT,'DSK'
02100		PUSHJ P,ALLSET
02200		POPJ P,
02300		PUSHJ P,FILLST
02400		 PUTHDR
02500		TRNE DOPRTL
02600		JRST PRT1
02700		MOVEI T,[ASCIZ/PART NUMBER	DIPTYPE		LOC	BODY	FILE	POS/]
02800		MOVEM T,HEADER
02900		MOVEI T,STFMAR
03000		MOVEM T,MARGIN
03100		SETZM LINCNT
03200		PUSHJ P,CLEARB
03300		SETZM CDSKPC		;COUNT OF NUMBER OF BODIES WITHOUT DIPS
03400		MOVEI H,RADDR(W,WBDY,NXTB);GO MARK ALL BODIES WITHOUT LOCS
03500		JRST STFC2
03600	
03700	STFC1:	FETCH(T,H,BLOC)
03800		JUMPN T,STFC2
03900		AOS CDSKPC
04000		FETCH(T,H,BBIT)
04100		TRO T,BTMP1
04200		STORE(T,H,BBIT)
04300	STFC2:	FETCH(H,H,NXTB)
04400		JUMPN H,STFC1
04500		MOVEI T,PARTLIST-ADDR(0,NXPL)
04600		MOVEM T,LSTPART		;SET PARTLIST AS LAST PART
04700	STFA0:	SKIPN T,LSTPART
04800		JRST STFDON
04900		JRST STFA1
05000	
05100	STFA2:	FETCH(TT,T,PLPT)
05200		FETCH(TT,TT,PRBT)
05300		TRNE TT,PNUSED
05400		JRST STFA3
05500	STFA1:	FETCH(T,T,NXPL)
05600		JUMPN T,STFA2
05700	STFA3:	MOVEM T,LSTPART
05800		PUSHJ P,STFADO
05900		JRST STFA0
06000	
06100	STFADO:	TRZ FLAG		;FLAG PART NUMBER NOT PRINTED YET
06200		MOVEI H,RADDR(W,WBDY,NXTB);GOING DOWN BODY LIST
06300		CAIA			;SKIP CRLF INITIALLY
06400	STF1:	CRLF
06500		SETZM LSLOT		;FORGET LAST SLOT
06600		SETOM LSTDIP		;AND DIP TYPE
06700	STF3:	FETCH(H,H,NXTB)		;NEXT BODY
06800		JUMPE H,CPOPJ
06900		FETCH(TTT,H,BBIT)
07000		TRNE TTT,CBODY!BTMP1	;CONNECTOR BODY?
07100		JRST STF3		;YES, SKIP
07200		FETCH(T,H,PRTN)
07300		PUSHJ P,PNCHK		;CORRECT PART NUMBER?
07400		JRST STF3		;NO
07500		FETCH(TTT,H,BBIT)
07600		TRO TTT,BTMP1
07700		STORE(TTT,H,BBIT)
07800		FETCH(T,H,DIPT)		;GET DIP TYPE
07900		MOVEM T,LSTDIP
08000		FETCH(TT,H,BLOC)
08100		MOVEM TT,LSLOT
08200		SKIPL LINCNT
08300		PUSHJ P,PUTHDR
08400		TROE FLAG
08500		JRST STF8
08600		SKIPN A,LSTPART
08700		JRST STF8B
08800		FETCH(A,A,PLPT)
08900		FETCH(A,A,PRVS)
09000		PUSHJ P,STROUT
09100		JRST STF8
09200	
09300	STF8B:	PUTSTR[ASCIZ\N/A\]
09400	STF8:	MOVEI A,=16
09500		PUSHJ P,FILL
09600		SKIPN A,LSTDIP
09700		JRST [	PUTSTR[ASCIZ\N/A\]
09800			JRST STF8A]
09900		FETCH(A,A,DNAM)
10000		PUSHJ P,STROUT		;DIP NAME
10100	STF8A:	MOVE G,H		;START WITH CURRENT BODY
10200	STF4:	MOVEI A,=32
10300		PUSHJ P,FILL
10400		FETCH(A,G,BLOC)
10500		FETCH(T,G,BBIT)
10600		PUSHJ P,WLOCOUT
10700		PUTSTR[ASCIZ/( )/]
10800	STF5:	MOVEI A,=40
10900		PUSHJ P,FILL
11000		PUTSTR ADDR(G,BNAM)
11100		PUTBYT 11
11200		FETCH(A,G,FILB)
11300		PUTSIX ADDR(A,FILN)
11400		PUTBYT 11
11500		FETCH(A,G,BBIT)
11600		PUSHJ P,BPPNT
11700		CRLF
11800	STF7:	FETCH(G,G,NXTB)
11900		JUMPE G,STF1		;TRY ANOTHER DIP YET?
12000		FETCH(T,G,DIPT)
12100		CAME T,LSTDIP
12200		JRST STF7
12300		FETCH(T,G,PRTN)
12400		PUSHJ P,PNCHK
12500		JRST STF7
12600		FETCH(T,G,BBIT)
12700		TRO T,BTMP1
12800		STORE(T,G,BBIT)
12900		FETCH(T,G,BLOC)
13000		CAMN T,LSLOT
13100		JRST STF5
13200		MOVEM T,LSLOT
13300		JRST STF4
13400	
13500	STFDON:	SKIPN T,CDSKPC
13600		JRST STFDN1
13700		CRLF
13800		PUTSTR[ASCIZ/NUMBER OF BODIES WITH NO LOCATION SET = /]
13900		PUSHJ P,DECOUT
14000		CRLF
14100	STFDN1:	RELEASE LST,
14200		POPJ P,
14300	
14400	PNCHK:	SKIPN TT,LSTPART
14500		JRST [	JUMPN T,CPOPJ	;NOT NOW
14600			JRST CPOPJ1]
14700	PNCHK2:	FETCH(TTT,TT,PLPT)
14800		CAMN TTT,T
14900		JRST CPOPJ1
15000		FETCH(TT,TT,NXPL)
15100		JUMPE TT,CPOPJ
15200		FETCH(TTT,TT,PLBT)
15300		TRNE TTT,PL2ND
15400		JRST PNCHK2
15500		POPJ P,
15600	
15700	PRT1:	MOVEI T,[ASCIZ/
15800	PART NUMBER	DIPTYPE		COUNT	DESCRIPTION				LOCATIONS/]
15900		MOVEM T,HEADER
16000		MOVEI T,PRTMAR
16100		MOVEM T,MARGIN
16200		SETZM LINCNT
16300		PUSHJ P,CLEARB
16400		SETOM NBODS
16500		MOVEI T,PARTLIST-ADDR(0,NXPL)
16600		MOVEM T,LSTPART		;SET PARTLIST AS LAST PART
16700	PRTA0:	SKIPN T,LSTPART
16800		JRST STFDN1		;DONE, DON'T DUMP TOTALS FOR N/A
16900		JRST PRTA1
17000	
17100	PRTA2:	FETCH(TT,T,PLPT)
17200		FETCH(TT,TT,PRBT)
17300		TRNE TT,PNUSED
17400		JRST PRTA3
17500	PRTA1:	FETCH(T,T,NXPL)
17600		JUMPN T,PRTA2
17700	PRTA3:	PUSH P,T
17800		SKIPLE NBODS
17900		PUSHJ P,PRTDMP		;DUMP OUT TOTALS OF LAST PART NUMBER
18000		TRZ FLAG
18100		SETOM NBODS
18200		SETZM TMPCN1
18300		SETZM TMPCN2
18400		POP P,T
18500	PRTA6:	MOVEM T,LSTPART
18600		PUSHJ P,PRTADO
18700		TRNN FLAG		;DID WE PRINT ANY YET?
18800		JRST PRTA0		;NO, JUST LOOP BACK
18900		SKIPN T,LSTPART
19000		JRST STFDN1
19100	PRTA4:	FETCH(T,T,NXPL)
19200		JUMPE T,PRTA3
19300		FETCH(TT,T,PLBT)
19400		TRNN TT,PL2ND
19500		JRST PRTA2		;JUMP INTO NORMAL LOOP IF NOT SAME NUMBER
19600		FETCH(TT,T,PLPT)
19700		FETCH(TT,TT,PRBT)
19800		TRNN TT,PNUSED
19900		JRST PRTA4
20000		JRST PRTA6
20100	
20200	PRTADO:	MOVEI H,RADDR(W,WBDY,NXTB)
20300		JRST PRT2
20400	
20500	PRT3:	FETCH(TTT,H,BBIT)
20600		TRNE TTT,CBODY!BTMP1	;SKIP CONS
20700		JRST PRT2
20800		FETCH(T,H,PRTN)
20900		SKIPE TT,LSTPART
21000		FETCH(TT,TT,PLPT)
21100		CAME TT,T
21200		JRST PRT2
21300		HRLZM T,LSTDIP
21400		FETCH(T,H,BBIT)
21500		TRO T,BTMP1
21600		STORE(T,H,BBIT)
21700		FETCH(T,H,DIPT)
21800		HRRM T,LSTDIP
21900		FETCH(T,H,PRPX)
22000		MOVEM T,LPRPX
22100		SETZM LSLOT		;NO LOC COUNTED YET
22200		SKIPL LINCNT
22300		PUSHJ P,PUTHDR
22400		SETZM NDIPS
22500		SETZM TOTDIP
22600		MOVE G,H		;START WITH THIS BODY
22700	PRT4:	FETCH(TTT,G,BBIT)
22800		TRNE TTT,CBODY
22900		JRST PRT6
23000		FETCH(T,G,DIPT)
23100		FETCH(TT,G,PRTN)
23200		HRL T,TT
23300		CAME T,LSTDIP
23400		JRST PRT6
23500		FETCH(T,G,PRPX)
23600		CAME T,LPRPX
23700		JRST PRT6
23800		TRO TTT,BTMP1
23900		STORE(TTT,G,BBIT)
24000		FETCH(T,G,BLOC)
24100		JUMPN T,PRT5
24200		MOVSI T,1
24300		ADDM T,TOTDIP
24400		JRST PRT6
24500	
24600	PRT5:	AOS TOTDIP
24700		CAME T,LSLOT
24800		AOS NDIPS
24900		MOVEM T,LSLOT
25000	PRT6:	FETCH(G,G,NXTB)
25100		JUMPN G,PRT4
25200		AOS NBODS		;COUNT ANOTHER LINE PRINTED
25300		TROE FLAG
25400		JRST PRT9
25500		SKIPN A,LSTPART
25600		JRST PRT9B
25700		FETCH(A,A,PLPT)
25800		FETCH(A,A,PRVS)
25900		PUSHJ P,STROUT
26000		JRST PRT9
26100	
26200	PRT9B:	PUTSTR[ASCIZ\N/A\]
26300	PRT9:	MOVEI A,=16
26400		PUSHJ P,FILL
26500		HRRZ G,LSTDIP
26600		JUMPE G,[PUTSTR[ASCIZ\N/A\]
26700			JRST PRT9A]
26800		FETCH(A,G,DNAM)
26900		PUSHJ P,STROUT
27000	PRT9A:	MOVEI A,=32
27100		PUSHJ P,FILL
27200		MOVE T,NDIPS
27300		ADDM T,TMPCN1
27400		PUSHJ P,DECOUT
27500		MOVE T,TOTDIP
27600		ADDM T,TMPCN2
27700		SKIPN T,LSTPART
27800		JRST PRT8
27900		FETCH(T,T,PLPT)
28000		FETCH(T,T,PRPP)		;SKIP PART NUMBER
28100	PRT8:	MOVEM T,PRPPTR
28200		MOVE T,LPRPX
28300		MOVEM T,PRXPTR
28400		MOVE G,H
28500		SETZM FSLOT
28600		SETZM LSLOT
28700	PRT7:	PUSHJ P,PRPLIN		;ONE LINE OF PROPERTIES
28800		JRST PRT7A		;NO MORE PROPERTIES
28900		PUSHJ P,LOCLIN
29000		JFCL
29100		CRLF
29200		JRST PRT7
29300	
29400	PRT7A:	PUSHJ P,LOCLIN
29500		JRST PRT7B
29600		CRLF
29700		JRST PRT7A		;LOOP TILL DONE
29800	
29900	PRT7B:	SKIPE LCOUNT
30000		CRLF
30100	PRT2:	FETCH(H,H,NXTB)
30200		JUMPN H,PRT3
30300		POPJ P,
30400	
30500	PRPLIN:	SKIPN B,PRPPTR
30600		JRST PRPLX1
30700	PRPL0:	FETCH(T,B,PRBT)
30800		TRNN T,NULVAL
30900		JRST PRPL0A
31000		FETCH(B,B,PRPP)
31100		JUMPN B,PRPL0
31200		MOVEM B,PRPPTR
31300		JRST PRPLX1
31400	
31500	PRPL0A:	MOVEI A,=40
31600		PUSHJ P,FILL
31700	PRPL1:	MOVE T,LCOUNT
31800		CAIG T,=40
31900		JRST PRPL2
32000		SUBI T,=78+2		;COUNT DELIMITERS HERE
32100		MOVEM T,TCOUNT
32200		PUSH P,PUTCHR
32300		MOVE T,[PUSHJ P,TAOS]
32400		MOVEM T,PUTCHR
32500		FETCH(A,B,PRVS)
32600		PUSHJ P,STROUT
32700		POP P,PUTCHR
32800		SKIPLE TCOUNT
32900		JRST CPOPJ1		;END THIS LINE
33000		PUTSTR[ASCIZ/, /]
33100	PRPL2:	FETCH(A,B,PRVS)
33200		PUSHJ P,STROUT
33300	PRPL3:	FETCH(B,B,PRPP)
33400		MOVEM B,PRPPTR
33500		JUMPE B,CPOPJ1
33600		FETCH(T,B,PRBT)
33700		TRNE T,NULVAL
33800		JRST PRPL3
33900		JRST PRPL1
34000	
34100	PRPLX1:	SKIPN B,PRXPTR
34200		POPJ P,
34300		MOVEI A,=40
34400		PUSHJ P,FILL
34500	PRPLX2:	MOVE T,LCOUNT
34600		CAIG T,=40
34700		JRST PRPLX3
34800		SUBI T,=78-3		;COUNT DELIMITERS HERE
34900		MOVEM T,TCOUNT
35000		PUSH P,PUTCHR
35100		MOVE T,[PUSHJ P,TAOS]
35200		MOVEM T,PUTCHR
35300		FETCH(A,B,TLFT)
35400		PUSHJ P,STROUT
35500		FETCH(A,B,TRHT)
35600		PUSHJ P,STROUT
35700		POP P,PUTCHR
35800		SKIPLE TCOUNT
35900		JRST CPOPJ1		;END THIS LINE
36000		PUTSTR[ASCIZ/, /]
36100	PRPLX3:	FETCH(A,B,TLFT)
36200		PUSHJ P,STROUT
36300		PUTBYT ":"
36400		FETCH(A,B,TRHT)
36500		PUSHJ P,STROUT
36600		FETCH(B,B,NXTT)
36700		MOVEM B,PRXPTR
36800		JUMPN B,PRPLX2
36900		JRST CPOPJ1
37000	
37100	LOCLIN:	HLRZ T,TOTDIP
37200		JUMPN T,LOCLN0
37300		JUMPE G,LOCLN7
37400	LOCLN1:	FETCH(T,G,BBIT)
37500		TRNE T,CBODY
37600		JRST LOCLN2
37700		FETCH(T,G,DIPT)
37800		FETCH(TT,G,PRTN)
37900		HRL T,TT
38000		CAME T,LSTDIP
38100		JRST LOCLN2
38200		FETCH(T,G,PRPX)
38300		CAME T,LPRPX
38400		JRST LOCLN2
38500		FETCH(A,G,BLOC)
38600		JUMPE A,LOCLN2
38700		CAMN A,LSLOT
38800		JRST LOCLN2
38900		SKIPN FSLOT
39000		JRST [	MOVEM A,FSLOT
39100			MOVEM A,LSLOT
39200			JRST LOCLN2]
39300		MOVE T,LSLOT
39400		MOVE TT,A
39500		PUSHJ P,SEQLOC
39600		CAIA
39700		JRST [	MOVEM A,LSLOT
39800			JRST LOCLN2]
39900	LOCLN8:	PUSHJ P,LOCLPN
40000		JRST CPOPJ1
40100		MOVE T,FSLOT
40200		CAMN T,LSLOT
40300		JRST LOCLN6
40400		MOVE TT,LSLOT
40500		PUSHJ P,SEQLOC
40600		JRST LOCLN6
40700		MOVE T,LSLOT
40800		MOVEM T,FSLOT
40900		PUSHJ P,LOCLPN
41000		JRST CPOPJ1
41100	LOCLN6:	JUMPE G,[SETZM FSLOT
41200			POPJ P,]
41300		FETCH(A,G,BLOC)
41400		MOVEM A,FSLOT
41500		MOVEM A,LSLOT
41600	LOCLN2:	FETCH(G,G,NXTB)
41700		JUMPN G,LOCLN1
41800	LOCLN7:	SKIPE FSLOT
41900		JRST LOCLN8
42000		POPJ P,
42100	
42200	LOCLPN:	TLZ TFLG
42300		MOVE T,FSLOT
42400		CAMN T,LSLOT
42500		JRST LOCLN4
42600		MOVE TT,LSLOT
42700		PUSHJ P,SEQLOC
42800		TLO TFLG
42900	LOCLN4:	MOVE T,LCOUNT
43000		CAIGE T,=80
43100		JRST [	MOVEI A,=80
43200			PUSHJ P,FILL
43300			JRST LOCLN3]
43400		SUB T,LWIDTH
43500		ADDI T,2			;COUNT DELIMITERS HERE
43600		MOVEM T,TCOUNT
43700		PUSH P,PUTCHR
43800		MOVE T,[PUSHJ P,TAOS]
43900		MOVEM T,PUTCHR
44000		MOVE A,FSLOT
44100		FETCH(T,G,BBIT)
44200		PUSHJ P,WLOCOUT
44300		TLNN TFLG
44400		JRST LOCLN5
44500		AOS TCOUNT		;ONE CHARACTER FOR DASH BETWEEN LOCS
44600		MOVE A,LSLOT
44700		FETCH(T,G,BBIT)
44800		PUSHJ P,WLOCOUT
44900	LOCLN5:	POP P,PUTCHR
45000		SKIPLE TCOUNT
45100		POPJ P,
45200		PUTSTR[ASCIZ/, /]
45300	LOCLN3:	AOS (P)		;WILL PRINT, SKIP
45400		MOVE A,FSLOT
45500		FETCH(T,G,BBIT)
45600		PUSHJ P,WLOCOUT
45700		TLNN TFLG
45800		POPJ P,
45900		PUTBYT "-"
46000		MOVE A,LSLOT
46100		FETCH(T,G,BBIT)
46200		JRST WLOCOUT
46300	
46400	LOCLN0:	MOVEI A,=80
46500		PUSHJ P,FILL
46600		PUTSTR[ASCIZ/NO. OF GATES WITH NO REF. DES. = /]
46700		HLRZ T,TOTDIP
46800		PUSHJ P,DECOUT
46900		HRRZS TOTDIP
47000		JRST CPOPJ1
47100	
47200	PRTDMP:	MOVEI A,=24
47300		PUSHJ P,FILL
47400		PUTSTR[ASCIZ/TOTAL = /]
47500		MOVE T,TMPCN1
47600		PUSHJ P,DECOUT
47700		HLRZ T,TMPCN2
47800		JUMPE T,PRTDM1
47900		PUTSTR[ASCIZ/	NO. OF GATES WITH NO REF. DES. = /]
48000		HLRZ T,TMPCN2
48100		PUSHJ P,DECOUT
48200	PRTDM1:	CRLF
48300		POPJ P,
48400	
48500	TAOS:	SKIPE TTT
48600		AOS TCOUNT
48700		POPJ P,
     	00100	SUBTTL	'OTS'		OUTPUT TERMINATION SUMMARY
00200	OUTSUM:	SKIPN DIPLST
00300		JRST [	OUTSTR[ASCIZ/SORRY, NO DIPS.
00400	/]
00500			POPJ P,]
00600		MOVE L,DEFLST
00700		PUSHJ P,LSTGET
00800		POPJ P,
00900		FETCH(H,W,WBDY)
01000		JUMPE H,[OUTSTR[ASCIZ/NO BODIES AT ALL!
01100	/]
01200			POPJ P,]	;SKIP IF NO BODIES
01300		MOVSI T,'OTS'		;OUTPUT TERMINATION SUMMARY EXT
01400		MOVEI TT,0		;DATA MODE
01500		MOVSI TTT,'DSK'
01600		PUSHJ P,OUTSET
01700		POPJ P,
01800		PUSHJ P,FILLST
01900		 PUTHDR
02000		MOVEI T,[ASCIZ/DIPTYPE		PIN #	OFF	ON	TOTAL
02100				   BOARD/]
02200		MOVEM T,HEADER
02300		MOVEI T,OTSMAR
02400		MOVEM T,MARGIN
02500		SETZM LINCNT
02600		PUSHJ P,DCLEAR		;CLEAR DIP TEMP CELL
02700		SETZM CDSKPC
02800		MOVEI H,RADDR(W,WBDY,NXTB);GOING DOWN BODY LIST
02900	OTS1:	SETZM LSLOT		;FORGET LAST SLOT
03000		SETZM LSTDIP		;AND DIP TYPE
03100	OTS2:	FETCH(H,H,NXTB)		;NEXT BODY
03200		JUMPE H,OTSDON
03300		FETCH(TTT,H,BBIT)
03400		TRNE TTT,CBODY		;CONNECTOR BODY?
03500		JRST OTS2		;YES, SKIP
03600		FETCH(G,H,DIPT)		;GET DIP TYPE
03700		JUMPE G,[AOS CDSKPC
03800			JRST OTS2]
03900		FETCH(TTT,G,DTMP)
04000		TROE TTT,1		;THIS DIP DONE YET?
04100		JRST OTS2		;YES
04200		STORE(TTT,G,DTMP)	;NO, STORE BIT ON
04300		MOVEM G,LSTDIP
04400		TLZ TFLG		;FLAG DIPTYPE NOT PRINTED YET
04500		FETCH(G,G,DPIN)		;GET FIRST DIP PIN
04600		MOVEI E,0		;STARTS WITH PIN # 1
04700	OTS3:	ADDI E,1
04800		FETCH(T,G,DPBIT)	;GET PIN TYPE BITS
04900		TRNN T,OUTLD		;OUTPUT?
05000		JRST OTS4		;NO, TRY NEXT ONE
05100		MOVE F,H		;GOT ONE, START WITH FIRST BODY
05200		SETZ D,			;CLEAR COUNTS
05300		JRST OTS5
05400	
05500	OTS6:	FETCH(T,F,DIPT)		;GET DIP TYPE
05600		CAMN T,LSTDIP		;SAME DIP?
05700		JRST OTS5		;YES
05800	OTS7:	FETCH(F,F,NXTB)		;LOOK FOR ANOTHER BODY OF THIS DIP TYPE
05900		JUMPN F,OTS6
06000		JUMPE D,OTS4		;IF NO COUNT, GO STRAIGHT TO NEXT PIN
06100		TLOE TFLG		;DIP NAME OUT YET?
06200		JRST OTS10		;YES
06300		SKIPL LINCNT
06400		PUSHJ P,PUTHDR
06500		MOVE A,LSTDIP
06600		FETCH(A,A,DNAM)
06700		PUSHJ P,STROUT		;PRINT DIP NAME
06800		MOVE T,LCOUNT
06900		CAIGE T,8
07000		PUTBYT 11
07100		CAIA
07200	OTS10:	PUTBYT 11
07300		PUTBYT 11
07400		MOVE T,E
07500		PUSHJ P,DECOUT		;PIN #
07600		PUTBYT 11
07700		HLRZ T,D
07800		PUSHJ P,DECOUT		;# OFF BOARD
07900		PUTBYT 11
08000		HRRZ T,D
08100		PUSHJ P,DECOUT		;# ON BOARD
08200		PUTBYT 11
08300		HLRZ T,D
08400		ADDI T,(D)
08500		PUSHJ P,DECOUT		;TOTAL
08600		CRLF
08700		JRST OTS4		;TRY ANOTHER DIP PIN
08800	
08900	OTS5:	FETCH(C,F,BPIN)		;GET BODY PIN LIST
09000		JUMPE C,OTS7		;IF NONE, LOOP BACK FOR ANOTHER BODY
09100	OTS8:	FETCH(T,C,PBIT)
09200		TRNE T,DUP		;SKIP DUP'S
09300		JRST OTS9
09400		FETCH(T,C,PINN)		;GET PIN #
09500		CAME T,E		;SAME AS ONE WE ARE DOING?
09600		JRST OTS9
09700		FETCH(TT,C,HPNT)		;GET WIRE HEADER POINTER
09800		FETCH(T,TT,WBIT)	;WIRE TYPE BITS
09900		TRNE T,WNULL!WSINGL	;IGNORE THESE PINS
10000		JRST OTS9
10100		FETCH(T,TT,TBIT)	;GET ACCUMULATED TYPE BITS
10200		TRNN T,ANYCON		;IS THERE A TERMINATOR ON THIS RUN?
10300		AOJA D,OTS9		;NO, COUNT UNTERMINATED
10400		ADD D,[1,,0]		;YES, COUNT AS TERMINATED
10500	OTS9:	FETCH(C,C,NXBP)		;NEXT BODY PIN
10600		JUMPN C,OTS8
10700		JRST OTS7		;GET ANOTHER BODY
10800	
10900	OTS4:	FETCH(G,G,DPNXT)	;NEXT DIP PIN
11000		JUMPN G,OTS3
11100		JRST OTS1		;TRY FOR ANOTHER DIP
11200	
11300	OTSDON:	SKIPN T,CDSKPC
11400		JRST OTSDN1
11500		CRLF
11600		PUTSTR[ASCIZ/NUMBER OF BODIES WITH NO DIP TYPE = /]
11700		PUSHJ P,DECOUT
11800		CRLF
11900	OTSDN1:	RELEASE LST,
12000		POPJ P,
     	00100	SUBTTL	'OTL'		OUTPUT TERMINATION LISTING
00200	TRMLST:	SKIPN DIPLST
00300		JRST [	OUTSTR[ASCIZ/SORRY, NO DIPS.
00400	/]
00500			POPJ P,]
00600		MOVE L,DEFLST
00700		PUSHJ P,LSTGET
00800		POPJ P,
00900		FETCH(H,W,WBDY)
01000		JUMPE H,[OUTSTR[ASCIZ/NO BODIES AT ALL!
01100	/]
01200			POPJ P,]	;SKIP IF NO BODIES
01300		MOVSI T,'OTL'		;OUTPUT TERMINATION LIST EXT
01400		MOVEI TT,0		;DATA MODE
01500		MOVSI TTT,'DSK'
01600		PUSHJ P,OUTSET
01700		POPJ P,
01800		PUSHJ P,FILLST
01900		 PUTHDR
02000		PUSHJ P,CLEARP		;CLEAR PIN MARK BITS
02100		MOVEI H,RADDR(W,WIRES,ALPH)
02200		JRST TRML1
02300	
02400	TRML2:	FETCH(T,H,WBIT)
02500		TRNE T,NAM2ND!WNULL!WSINGL!SNC!SHI!SPWR!SGND	;INTERESTING RUN?
02600		JRST TRML1		;NO, SKIP IT
02700		FETCH(G,H,WPIN)
02800		SETZB F,E		;NO CON FOUND YET
02900	TRML3:	FETCH(T,G,PTYP)
03000		JUMPE T,TRML6
03100		FETCH(T,T,DPBIT)
03200		TRNE T,OUTLD		;FOUND OUTPUT?
03300		JRST TRML5		;YES, WIN IMMEDIATELY
03400		JUMPN F,TRML4		;LOOK NO FURTHER IF WE HAVE CON
03500	TRML6:	FETCH(T,G,PBDY)
03600		FETCH(T,T,BBIT)
03700		TRNE T,CBODY
03800		JRST [	MOVE F,G		;REMEMBER CON
03900			JRST TRML4]
04000		JUMPN E,TRML4
04100		FETCH(T,G,PTYP)
04200		JUMPE T,TRML4
04300		FETCH(T,T,DPBIT)
04400		TRNN T,TERM		;DON'T REMEMBER TERM
04500		MOVE E,G
04600	TRML4:	FETCH(G,G,NXTP)
04700		JUMPN G,TRML3
04800		SKIPE G,F
04900		JRST TRML5		;WE HAVE CON
05000		SKIPN G,E		;NO CON, DO WE HAVE NON TERM?
05100		FETCH(G,H,WPIN)		;NO, USE FIRST PIN OF RUN
05200	TRML5:	FETCH(T,G,PBIT)
05300		TRO T,PTMP1
05400		STORE(T,G,PBIT)
05500	TRML1:	FETCH(H,H,ALPH)
05600		JUMPN H,TRML2
05700		TRZ CONLY
05800	TRMLB0:	TRNE CONLY
05900		SKIPA T,[[ASCIZ/UNTERMINATED RUNS
06000	TEST PIN	DIPTYPE		SIGNAL/]]
06100		MOVEI T,[ASCIZ/TERMINATED RUNS
06200	TEST PIN	DIPTYPE		TERM PIN	VALUE		SIGNAL/]
06300		MOVEM T,HEADER
06400		MOVEI T,OTLMAR
06500		MOVEM T,MARGIN
06600		SETZM LINCNT
06700		MOVEI H,RADDR(W,WBDY,NXTB)
06800		JRST TRMLB1
06900	
07000	TRMLB2:	FETCH(G,H,BPIN)
07100	TRMLB4:	FETCH(T,G,PBIT)
07200		TRNN T,PTMP1
07300		JRST TRMLB3
07400		FETCH(T,G,HPNT)
07500		FETCH(T,T,TBIT)
07600		TRNE CONLY
07700		TRC T,TERM		;INVERT TEST ON SECOND PASS
07800		TRNN T,TERM
07900		JRST TRMLB3
08000		SKIPL LINCNT
08100		PUSHJ P,PUTHDR
08200		FETCH(A,H,BLOC)
08300		FETCH(T,G,PINN)
08400		HRL A,T
08500		FETCH(T,H,BBIT)
08600		TRNN T,CBODY
08700		JRST TRMLB5
08800		PUSHJ P,LOCPNW
08900		JRST TRMLB6
09000	
09100	TRMLB5:
09800		PUSHJ P,LOCPNP
10200	TRMLB6:	MOVEI A,=16
10300		PUSHJ P,FILL
10400		FETCH(T,H,BBIT)
10500		TRNN T,CBODY
10600		JRST TRMLB7
10700		PUTSTR[ASCIZ/CON/]
10800		JRST TRMLB8
10900	
11000	TRMLB7:	FETCH(A,H,DIPT)
11100		JUMPE A,TRMLB8
11200		FETCH(A,A,DNAM)
11300		PUSHJ P,STROUT
11400	TRMLB8:	FETCH(F,G,HPNT)
11500		TRNE CONLY
11600		JRST TRMLC1
11700		FETCH(E,F,WPIN)
11800		PUSHJ P,TRMPNT
11900		JFCL
12000		MOVEI A,=64
12100		PUSHJ P,FILL
12200		FETCH(F,G,HPNT)
12300		PUTSIG ADDR(F,SPNT)
12400		CRLF
12500	TRMLB9:	PUSHJ P,TRMPNT
12600		JRST TRMLB3
12700		CRLF
12800		JRST TRMLB9
12900	
13000	TRMLC1:	MOVEI A,=32
13100		PUSHJ P,FILL
13200		PUTSIG ADDR(F,SPNT)
13300		CRLF
13400	TRMLB3:	FETCH(G,G,NXBP)
13500		JUMPN G,TRMLB4
13600	TRMLB1:	FETCH(H,H,NXTB)
13700		JUMPN H,TRMLB2
13800		TRON CONLY		;SECOND PASS YET?
13900		JRST TRMLB0		;NO, DO IT
14000		RELEASE LST,
14100		POPJ P,
14200	
14300	TRMPN1:	FETCH(T,E,PTYP)
14400		JUMPE T,TRMPN2
14500		FETCH(T,T,DPBIT)
14600		TRNE T,TERM
14700		JRST TRMPN3
14800	TRMPN2:	FETCH(E,E,NXTP)
14900	TRMPNT:	JUMPN E,TRMPN1
15000		POPJ P,
15100	
15200	TRMPN3:	MOVEI A,=32
15300		PUSHJ P,FILL
15400		PUSH P,F
15500		FETCH(F,E,PBDY)
15600		FETCH(T,F,BBIT)
15700		FETCH(A,F,BLOC)
15800		FETCH(TT,E,PINN)
15900		HRL A,TT
16500		PUSHJ P,LOCPNP
16900		MOVEI A,=48
17000		PUSHJ P,FILL
17100		PUSH P,E
17200		PUSHJ P,VALPNT		;PRINT VALUE OF TERM
17300		POP P,E
17400		POP P,F
17500		FETCH(E,E,NXTP)
17600		JRST CPOPJ1
     	00100	SUBTTL	'RES'		FILE FOR RESISTOR DRAWING
00200	DEC,<
00300	RESFIL:	MOVE L,DEFLST
00400		PUSHJ P,LSTGET
00500		POPJ P,
00600		MOVSI T,'RES'		;RESISTOR FILE
00700		MOVEI TT,0		;DATA MODE
00800		MOVSI TTT,'DSK'
00900		PUSHJ P,OUTSET
01000		POPJ P,
01100		TLO SIMTAB		;ALWAYS SIMULATE TABS
01200		MOVEI H,RADDR(W,WIRES,ALPH)
01300		JRST RESFL1
01400	
01500	RESFL2:	FETCH(T,H,WBIT)
01600		TRNE T,NAM2ND
01700		JRST RESFL1		;ONLY LOOK AT REAL WIRES
01800		FETCH(T,H,TBIT)
01900		TRC T,ECL!TERM
02000		TRCE T,ECL!TERM		;ANY ECL TERMS ON THIS WIRE?
02100		JRST RESFL1
02200		MOVEI G,RADDR(H,WPIN,NXTP)
02300		JRST RESFL3
02400	
02500	RESFL4:	FETCH(T,G,PTYP)
02600		JUMPE T,RESFL3
02700		FETCH(T,T,DPBIT)
02800		TRC T,ECL!TERM
02900		TRCE T,ECL!TERM
03000		JRST RESFL3
03100		FETCH(T,G,PBIT)
03200		FETCH(F,G,PBDY)
03300		TRNE T,DUP		;DON'T REPEAT LOC IF DUP
03400		JRST RESFL5
03500		FETCH(A,F,BLOC)
03600		FETCH(T,G,PINN)
03700		HRL A,T
03800		FETCH(T,F,BBIT)
04400		PUSHJ P,LOCPNP		;PUT OUT LOC
04800	RESFL5:	MOVEI A,=16
04900		PUSHJ P,FILL
05000		FETCH(A,G,FILP)
05100		PUTSIX ADDR(A,FILN)
05200		PUTBYT 11
05300		FETCH(A,F,BBIT)
05400		PUSHJ P,BPPNT		;DWG POS
05500		PUTBYT 11
05600		PUSHJ P,VALPNT
05700		MOVEI A,=48
05800		PUSHJ P,FILL
05900		FETCH(A,G,HPNT)
06000		PUTSIG ADDR(A,SPNT)
06100		CRLF
06200	RESFL3:	FETCH(G,G,NXTP)
06300		JUMPN G,RESFL4
06400	RESFL1:	FETCH(H,H,ALPH)
06500		JUMPN H,RESFL2
06600		RELEASE LST,
06700		POPJ P,
06800	>;DEC
06900	
07000	;CALL WITH F:POINTER TO BODY
07100	;CLOBBERS E, A, T, TT, TTT
07200	VALPNT:	FETCH(E,F,PRTN)
07300		JUMPE E,RESFL6
07400	RESFL7:	FETCH(T,E,PRNB)
07500		FETCH(T,T,PRNS)
07600		MOVEI TT,[ASCIZ/VALUE/]
07700		PUSHJ P,ASCPAR		;IS THIS VALUE PROPERTY?
07800		JRST RESFL8
07900		JRST RESFL8
08000		FETCH(A,E,PRVS)
08100		JRST STROUT
08200	
08300	RESFL8:	FETCH(E,E,PRPP)
08400		JUMPN E,RESFL7
08500	RESFL6:	PUTSTR[ASCIZ\N/A\]
08600		POPJ P,
     	00100	SUBTTL	'MPL'		MASTER PARTS LIST - READ COUNTS
00200	MPART:	SKIPN H,MODLST
00300		JRST [	OUTSTR[ASCIZ/NO MODULES.
00400	/]
00500			POPJ P,]
00600	CLMCNT:	CLEAR(H,MNUM)
00700		FETCH(H,H,MNXT)
00800		JUMPN H,CLMCNT
00900		MOVE T,[PUSHJ P,TTYIN]
01000		MOVEM T,GETCHR
01100		MOVE T,[PUSHJ P,TTYOUT]
01200		MOVEM T,PUTCHR
01300		MOVSI T,'MCF'
01400		MOVEM T,DEFEXT
01500		TLZ ASKHIM		;ASSUME WILL NOT READ FILE
01600		PUSHJ P,SETFIL
01700		JRST NOMODC
01800		TLO ASKHIM		;WE ARE READING FILE
01900		PUSHJ P,IN0		;READ IN TEXT MODE
02000		POPJ P,			;FOO
02100		LOOKUP DAT,FILNAM
02200		JRST [	OUTSTR[ASCIZ/LOOKUP FAILED, CODE= /]
02300			HRRZ T,FILEXT
02400			PUSHJ P,DECOUT
02500			OUTSTR[ASCIZ/
02600	/]
02700			POPJ P,]
02800		OUTSTR[ASCIZ/
02900	/]
03000		MOVE T,[PUSHJ P,BYTIN]
03100		MOVEM T,GETCHR
03200		SKIPE B,MPLTIT
03300		PUSHJ P,PUTFS
03400		SETZM MPLTIT
03500		PUSHJ P,ISTR
03600		JRST IMCFE
03700		JFCL			;ALTMODE FROM FILE, IGNORE IT
03800		SETZ B,			;NULL, STORE NULL
03900		MOVEM B,MPLTIT
04000		CAIN TTT,12
04100		JRST IMCF1
04200		PUTSTR[ASCIZ/ILLEGAL TAB OR ALTMODE IN TITLE LINE:
04300	/]
04400		SKIPE A,MPLTIT
04500		PUSHJ P,STROUT
04600		PUTBYT 11
04700		JRST ILLLN3
04800	
04900	IMCF1:	PUSHJ P,ISTR
05000		JRST IMCFE		;END OF FILE HERE OK
05100		JRST ILLLIN		;ALTMODE ILLEGAL
05200		JRST ILLLIN		;ILLEGAL LINE, SKIP IT
05300		MOVEM B,STRING
05400		SETZ B,
05500		CAIE TTT,11
05600		JRST IMCF2
05700		PUSHJ P,DECIN
05800		JRST MCFEOB
05900		MOVE B,A
06000	IMCF2:	CAIE TTT,12
06100		JRST ILLLN1		;ILLEGAL FORMAT LINE
06200		MOVE A,MODLST
06300	IMCF3:	FETCH(T,A,MNAM)
06400		MOVE TT,STRING
06500		PUSHJ P,TXTMAT
06600		JRST IMCF4
06700		JRST IMCF5
06800		FETCH(T,A,MNUM)
06900		JUMPE T,IMCFOK
07000		PUTSTR[ASCIZ/COUNT FOR MODULE APPEARS MORE THAN ONCE:
07100	/]
07200		PUSH P,A
07300		FETCH(A,A,MNAM)
07400		PUSHJ P,STROUT
07500		POP P,A
07600		PUTBYT 11
07700		FETCH(T,A,MNUM)
07800		PUSHJ P,DECOUT
07900		PUTSTR[ASCIZ/ OLD	/]
08000		MOVE T,B
08100		PUSHJ P,DECOUT
08200		PUTSTR[ASCIZ/ NEW
08300	/]
08400	IMCFOK:	STORE(B,A,MNUM)
08500		MOVE B,STRING
08600		PUSHJ P,PUTFS
08700		JRST IMCF1
08800	
08900	IMCF4:	FETCH(A,A,MNXT)
09000		JUMPN A,IMCF3
09100	IMCF5:	PUTSTR[ASCIZ/MODULE NOT FOUND:
09200	/]
09300		MOVE A,STRING
09400		PUSHJ P,STROUT
09500		PUTSTR[ASCIZ/
09600	/]
09700		MOVE B,STRING
09800		PUSHJ P,PUTFS
09900		JRST IMCF1
10000	
10100	ILLLN1:	PUTSTR[ASCIZ/FORMAT ERROR IN LINE STARTING:
10200	/]
10300		MOVE A,STRING
10400		PUSHJ P,STROUT
10500		PUTSTR[ASCIZ/
10600	/]
10700		MOVE B,STRING
10800		PUSHJ P,PUTFS
10900	ILLLN2:	XCT GETCHR
11000		JRST MCFEOF
11100		CAIE TTT,12
11200		JRST ILLLN2
11300		JRST IMCF1
11400	
11500	ILLLIN:	CAIN TTT,12
11600		JRST IMCF1		;JUST SKIP BLANK LINES
11700		PUTSTR[ASCIZ/NULL MODULE NAME ON LINE:
11800		/]
11900	ILLLN3:	XCT GETCHR
12000		JRST [	PUTSTR[ASCIZ/
12100	/]
12200			JRST MCFEOF]
12300		CAIN TTT,12
12400		JRST [	PUTSTR[ASCIZ/
12500	/]
12600			JRST IMCF1]
12700		PUTBYT (TTT)
12800		JRST ILLLN3
12900	
13000	MCFEOB:	MOVE B,STRING
13100		PUSHJ P,PUTFS
13200	MCFEOF:	PUTSTR[ASCIZ/END OF FILE IN MID-LINE.
13300	/]
13400	IMCFE:	RELEASE DAT,
13500	NOMODS:	OUTSTR[ASCIZ/% SPARES? /]
13600		MOVE T,[PUSHJ P,TTYIN]
13700		MOVEM T,GETCHR
13800		PUSHJ P,DECIN
13900		JFCL
14000		CAIE TTT,12
14100		JRST [	PUSHJ P,IERR
14200			OUTSTR[ASCIZ/INPUT ERROR.
14300	/]
14400			JRST NOMODS]
14500		MOVEM A,FACTR1
     	00100	;		MASTER PARTS LIST - LISTING
00200	NOMODC:	MOVSI T,'MPL'		;MASTER PARTS LIST EXT
00300		MOVEI TT,0		;DATA MODE
00400		MOVSI TTT,'DSK'
00500		PUSHJ P,OUTSET
00600		POPJ P,
00700		PUSHJ P,FILLST
00800		 MHDRA
00900		MOVEI T,MPMMAR
01000		MOVEM T,MARGIN
01100		SETZM LINCNT
01200		MOVEI T,[ASCIZ/MODULE	COUNT/]
01300		MOVEM T,HEADER
01400		MOVE H,MODLST
01500	MODPN1:	SKIPL LINCNT
01600		PUSHJ P,MHDRA
01700		FETCH(A,H,MNAM)
01800		PUSHJ P,STROUT
01900		PUTBYT 11
02000		FETCH(T,H,MNUM)
02100		PUSHJ P,DECOUT
02200		CRLF
02300		FETCH(H,H,MNXT)
02400		JUMPN H,MODPN1
02500		MOVEI T,MPLMAR
02600		MOVEM T,MARGIN
02700		SETZM LINCNT
02800		SKIPN H,PARTLIST
02900		JRST MPART2
03000	MPART1:	FETCH(G,H,MDCN)
03100		SKIPE G
03200		PUSHJ P,MPRTDO
03300		FETCH(H,H,NXPL)
03400		JUMPN H,MPART1
03500	MPART2:	SKIPE G,NULPART
03600		PUSHJ P,MPRTDO
03700		JRST MPARTE
03800	
03900	MPRTDO:	;CLEAR SUBTOTAL COUNTS HERE
04000	MPRTD1:	FETCH(F,G,MXPT)
04100	MPRTD2:	FETCH(E,F,MCPT)
04200		SETZM LSTDIP
04300		SETZM NDIPS
04400		SETZM CONFLG
04500		TLZ TFLG
04600	MPRTD3:	FETCH(D,E,MODC)
04700		FETCH(T,D,MNUM)
04800		TLNE ASKHIM
04900		JUMPE T,MPRTD4
05000		TLOE TFLG
05100		JRST MPRTD5
05200		SKIPL LINCNT
05300		PUSHJ P,MHDR
05400		JUMPE H,MPRTE0
05500		FETCH(A,H,PLPT)
05600		FETCH(A,A,PRVS)
05700		PUSHJ P,STROUT
05800		JRST MPRTE1
05900	
06000	MPRTE0:	PUTSTR[ASCIZ\N/A\]
06100	MPRTE1:	MOVEI A,=16
06200		PUSHJ P,FILL
06300		FETCH(A,G,MDIP)
06400		JUMPE A,[PUTSTR[ASCIZ\N/A\]
06500			JRST MPRTE2]
06600		FETCH(A,A,DNAM)
06700		PUSHJ P,STROUT
06800	MPRTE2:	JUMPE H,MPRTE3
06900		FETCH(C,H,PLPT)
07000		JRST MPRTE4
07100	
07200	MPRTE5:	FETCH(T,C,PRBT)
07300		TRNE T,NULVAL
07400		JRST MPRTE4
07500		MOVE T,LWIDTH
07600		SUB T,LCOUNT
07700		CAIGE T,=16		;AT LEAST 2 TABS STOPS LEFT?
07800		CRLF			;NO, NEW LINE
07900		MOVEI A,=32
08000		CAML A,LCOUNT
08100		JRST [	PUSHJ P,FILL
08200			JRST MPRTE6]
08300		PUTSTR[ASCIZ/, /]
08400	MPRTE6:	FETCH(A,C,PRVS)
08500		PUSHJ P,STROUT
08600	MPRTE4:	FETCH(C,C,PRPP)
08700		JUMPN C,MPRTE5
08800		CRLF
08900	MPRTE3:	FETCH(C,F,MPRX)
09000		JUMPE C,MPRTF1
09100	MPRTF2:	MOVE T,LWIDTH
09200		SUB T,LCOUNT
09300		CAIGE T,=24
09400		CRLF
09500		MOVEI A,=32
09600		CAML A,LCOUNT
09700		JRST [	PUSHJ P,FILL
09800			JRST MPRTF3]
09900		PUTSTR[ASCIZ/, /]
10000	MPRTF3:	FETCH(A,C,TLFT)
10100		PUSHJ P,STROUT
10200		PUTBYT ":"
10300		FETCH(A,C,TRHT)
10400		PUSHJ P,STROUT
10500		FETCH(C,C,NXTT)
10600		JUMPN C,MPRTF2
10700	MPRTF1:	SKIPE LCOUNT
10800		CRLF
10900	MPRTD5:	HRRZS CONFLG		;HAVEN'T USED APPROX COUNT ON THIS MODULE YET
11000		PUTBYT 11
11100		FETCH(A,D,MNAM)
11200		PUSHJ P,STROUT
11300		PUTBYT 11
11400		FETCH(A,D,MNUM)
11500		SKIPE T,A
11600		PUSHJ P,DECOU5
11700		PUTBYT 11
11800		FETCH(T,E,MAPP)
11900		JUMPN T,[SETOM CONFLG
12000			JRST MPRTD6]
12100		FETCH(T,E,MREA)
12200	MPRTD6:	IMUL A,T
12300		ADDM T,LSTDIP
12400		ADDM A,NDIPS
12500		PUSHJ P,DECOU5
12600		SKIPGE CONFLG		;IS THIS APPROX NUMBER?
12700		PUTBYT "A"		;YES
12800		TLNN ASKHIM		;DO WE HAVE MODULE COUNT?
12900		JRST MPRTD7		;NO, SO NO TOTAL FOR MODULE TYPE
13000		PUTBYT 11
13100		MOVE T,A
13200		PUSHJ P,DECOU5
13300		SKIPGE CONFLG
13400		PUTBYT "A"
13500	MPRTD7:	CRLF
13600	MPRTD4:	FETCH(E,E,MCNX)
13700		JUMPN E,MPRTD3
13800		TLNE ASKHIM		;SKIP SUMMARY IF MODULE COUNTS ONLY
13900		SKIPN H			;SKIP ALSO IF NO PART NUMBER
14000		JRST MPRTD9
14100		MOVEI A,=24
14200		PUSHJ P,FILL
14300		MOVE T,LSTDIP
14400		PUSHJ P,DECOU5
14500		SKIPE CONFLG
14600		PUTBYT "A"
14700		SKIPN T,NDIPS
14800		JRST MPRTD8
14900		PUTBYT 11
15000		PUSHJ P,DECOU5
15100		SKIPE CONFLG
15200		PUTBYT "A"
15300		PUTBYT 11
15400		MOVE A,NDIPS
15500		IMUL A,FACTR1
15600		IDIVI A,=100
15700		CAIL B,=50
15800		ADDI A,1
15900		SKIPN A
16000		MOVEI A,1
16100		MOVE T,A
16200		PUSHJ P,DECOU5
16300		SKIPE CONFLG
16400		PUTBYT "A"
16500		PUTBYT 11
16600		ADD A,NDIPS
16700		MOVE T,A
16800		PUSHJ P,DECOU5
16900		SKIPE CONFLG
17000		PUTBYT "A"
17100	MPRTD8:	CRLF
17200	MPRTD9:	FETCH(F,F,MXNX)
17300		JUMPN F,MPRTD2
17400		FETCH(G,G,MDNX)
17500		JUMPN G,MPRTD1
17600	;SUBTOTALS HERE?
17700		POPJ P,
17800	
17900	MPARTE:	SKIPE B,MPLTIT
18000		PUSHJ P,PUTFS
18100		SETZM MPLTIT
18200		RELEASE LST,
18300		POPJ P,
18400	
18500	MHDR0:	TLZN NOFF
18600		PUTSTR[BYTE(7)15,14]
18700		PUSH P,A
18800		MOVN TTT,PAGLEN
18900		ADD TTT,MARGIN
19000		MOVEM TTT,LINCNT
19100		SETZM TCOUNT
19200		SKIPE A,MPLTIT
19300		PUSHJ P,STROUT
19400		PUSHJ P,PNTFDT
19500		CRLF
19600		POP P,A
19700		POPJ P,
19800	
19900	MHDRA:	PUSHJ P,MHDR0
20000		PUTSTR @HEADER
20100		PUTSTR[ASCIZ/
20200	/]
20300		POPJ P,
20400	
20500	
20600	MHDR:	PUSHJ P,MHDR0
20700		PUTSTR [ASCIZ/PART NUMBER	DIPTYPE		DESCRIPTION
20800		MODULE	# OF	# OF	# OF	/]
20900		MOVE T,FACTR1
21000		PUSHJ P,DECOUT
21100		PUTSTR[ASCIZ\ %	TOTAL
21200		 NAME	MODULES	PARTS/	PARTS	SPARE	# OF
21300				MODULE	* # OF	PARTS	PARTS
21400					MODULES
21500	
21600	\]
21700		POPJ P,
     	00100	SUBTTL	'TTY'		PIN/SIGNAL/BODY FOR ONE LOC
00200	TTYUSE:	MOVE L,DEFLST
00300		PUSHJ P,LSTGET
00400		POPJ P,
00500		OUTSTR[ASCIZ/DIP(/]
00600		OUTSTR @WBDCUE
00700		OUTSTR[ASCIZ/) OR CONNECTOR(/]
00800		OUTSTR @CBCUE
00900		OUTSTR[ASCIZ/) LOCATION?/]
01000		PUSHJ P,GETLOC
01100		JRST ERRET
01200		JFCL
01300		CAIE TTT,12
01400		JRST ERRET
01500		MOVEM TT,LETTER
01600		MOVEM TT,SAVET
01700		MOVEI C,RADDR(W,WBDY,NXTB)
01800		PUSHJ P,FN2BOD			;FIND LOC
01900		JRST [	OUTSTR[ASCIZ/NO SUCH LOC!
02000	/]
02100			POPJ P,]
02200		MOVE H,C		;SAVE THE ONE WE FOUND
02300		MOVE T,[PUSHJ P,TTYOUT]
02400		MOVEM T,PUTCHR
02500		SETOM TTYFLG
02600		SETZM LCOUNT
02700		FETCH(T,H,BBIT)
02800		TRNE T,CBODY
02900		JRST TTYCUS		;YES
03000		OUTSTR[ASCIZ/LOC	DIPTYPE	BODY	POS	FILE
03100		PIN #	TYPE	HI	LOW	USE	SIGNAL NAME
03200	
03300	/]
03400	TTYUS2:	PUSHJ P,USEP3		;PRINT LINE FOR THIS BODY
03500		FETCH(H,H,NXTB)
03600		JUMPE H,CPOPJ		;DONE IF END
03700		FETCH(T,H,BLOC)
03800		CAMN T,SAVET		;STILL SAME?
03900		JRST TTYUS2
04000		POPJ P,
04100	
04200	TTYCUS:	OUTSTR[ASCIZ/CONNECTORS
04300	PIN	FILE	POS	TYPES	SIGNAL NAME
04400	
04500	/]
04600		MOVNI T,10000		;SUPPRESS NEW PAGE
04700		MOVEM T,LINCNT
04800		JRST USEC3A		;PRINT CONNECTOR LINES
     	00100	SUBTTL	'WLU'		BODY/PIN/SIGNAL
00200	USEPIN:	SETZM ALLNAM
00300		SETZM ALLCRD
00400	ALLUSE:	MOVE L,DEFLST
00500		SKIPE T,ALLCRD
00600		JRST [	MOVEM T,SLICEL
00700			JRST GALCD1]
00800		PUSHJ P,LSTGET
00900		POPJ P,
01000	GALCD1:	FETCH(H,W,WBDY)
01100		JUMPE H,[OUTSTR[ASCIZ/NO BODIES AT ALL!
01200	/]
01300			POPJ P,]	;SKIP IF NO BODIES
01400		MOVSI T,'WLU'		;WIRE LIST VERIFY FILE EXTENSION
01500		MOVEI TT,0		;DATA MODE
01600		MOVSI TTT,'DSK'
01700		PUSHJ P,ALLSET
01800		POPJ P,
01900		PUSHJ P,FILLST
02000		 PUTHDR
02100		MOVEI T,[ASCIZ/LOC	DIPTYPE	BODY	POS	FILE
02200		PIN #	TYPE	HI	LOW	USE	SIGNAL NAME/]
02300		MOVEM T,HEADER
02400		MOVEI T,WUPMAR
02500		MOVEM T,MARGIN
02600		SETZM LINCNT
02700		SETOM SAVET
02800	USEP2:	FETCH(T,H,BBIT)
02900		TRNE T,CBODY		;CON?
03000		JRST USEC1		;YES, DO IT DIFFERENTLY
03100		FETCH(T,H,BLOC)
03200		JUMPE T,USENLC
03300		CAMN T,SAVET
03400		JRST USEP3X
03500	USENLC:	MOVEM T,SAVET
03600		SKIPL LINCNT		;NEED A HEADER?
03700		PUSHJ P,PUTHDR		;WE ALWAYS GET A HEADER HERE
03800	USEP3X:	PUSHJ P,USEP3		;POOT OUT THIS BODY
03900		FETCH(H,H,NXTB)
04000		JUMPN H,USEP2
04100	USE0:	RELEASE LST,
04200		POPJ P,
04300	
04400	USEP3:	FETCH(A,H,BLOC)
04500		FETCH(T,H,BBIT)
04600		PUSHJ P,WLOCOUT		;OUT OUT DAMN LOC
04700		PUTBYT 11
04800		FETCH(A,H,DIPT)
04900		JUMPE A,[PUTSTR[ASCIZ/NONE/]
05000			JRST USEP4]
05100		FETCH(A,A,DNAM)
05200		PUSHJ P,STROUT		;DIPTYPE
05300	USEP4:	PUTBYT 11
05400		SKIPN ADDR(H,BNAM)
05500		PUTSTR[ASCIZ/NONE/]
05600		PUTSTR ADDR(H,BNAM)
05700		PUTBYT 11
05800		FETCH(A,H,BBIT)
05900		PUSHJ P,BPPNT
06000		PUTBYT 11
06100		FETCH(A,H,FILB)
06200		PUTSIX ADDR(A,FILN)	;FILENAME
06300		FETCH(F,H,BPIN)
06400		JUMPN F,USEP8A
06500		PUTSTR[ASCIZ/	NO PINS/]
06600		CRLF
06700		POPJ P,			;JUST GET ANOTHER BODY
06800	
06900	USEP8A:	CRLF
07000	USEP8:	PUTSTR[ASCIZ/	/]
07100		FETCH(T,F,PINN)
07200		SETZM TCOUNT
07300		PUSHJ P,DECOUT		;PIN #
07400		FETCH(T,F,PBIT)
07500		TRNN T,PIDPIN
07600		JRST USEP80
07700		MOVE TT,TCOUNT
07800		SUBI TT,7
07900		PUTBYT " "
08000		AOJL TT,.-1
08100		PUTBYT "*"
08200		JRST USEP81
08300	
08400	USEP80:	PUTBYT 11
08500	USEP81:	FETCH(G,F,PTYP)
08600		JUMPN G,USEP82
08700		PUTSTR[ASCIZ/UN			/]
08800		JRST USEP83
08900	
09000	USEP82:	PUSHJ P,PNTTYP
09100		PUTBYT 11
09200		PUSHJ P,PNTLOD		;THERE'S A TAB IN HERE
09300		PUTBYT 11
09400		FETCH(A,G,DUSE)
09500		PUTSIX A
09600	USEP83:	FETCH(B,F,HPNT)
09700	USEP9:	PUTBYT 11
09800		PUTSIG ADDR(B,SPNT)
09900		CRLF
10000		FETCH(B,B,NNAM)
10100		JUMPE B,USEP10
10200		PUTSTR[ASCIZ/					/]
10300		JRST USEP9
10400	
10500	USEP10:	FETCH(F,F,NXBP)		;NEXT PIN OF BODY
10600		JUMPN F,USEP8
10700		POPJ P,
10800	
10900	USEC1:	SETZM LINCNT
11000		MOVEI T,WUCMAR
11100		MOVEM T,MARGIN
11200		MOVEI T,[ASCIZ/CONNECTORS
11300	PIN	FILE	POS TYPES	SIGNAL NAME/]
11400		MOVEM T,HEADER
11500		SETZM SAVET
11600	USEC2:	FETCH(T,H,BLOC)
11700		CAMN T,SAVET		;NEW LOC?
11800		JRST USEC3X
11900		MOVEM T,SAVET
12000		PUSHJ P,PUTHDR		;YES, NEW PAGE
12100	USEC3X:	PUSHJ P,USEC3A
12200		FETCH(H,H,NXTB)
12300		JUMPN H,USEC2
12400		JRST USE0
12500	
12600	USEC3A:	FETCH(G,H,BPIN)
12700	USEC3:	SKIPL LINCNT
12800		PUSHJ P,PUTHDR		;NEW HEADER
12900		MOVE A,SAVET
13000		FETCH(T,G,PINN)
13100		HRLI A,(T)
13200		FETCH(T,H,BBIT)
13300		PUSHJ P,LOCPNW
13400		PUTBYT 11
13500		FETCH(A,G,FILP)
13600		SETZM TCOUNT
13700		PUTSIX ADDR(A,FILN)	;FILENAME
13800		PUTBYT 11
13900		FETCH(A,G,PBIT)
14000		PUSHJ P,CNPNT
14100		MOVEI A,=20
14200		PUSHJ P,SPFILL		;FILL WITH SPACES TO TYPE BITS
14300		FETCH(B,G,HPNT)
14400		FETCH(A,B,TBIT)		;WIRE TYPE BITS
14500		PUSHJ P,PNTYPE
14600		FETCH(T,G,PBIT)			;GET PIN BITS
14700		TRNN T,TRMBTS			;ANY TERMINATOR RULE?
14800		JRST USEC4			;NO
14900		PUTBYT "("
15000		LDB T,[POINT TRMBSZ,T,TRMBPS+=18]
15100		PUSHJ P,DECOUT
15200		PUTBYT ")"
15300	USEC4:	MOVEI A,=32
15400		PUSHJ P,FILL		;FILL WITH TABS
15500		PUTSIG ADDR(B,SPNT)
15600		CRLF
15700		FETCH(B,B,NNAM)
15800		JUMPE B,USEC5
15900		JRST USEC4
16000	
16100	USEC5:	FETCH(G,G,NXBP)		;NEXT PIN
16200		JUMPN G,USEC3
16300		POPJ P,
     	00100	SUBTTL	'UML'		UTILIZATION FILE - DIPS
00200	UMLINE:	BYTE(7)UBAR,UBAR,UBAR,UBAR,UBAR,UBAR,UBAR,UBAR,UBAR,UBAR,UBAR
00300	;YES VIRGINIA, THERE ARE 11 OF THEM
00400	
00500	PNTUML:
00600	;	SKIPN ISWW		;MAPRC AND FRIENDS SHOULD BE MOVED TO LOCS
00700	;	JRST NXWW
00800		MOVE T,[PUSHJ P,TTYIN]
00900		MOVEM T,GETCHR
01000		MOVE L,DEFLST
01100		PUSHJ P,LSTGET
01200		JRST [	OUTSTR[ASCIZ/YOU GET A BLANK UML!
01300	/]
01400			SETZ W,
01500			JRST .+1]
01600		MOVSI T,'UML'		;WIRE LIST UML FILE EXTENSION
01700		MOVEI TT,0		;DATA MODE
01800		MOVSI TTT,'DSK'
01900		PUSHJ P,OUTSET
02000		POPJ P,
02100	NOITS,<	JUMPE W,PNTUM1	>
02200	ITS,<
02300		JUMPE W,[	SKIPE XGP	;BETTER NOT CALL FILLST OR CONFUSION WILL REIGN
02400				PUSHJ P,XGPSTR
02500				JRST PNTUM1]
02600	>;ITS
02700		PUSHJ P,FILLST
02800		 PUTHDR
02900	PNTUM1:	MOVEI T,[ASCIZ/			*******	DIP MAP *******/]
03000		MOVEM T,HEADER
03100		MOVEI T,UMLMAR
03200		MOVEM T,MARGIN
03300		SETZM LINCNT
03400		MOVE T,NROWS		;NUMBER OF ROWS FROM CARD DEF
03500		MOVEM T,MROW
03600		MOVE T,NCOLS
03700		MOVEM T,MCOL
03800	UML3:	MOVS G,MROW
03900		TLC G,-1
04000		AOBJN G,.+1		;A HAS AOBJN POINTER NOW
04100		SKIPLE TT,NCLPRG
04200		CAILE TT,=8
04300		MOVEI TT,=8
04400		MOVE T,MCOL
04500		SUB T,TT
04600		JUMPGE T,UML3A
04700		ADD TT,T
04800		SETZ T,
04900	UML3A:	ADDI T,1
05000		MOVEM T,MCOL
05100		SUBI TT,1
05200		MOVEM TT,COLLOP		;THIS IS NUMBER TO DO -1
05300	UML4:	SKIPL LINCNT
05400		PUSHJ P,PUTHDR
05500		PUSHJ P,UMBORD		;DO THE TOP LINE OF DIP BOXES
05600		CRLF
05700		PUSHJ P,UMLDIP		;DO DIP NAMES
05800		CRLF
05900		PUSHJ P,UMLBLK		;BLANK LINE
06000		CRLF
06100		PUSHJ P,UMSECS		;SECTION USAGE
06200		PUTBYT 15		;CARRIAGE RETURN ONLY
06300		PUSHJ P,UMBORD
06400		CRLF
06500		PUSHJ P,UMLOCS		;UML DIP LOCATIONS
06600		CRLF
06700		MOVE T,G
06800		AOBJP G,UML16
06900		CRLF
07000		JRST UML4
07100	
07200	UML16:	SETZM LINCNT		;FORCE NEW PAGE
07300		SOSLE MCOL
07400		JRST UML3
07500		JRST UMLEDG		;DO THE EDGE CONNECTORS NOW
     	00100	;HERE TO PRINT DIP TYPES FOR A ROW OF UML
00200	
00300	UMLDIP:	MOVE E,COLLOP		;ITERATION COUNT
00400	UML7:	PUTSTR[ASCIZ/| /]
00500		SETZM TCOUNT
00600		PUSHJ P,LOCFND
00700		JRST UML8
00800		FETCH(A,H,DIPT)		;DIP POINTER
00900		JUMPE A,[PUTSTR[ASCIZ/?NONE?/]
01000			JRST UML8]
01100		FETCH(A,A,DNAM)		;DIP NAME
01200		PUSHJ P,PRINT7
01300	UML8:	MOVE A,TCOUNT
01400		SUBI A,8
01500		PUTBYT " "
01600		AOJL A,.-1
01700		PUTBYT "|"
01800		SOJL E,CPOPJ		;THATS ALL FOR DIP NAMES
01900		PUTSTR SPACING
02000		JRST UML7
02100	
02200	;HERE TO PRINT DIP LOCS FOR A ROW OF UML
02300	
02400	UMLOCS:	MOVE E,COLLOP
02500	UML10:	PUTSTR[ASCIZ/  /]
02600		PUSHJ P,MAPRCU
02700		JRST [	PUTSTR [ASCIZ/         /]
02800			JRST UML10A]
02900		SETZM TCOUNT
03000		MOVE A,T
03100		PUSHJ P,LOCOUT
03200		MOVE T,TCOUNT
03300		SUBI T,=8
03400		PUTBYT 40
03500		AOJL T,.-1
03600		PUTBYT " "
03700	UML10A:	SOJL E,CPOPJ			;THATS ALL FOR UML DIP LOCS
03800		PUTSTR SPACING
03900		JRST UML10
04000	
04100	UMBORD:	MOVE E,COLLOP		;DO THE UML TOP OR BOTTOM LINE
04200	UMBOR0:	PUTSTR UMLINE
04300		SOJL E,CPOPJ
04400		PUTSTR SPACING
04500		JRST UMBOR0
04600	
04700	;UMLBLK:	MOVE E,COLLOP		;PUT IN BLANK LINE
04800	;UMBLK0:	PUTSTR [ASCIZ /|         |/]
04900	;	SOJL E,CPOPJ
05000	;	PUTSTR SPACING
05100	;	JRST UMBLK0
05200	
05300	UMLBLK:	MOVE E,COLLOP		;ITERATION COUNT
05400	UMBLK0:	PUTBYT "|"
05500		SETZM TCOUNT
05600		PUSHJ P,LOCFND
05700		SKIPA B,["|"]		;NO DIP IN THIS SLOT, CAUSE SOME BLACKNESS
05800		SKIPA B,[" "]		;DIP IN THIS SLOT, WHITE
05900		JRST UMBLK1
06000		FETCH(A,H,DIPT)		;DIP POINTER
06100		SKIPN A
06200		MOVEI B,"|"		;DRAW ATTENTION TO THIS SLOT, DIP TYPE NOT DEFINED
06300	UMBLK1:	MOVE A,TCOUNT
06400		SUBI A,9
06500		PUTBYT (B)
06600		AOJL A,.-1
06700		PUTBYT "|"
06800		SOJL E,CPOPJ		;THATS ALL FOR DIP NAMES
06900		PUTSTR SPACING
07000		JRST UMBLK0
     	00100	;HERE FOR A ROW OF SECTION USAGE IN UML
00200	
00300	UMSECS:	MOVE E,COLLOP
00400	UML12:	PUTBYT "|"
00500		PUSHJ P,LOCFND				;FIND LOC
00600		JRST [	PUTSTR[ASCIZ/         /]	;NO LOC NO NOTHING
00700			JRST UML20]
00800		FETCH(A,H,DIPT)			;DIP TYPE
00900		JUMPE A,[PUTSTR[ASCIZ/     /]	;IF NO DIP TYPE, INDICATE 1 SECTION
01000			JRST UML20]
01100		SETZM FACTR1			;INIT BIGGEST SECT #
01200		FETCH(A,A,DPIN)			;FIRST PIN OF DIP DEF
01300	UML21:	FETCH(T,A,DPBIT)		;PIN TYPE BITS
01400		TRNN T,INLD!OUTLD!TERM
01500		JRST UML22
01600		FETCH(T,A,SCTB)			;SECTION BITS
01700		MOVS T,T
01800		JFFO T,.+2
01900		JRST UML22
02000		CAMLE TT,FACTR1
02100		MOVEM TT,FACTR1
02200	UML22:	FETCH(A,A,DPNXT)
02300		JUMPN A,UML21
02400		SETZM FACTR2			;INIT SECT USE BITS
02500	UML26:	MOVEI A,RADDR(H,BPIN,NXBP)	;NOW CALC SECTION USAGE
02600		JRST UML23
02700	
02800	UML24:	FETCH(TTT,A,PTYP)
02900		JUMPE TTT,UML23
03000		FETCH(T,TTT,DPBIT)		;PIN TYPE BITS
03100		TRNN T,INLD!OUTLD!TERM
03200		JRST UML23
03300		FETCH(T,TTT,SCTB)		;SECTION BITS
03400		MOVS T,T
03500		JFFO T,.+1
03600		MOVE TT,SCTTAB(TT)		;PICKUP CORRESPONDING BIT
03700		IORM TT,FACTR2			;MARK BIT FOR SECTION
03800	UML23:	FETCH(A,A,NXBP)
03900		JUMPN A,UML24
04000		FETCH(H,H,NXTB)			;NEXT BODY
04100		FETCH(T,H,BLOC)
04200		CAMN T,PINLOC			;STILL IN SAME DIP?
04300		JRST UML26			;YES, LOOP BACK
04400		MOVEI A,8
04500		CAMGE A,FACTR1
04600		MOVEM A,FACTR1
04700		SUB A,FACTR1
04800		CAIA
04900		PUTBYT " "
05000		SOJGE A,.-1
05100		MOVSI A,400000
05200	UML25:	TDNN A,FACTR2
05300		JRST [	PUTBYT "o"
05400			JRST .+2]
05500		PUTBYT ""
05600		LSH A,-1
05700		SOSL FACTR1
05800		JRST UML25
05900	UML20:	PUTBYT "|"
06000		SOJL E,CPOPJ		;THAT ALL FOR SECTION USAGE
06100		PUTSTR SPACING
06200		JRST UML12
     	00100	;		UTILIZATION FILE - PADDLES
00200	UMLEDG:	SETZM UMLEHT		;UML EDGE HEIGHT, HACK TO FIT MORE THAT ONE PER PAGE
00300		SETOM UMLPGF		;MAKE THE FIRST PAGE HAPPEN
00400		MOVEI T,[ASCIZ/		******* EDGE CONNECTIONS *******/]
00500		MOVEM T,HEADER
00600		MOVN G,NPADS
00700		HRLZ G,G
00800	UMLC0:	MOVEM G,MROW
00900		HLLZ G,G
01000		CAMG G,[-4,,0]		;IF MORE THAN 4 TO GO
01100		MOVSI G,-4		;ONLY DO 4 NOW
01200		HRR G,MROW
01300		MOVEM G,MCOL
01400	UMLC1:	PUSHJ P,LOCFNC
01500		TDZA H,H		;MAKE A 0
01600		FETCH(H,H,BPIN)		;PIN LIST
01700		MOVEM H,PADDLE(G)
01800		AOBJN G,UMLC1
01900		AOSN UMLPGF		;UML PAGE FLAG
02000		PUSHJ P,PUTHDR
02100		MOVE T,LINCNT
02200		SKIPN UMLEHT		;DO WE WANT TO KNOW THE # LINES IN THE HEADER?
02300		MOVEM T,UMLEHT		;YES, NEGATIVE MEANS WE ARE DOING FIRST GROUP
02400		MOVE G,MCOL
02500	UMLL1:	PUTSTR[ASCIZ/             /]
02600		MOVEI T,1(G)
02700		SETZB TT,TTT		;NO PIN SIDE PLEASE
02800		PUSHJ P,MAPPAD
02900		MOVE A,T
03000		PUSHJ P,PADPRT
03100		PUTSTR[ASCIZ/             /]
03200		AOBJN G,UMLL1
03300		CRLF
03400		MOVE F,MCOL
03500		PUSHJ P,UMLCP
03600		MOVE G,MROW
03700		ADD G,[4,,4]		;ADVANCE BY 4
03800		SKIPL T,UMLEHT		;SKIP IF THIS IS FIRST GROUP
03900		JRST UMLL2		;   NOT FIRST, DECIDE IF MORE WILL FIT ON THE PAGE
04000		SUB T,LINCNT
04100		SUBI T,1		;ONE BLANK LINE BETWEEN GROUPS
04200		MOVNM T,UMLEHT
04300		MOVNS T
04400	UMLL2:	ADD T,LINCNT		;WILL NEXT GROUP OVERFLOW PAGE?
04500		JUMPG T,[	SETOM UMLPGF	;    NO, CAUSE A CALL TO PUTHDR
04600				JRST UMLL3]
04700		CRLF			;PUT IN BLANK LINE BETWEEN GROUPS
04800	UMLL3:	JUMPL G,UMLC0		;ANY MORE?
04900		RELEASE LST,
05000		POPJ P,
05100	
05200	UMLCP:	MOVEM F,COLLOP
05300		MOVE G,PADLET
05400	UMLC2:	HLRE A,COLLOP
05500		IMULI A,=29
05600		PUTBYT UBAR
05700		AOJLE A,.-1
05800		MOVE E,PADPIN
05900		PUSHJ P,UMLCS
06000		AOBJN E,.-1
06100		PUTBYT 15
06200		AOBJN G,UMLC2
06300		HLRE A,COLLOP
06400		IMULI A,=29
06500		PUTBYT UBAR
06600		AOJLE A,.-1
06700		PUTSTR[ASCIZ/
06800	/]
06900		POPJ P,
07000	
07100	UMLCS:	PUTSTR[ASCIZ/
07200	|/]
07300		MOVE F,COLLOP
07400	UMLC3:	SETZM TCOUNT
07500		SETZ T,
07600		MOVEI TT,(G)
07700		MOVEI TTT,(E)
07800		PUSHJ P,MAPPAD
07900		MOVE A,T
08000		PUSHJ P,PRCNPN
08100		MOVE T,A
08200		PUSHJ P,CPNSEP		;GET THE PIN #
08300		MOVE T,TT		;    AND PUT IT INTO T
08400		PUTBYT 40
08500		MOVEI A,40
08600		HRLM A,(P)
08700		SKIPN TT,PADDLE(F)
08800		JRST UMLC6
08900	UMLC4:	FETCH(TTT,TT,PINN)
09000		CAML TTT,T
09100		JRST UMLC5
09200		FETCH(TT,TT,NXBP)	;NEXT PIN ON CONNECTOR
09300		MOVEM TT,PADDLE(F)
09400		JUMPN TT,UMLC4
09500		JRST UMLC6
09600	
09700	UMLC5:	CAME TTT,T
09800		JRST UMLC6
09900		FETCH(A,TT,HPNT)
10000		FETCH(T,A,TBIT)
10100		MOVEI TT,"@"
10200		TRNE T,TERM
10300		HRLM TT,(P)
10400		MOVEI TT,"#"
10500		TRNE T,OUTLD
10600		HRLM TT,(P)
10700		MOVEI A,ADDR(A,SPNT)
10800		PUSHJ P,PRNTCS
10900	UMLC6:	MOVEI T,1(F)
11000		MOVEI TT,(G)
11100		MOVEI TTT,(E)
11200		PUSHJ P,MAPPAD
11300		MOVE A,T
11400		PUSHJ P,VGCON		;CHECK FOR PWR OR GND
11500		SETZ TT,		;IF ERROR, JUST ASSUME NOT EITHER
11600		MOVEI A," "
11700		TLNE TT,PWR
11800		MOVEI A,"+"
11900		TLNE TT,GND
12000		MOVEI A,"#"
12100		SKIPN ISWW
12200		MOVEI A," "
12300		MOVE T,TCOUNT
12400		SUBI T,=26		;LEAVE 2 SPACES
12500		SKIPGE T
12600		PUTBYT @A
12700		AOJL T,.-1
12800		PUTBYT " "
12900		HLRZ A,(P)
13000		PUTBYT @A
13100		PUTBYT "|"
13200		AOBJN F,UMLC3
13300		POPJ P,
     	00100	;		UTILIZATION FILE - SUBRS
00200	PRNTCS:	ADD A,[POINT 7,0]
00300	NOITS,<	MOVEI T,=25	>
00400	ITS,<	MOVEI T,=23	>	;MAYBE HELLIWELL WON'T CARE
00500	PRNTCT:	ILDB TTT,A
00600		JUMPE TTT,CPOPJ
00700		XCT PUTCHR
00800		SOJG T,PRNTCT
00900		POPJ P,
01000	
01100	MAPRCU:	HRLZ T,G
01200		HRR T,E
01300		ADD T,MCOL
01400		PUSHJ P,MAPRC
01500		POPJ P,
01600		JRST CPOPJ1
01700	
01800	LOCFNC:	MOVEI T,1(G)
01900		SETZB TT,TTT
02000		PUSHJ P,MAPPAD
02100		PUSHJ P,CPNSEP		;MAKE IT INTO A CONNECTOR BODY
02200		JRST LOCFN2
02300	
02400	;FIND FIRST BODY IN LOC
02500	;RETURN POINTER TO BODY IN H
02600	LOCFND:	PUSHJ P,MAPRCU
02700		POPJ P,
02800	LOCFN2:	MOVEM T,PINLOC		;LOC TO FIND
02900		JUMPE W,CPOPJ
03000		MOVEI H,RADDR(W,WBDY,NXTB)
03100		JRST LOCFNA
03200	
03300	LOCFN1:	FETCH(TT,H,BLOC)	;LOC
03400		CAMN TT,PINLOC		;IS THIS IT?
03500		JRST CPOPJ1		;NO
03600	LOCFNA:	FETCH(H,H,NXTB)
03700		JUMPN H,LOCFN1
03800		POPJ P,			;NO MORE!
03900	
04000	SPACING:ASCIZ/   /		;3 SPACES FOR NOW
04100	
04200	UMLBRS:	PUSHJ P,PNTBRW
04300		PUTSTR[ASCIZ/
04400	
04500	/]
04600		POPJ P,
04700	
04800	PRINT4:	JUMPE A,CPOPJ
04900		MOVEI T,4
05000		JRST PRINTN
05100	
05200	PRINT5:	JUMPE A,CPOPJ
05300		SKIPA T,[5]
05400	PRINT7:	MOVEI T,7
05500	PRINTN:	ADD A,[POINT 7,1]
05600	PRINT8:	TLNE A,760000
05700		JRST PRINT9
05800		HRR A,-1(A)
05900		TRNN A,-1
06000		POPJ P,
06100	PRINT9:	ILDB TTT,A
06200		JUMPE TTT,CPOPJ
06300		XCT PUTCHR
06400		SOJG T,PRINT8
06500		POPJ P,
     	00100	SUBTTL	'TST'		BINARY WIRE LIST TO SIMULATOR
00200	;THIS OUTPUT IS COURRENTLY INTENDED FOR RUBIN'S SIMULATOR
00300	
00400	TSTWRT:	MOVE L,DEFLST
00500		PUSHJ P,LSTGET
00600		POPJ P,
00700		MOVSI T,'TST'		;CARD TESTER FILE EXTENSION
00800		MOVEI TT,10		;FULL WORDS
00900		MOVSI TTT,'DSK'
01000		PUSHJ P,OUTSET		;SETUP OUTPUT STUFF
01100		POPJ P,			;LET HIM OUT HERE
01200		MOVEI A,RADDR(W,WBDY,NXTB)
01300		JRST TSTB1
01400	
01500	TSTB2:	FETCH(T,A,DIPT)		;DIP TYPE
01600		JUMPE T,[PUSH P,A
01700			FETCH(T,A,BBIT)
01800			TRNE T,CBODY
01900			JRST ISCON
02000			SKIPN ADDR(A,BNAM)
02100			OUTSTR[ASCIZ/UNNAMED BODY/]
02200			OUTSTR ADDR(A,BNAM)
02300			OUTSTR[ASCIZ/ HAS NO DIP TYPE!
02400	/]
02500		ISCON:	POP P,A
02600			JRST TSTB1]
02700		FETCH(T,T,DNAM)		;DIP NAME
02800		PUSHJ P,WSTR
02900		MOVE TTT,A
03000		PUSHJ P,WORDOUT
03100		FETCH(TTT,A,BLOC)
03200		PUSHJ P,WORDOUT
03300	TSTB1:	FETCH(A,A,NXTB)
03400		JUMPN A,TSTB2
03500		PUSHJ P,WRTZERO		;TERMINATE NAMES
03600		MOVEI A,RADDR(W,WIRES,ALPH)
03700		JRST TSTP1
03800	
03900	TSTP2:	FETCH(B,A,WBIT)
04000		TRNE B,NAM2ND
04100		JRST TSTP1		;ONLY REAL WIRES
04200		SETZ C,
04300		TRNE B,SPWR
04400		AOSA C			;CODE = 3
04500		TRNE B,SHI
04600		AOSA C			;CODE = 2
04700		TRNE B,SGND
04800		AOJA C,TSTTX4		;CODE = 1
04900	;	TRNE B,WSINGL		;DON'T SEND NON-SPECIAL SINGLE PIN RUNS
05000	;	JRST TSTP1
05100	TSTTX4:	MOVE B,A		;START WITH THIS ONE
05200	TSTTX0:	BINSIG ADDR(B,SPNT)	;PUT OUT SIGNAL NAME
05300		FETCH(B,B,NNAM)		;NEXT NAME BLOCK
05400		JUMPN B,TSTTX0
05500		MOVE TTT,C
05600		PUSHJ P,WORDOUT		;SEND CODE FOR STRING
05700		FETCH(B,A,WPIN)		;GET FIRST PIN
05800		JUMPE B,TSTPZ		;ANY PINS AT ALL?
05900	TSTP3:	FETCH(TT,B,PBIT)
06000		TRNE TT,DUP
06100		JRST TSTP5
06200		FETCH(TTT,B,PINN)	;PIN #
06300		FETCH(T,B,PBDY)
06400		FETCH(TT,T,BBIT)
06500		TRNE TT,CBODY
06600		JRST [	FETCH(T,T,BLOC)
06700			MOVE TT,TTT
06800			PUSHJ P,CPNMER
06900			MOVE TTT,T
07000			JRST TSTP4]
07100		HRL TTT,T			;USE BODY CORE LOC AS UNIQUE #
07200	TSTP4:	PUSHJ P,WORDOUT
07300	TSTP5:	FETCH(B,B,NXTP)
07400		JUMPN B,TSTP3
07500	TSTPZ:	PUSHJ P,WRTZERO
07600	TSTP1:	FETCH(A,A,ALPH)
07700		JUMPN A,TSTP2
07800		PUSHJ P,WRTZERO
07900		RELEASE LST,
08000		POPJ P,
08100	
08200	WSTR1:	MOVE TTT,1(T)
08300		PUSHJ P,WORDOUT
08400		TRNN TTT,376		;END?
08500		POPJ P,			;YES
08600		HRRZ T,(T)
08700	WSTR:	JUMPN T,WSTR1
08800	WRTZERO:TDZA TTT,TTT
08900	WRTMARK:MOVEI TTT,400000
09000	WORDOUT:SOSG LSTHD+2
09100		OUT LST,
09200		CAIA
09300		OUTSTR[ASCIZ/OUTPUT ERROR!
09400	/]
09500		IDPB TTT,LSTHD+1
09600		POPJ P,
     	00100	SUBTTL	'TP8'		OUTPUT TO TAPR-8 WIRE WRAP SYSTEM
00200	TAPR8,<
00300	TP8WRT:	MOVE L,DEFLST
00400		PUSHJ P,LSTGET
00500		POPJ P,
00600		MOVSI T,'TP8'		;TAPR-8 EXTENSION
00700		MOVEI TT,0		;TEXT FILE
00800		MOVSI TTT,'DSK'
00900		PUSHJ P,OUTSET		;SETUP OUTPUT STUFF
01000		POPJ P,			;LET HIM OUT HERE
01100		SETZM CDSKPC
01200		SETZM NDIPS
01300		SETZM NBODS
01400		MOVEI H,RADDR(W,WIRES,ALPH)
01500		JRST TP8R1
01600	
01700	TP8R2:	FETCH(T,H,WBIT)
01800		TRNE T,NAM2ND!WNULL!WSINGL!SNC
01900		JRST TP8R1
02000		MOVEI G,RADDR(H,WPIN,NXTP)
02100		TRZ FLAG		;FLAG NO PINS OUT YET
02200		SETZ F,			;HOLDS FIRST PIN
02300		JRST TP8R3
02400	
02500	TP8R4:	FETCH(T,G,PBIT)
02600		TRNE T,DUP
02700		JRST TP8R3		;SKIP DUPLICATES
02800		FETCH(B,G,PBDY)
02900		FETCH(T,B,BLOC)
03000		JUMPE T,[AOS NBODS
03100			JRST TP8R3]
03200		FETCH(T,B,BBIT)
03300		TRNE T,CBODY
03400		JRST TP8R5
03500		FETCH(T,B,DIPT)
03600		JUMPE T,[AOS NDIPS	;COUNT PIN WITHOUT DIPTYPE
03700			JRST TP8R5]
03800		FETCH(T,T,DPNN)
03900		CAIE T,=14
04000		CAIN T,=16
04100		JRST TP8R5
04200		CAIE T,=24
04300		AOS CDSKPC
04400	TP8R5:	JUMPE F,[MOVE F,G
04500			JRST TP8R3]
04600		TROE FLAG
04700		JRST TP8R6
04800	;;;;;;
04900		PUSH P,TT		;SAVE REG  MAY NO NEED TO
05000		PUSH P,T
05100		HRRI TTT,-=22		;ALLOWD 22 CHARACTERS IN SIGNAL NAME (PERIOD NOT ALLOWED)
05200		MOVEI T,ADDR(H,SPNT)	;GET SIGNAL POINTER
05300		HRLI T,(<POINT 7,,-1>)	;SET UP FOR ILDB
05400	TP81LOOP:ILDB TT,T		;GET NEXT CHARACTER
05500		CAIN TT,"."		;NO "." ALLOWED
05600		JRST [OUTSTR [ASCIZ /YOU HAVE A "." IN ONE OF YOUR SIGNAL NAMES (YOU MUST TAKE IT OUT).
05700	/]
05800		JRST TP8JP0]
05900		AOJE TTT,[OUTSTR [ASCIZ /YOU HAVE MORE THAN 22 CHARACTERS IN A SIGNAL NAME (YOU FIX IT).
06000	/]
06100		JRST TP8JP0]
06200		JUMPN TT,TP81LO		;GET ANOTHER CHARACTER
06300	TP8JP0:	POP P,T
06400		POP P,TT
06500		SETOM PCOUNT		;INITIALIZE PIN COUNT
06600	;;;;;;
06700	;	CRLF
06800		EXCH F,G
06900		PUSHJ P,TP8PIN
07000		EXCH F,G
07100	TP8R6:	PUSHJ P,TP8PIN
07200	TP8R3:	FETCH(G,G,NXTP)
07300		JUMPN G,TP8R4
07400		TRNE FLAG		;ANY PINS PUT OUT?
07500		CRLF
07600	TP8R1:	FETCH(H,H,ALPH)
07700		JUMPN H,TP8R2
07800		CRLF
07900		RELEASE LST,
08000		SKIPN T,NDIPS
08100		JRST TP8E1
08200		PUSHJ P,TTYDEC
08300		OUTSTR[ASCIZ/ PINS OUTPUT WITH NO DIP TYPE.
08400	/]
08500	TP8E1:	SKIPN T,NBODS
08600		JRST TP8E2
08700		PUSHJ P,TTYDEC
08800		OUTSTR[ASCIZ/ PINS SKIPPED DUE TO NO BODY LOC.
08900	/]
09000	TP8E2:	SKIPN T,CDSKPC
09100		POPJ P,
09200		PUSHJ P,TTYDEC
09300		OUTSTR[ASCIZ/ PINS OUTPUT WHICH WEREN'T 14, 16, OR 24 PIN DIPS.
09400	/]
09500		POPJ P,
09600	
09700	TP8PIN:	FETCH(A,G,PINN)
09800		FETCH(B,G,PBDY)
09900		FETCH(T,B,BLOC)
10000		HRL A,T
10100		FETCH(TT,B,BBIT)
10200		FETCH(T,B,DIPT)
10300		SKIPE T
10400		FETCH(T,T,DPNN)
10500	;;;;;;
10600		HRRZI TTT,1		;REGISTER FOR PINS THIS LINE OF OUTPUT
10700		ADDB TTT,PCOUNT		;INCROMENT PIN COUNT
10800		CAIE TTT,=64+1		;NO MORE THAN 64 PINS PER RUN
10900		SKIPA
11000		OUTSTR [ASCIZ /YOU HAVE MORE THAN 64 PINS IN ONE RUN. (YOU MUST FIX THIS WITH A EDITOR YOURSELF.)
11100	/]
11200		TRNN TTT,7		;ALLOWED 10 PINS PER LINE, BUT 8 IS EASIER TO COUNT
11250		JRST [	CRLF
11275			PUTSTR ADDR(H,SPNT)	;OUTPUT THE SIGNAL NAME
11287			PUTBYT "."		;A "." ENDS SIGNAL NAME FIELD ; STARTS PIN FIELD
11293			JRST TP8JP1 ]
11294		PUTBYT ","		;"," SEPARATE THE PINS
11296	;;;;;;
11300	TP8JP1:	PUSHJ P,TP8LOC
11400	;	CRLF
11500		POPJ P,
11600	>;TAPR8
     	00100	SUBTTL	'SMP'		BACK PANEL OUTPUT TO DEC SYSTEM
00200	;DEC WIRE LIST OUTPUT
00300	OSIMPLE:OUTSTR[ASCIZ/TYPE OFFSET FOR SLOTS (N OR -N)? /]
00400		MOVE TTT,[PUSHJ P,TTYIN]
00500		MOVEM TTT,GETCHR
00600		PUSHJ P,SDECIN
00700		JFCL
00800		CAIE TTT,12
00900		JRST ERRET
01000		MOVEM A,OFFSET		;SAVE OFFSET
01100		TRZ DOGIN!DOPWR!CONLY
01200		JRST OSIMP1
01300	
01400	BSIMPLE:TRZ DOGIN!CONLY
01500		TRO DOPWR
01600		JRST BSIMP1
01700	
01800	PSIMPLE:TRO DOPWR!CONLY
01900		TRZ DOGIN
02000		JRST BSIMP1
02100	
02200	ASIMPLE:TROA DOGIN
02300	WIRWRT:	TRZ DOGIN
02400		TRZ DOPWR!CONLY
02500	BSIMP1:	SETZM OFFSET		;NO OFFSET NORMALLY
02600	OSIMP1:	MOVE T,[PUSHJ P,TTYIN]
02700		MOVEM T,GETCHR
02800		MOVE L,DEFLST
02900		FETCH(W,L,BLST)
03000		JUMPE W,XBAK		;ANY BACK PANEL STUFF?
03100		MOVSI T,'SMP'		;IT'S SIMPLE!
03200		MOVEI TT,0		;MODE 0
03300		MOVSI TTT,'DSK'
03400		PUSHJ P,OUTSET
03500		POPJ P,
03600		SKIPN ISWW
03700		JRST SMPVG5
03800		MOVEI H,RADDR(W,WBDY,NXTB)	;GO DOWN BODY LIST (CARDS)
03900		JRST SMPVG1
04000	
04100	SMPVG2:	FETCH(G,H,BLOC)			;GET CARD LOC
04200		MOVEM G,SLICEL			;SAVE CARD HERE FOR PRINT OUT
04300		MOVN G,NPADS
04400		MOVS G,G
04500		HRRI G,1			;START WITH PADDLE 1
04600	SMPVG3:	MOVE F,PADLET
04700	SMPVG4:	MOVE E,PADPIN
04800	SMPVG6:	MOVEI T,(G)
04900		MOVEI TT,(F)
05000		MOVEI TTT,(E)
05100		PUSHJ P,MAPPAD
05200		MOVE A,T
05300		PUSHJ P,SMPVG			;SIDE 2 ALSO
05400		AOBJN E,SMPVG6
05500		AOBJN F,SMPVG4
05600		AOBJN G,SMPVG3
05700	SMPVG1:	FETCH(H,H,NXTB)
05800		JUMPN H,SMPVG2
05900	SMPVG5:	MOVEI B,RADDR(W,WBDY,NXTB)	;GO DOWN BODY LIST
06000		SETZM FACTR1			;CLEAR COUNT OF NX PINS SKIPPED
06100		SETZM FACTR2			;****** TEMPRORARY FIX ******* CLEAR COUNT OF POWER PINS SKIPPED
06200	NODEC,<	SETOM CDSKPC>
06300		JRST WIRW1
06400	
06500	WIRW2:	AOS T,CDSKPC
06600		CAILE T,7
06700		JRST [	OUTSTR[ASCIZ/
06800	/]
06900			SETZM CDSKPC
07000			JRST WIRPN1]
07100		SKIPE CDSKPC
07200		OUTCHR[11]
07300	WIRPN1:	FETCH(A,B,BLOC)
07400		PUSH P,PUTCHR
07500		MOVE T,[OUTCHR TTT]
07600		MOVEM T,PUTCHR
07700		PUSHJ P,SLTOUT
07800		POP P,PUTCHR
07900		SETZM GINPIN			;START INVENTED PINS OVER
08000		MOVEI D,RADDR(B,BPIN,NXBP)	;NOW DO EACH PIN OF SLOT
08100		PUSH P,B
08200		JRST WIRW3
08300	
08400	WIRW4:	FETCH(E,D,PINN)		;PADDLE PIN SIDE
08500		FETCH(B,D,HPNT)
08600		FETCH(F,B,WBIT)
08700		FETCH(TTT,D,PBIT)
08800		TRNE TTT,DUP
08900		JRST WIRW3
09000		TRNN F,SPWR		;IS IT A POWER PIN
09100		JRST CKCNLY
09200		TRNN DOPWR		;DON'T SEND POWER PINS UNLESS SPECIAL MODE
09300		JRST SKPVLT
09400		JRST SNDPIN
09500	
09600	CKCNLY:	TRNE CONLY
09700		JRST WIRW3		;SKIP REGULAR PINS FOR PSIMPLE
09800	SNDPIN:	FETCH(TTT,D,PBDY)
09900		FETCH(TTT,TTT,BBIT)
10000		TRNE TTT,BWILD		;SKIP "U" PINS
10100		JRST CHKGIN
10200	GOTGIN:	SETZM LOUTL
10300		SETZM LOUTH
10400		TRNE F,SGND		;AVOID SETTING LOADING FOR GROUND
10500		JRST PIKSMP		;PICK GROUND SIGNAL NAME TO PRINT
10600		FETCH(TTT,D,CBIT)
10700		JUMPE TTT,NOLOAD	;REAL ONE?
10800		FETCH(T,D,HOLD)
10900		MOVM T,T
11000		MOVNM T,LOUTH
11100		FETCH(T,D,LOLD)
11200		MOVM T,T
11300		MOVNM T,LOUTL
11400		FETCH(T,D,HILD)
11500		MOVM T,T
11600		ADDM T,LOUTH
11700		FETCH(T,D,LILD)
11800		MOVM T,T
11900		ADDM T,LOUTL
12000	NOLOAD:	TRNE F,SHI		;HI RUN?
12100		JRST [	FETCH(T,B,TBIT)
12200			TRNE T,ECL
12300			JRST .+1
12400			FETCH(T,B,WRN)		;GET WIRE RULE NUMBER
12500			CAIE T,=19
12600			CAIN T,=20
12700			JRST .+1		;NO +3 IF ECL
12800			CAIN T,=21
12900			JRST .+1
13000			PUTSTR[ASCIZ/+3			  /]
13100			JRST WASHIR]
13200		TRNN F,SNC
13300		JRST PIKSMP
13400		PUTSTR[ASCIZ/NC /]
13500		FETCH(C,D,PBDY)
13600		FETCH(C,C,BLOC)
13700		MOVE A,E
13800		HRL A,C
13900		MOVE T,OFFSET
14000		PUSHJ P,BPNPIN	;MAKE NC RUN UNIQUE BY ADDING PIN NAME
14100		MOVEI A,=24
14200		PUSHJ P,FILL
14300		PUTSTR[ASCIZ/  /];NO ASSERTION POLARITY
14400		JRST WASHIR
14500	
14600	PIKSMP:	PUSHJ P,SMPSIG		;WIRE HEAD IN B, PICK RIGHT SIGNAL
14700	WASHIR:	PUTBYT " "
14800		FETCH(C,D,PBDY)
14900		FETCH(C,C,BLOC)
15000		MOVE A,E
15100		HRL A,C
15200		MOVE T,OFFSET
15300		PUSHJ P,BPNPIN
15400		MOVEI A,=40
15500		PUSHJ P,FILL
15600		FETCH(T,D,FILP)
15700		FETCH(A,T,FPRF)		;GET PREFIX STRING
15800		PUSHJ P,PRINT4		;ONLY 4 CHARS ALLOWED
15900		MOVEI A,=48
16000		PUSHJ P,FILL
16100		FETCH(A,D,FILP)
16200		FETCH(A,A,FMOD)
16300		PUSHJ P,PRINT5		;MODULE NAME (ONLY 5 CHARS)
16400		FETCH(A,D,PBIT)
16500		ANDI A,QBITS
16600		JUMPE A,NOQBIT
16700		MOVE A,QN2L(A)
16800		JRST GOTQ
16900	
17000	NOQBIT:	FETCH(T,D,CBIT)
17100		TRNE T,TERM
17200		JRST [	MOVEI A,"T"
17300			JRST GOTQ]
17400		TRNN T,OUTLD		;OUTPUTS?
17500		JRST NSMPO
17600		FETCH(A,B,TBIT)
17700		TRNE A,ECL
17800		JRST NOTSHI
17900		FETCH(A,B,WRN)
18000		CAIE A,=19
18100		CAIN A,=20
18200		JRST NOTSHI		;NOT +3 IF ECL
18300		CAIN A,=21
18400		JRST NOTSHI
18500		TRNE F,SHI
18600		SKIPA A,["+"]
18700	NOTSHI:
18800	NODEC,<	MOVEI A,"S"	>
18900	DEC,<	MOVEI A,"O"	>
19000	GOTQ:	PUTBYT " "
19100		PUTBYT @A
19200		CAIN A,"C"		;CABLE?
19300		TLOA TFLG		;YES
19400	NSMPO:	TLZ TFLG		;NO
19500		MOVEI A,=56
19600		PUSHJ P,FILL
19700		MOVE T,LOUTH
19800		PUSHJ P,DECOUT
19900		PUTBYT ","
20000		MOVE T,LOUTL
20100		IDIVI T,=10		;DIFFERENT UNITS
20200		PUSHJ P,DECOUT
20300		FETCH(TT,B,TBIT)	;WIRE TYPE BITS
20400		SETZ TTT,		;ZERO WIRE RULE NUMBER
20500		FETCH(T,B,WBIT)
20600		TRNN T,SPWR!SGND!SHI!SNC;DON'T CHECK FOR CLK ON THESE RUNS
20700		TRNN TT,CLK		;CLOCK LINE?
20800		TLNE TFLG		;IS IT CABLE?
20900		MOVEI TTT,5		;YES, FORCE TWISTED PAIR
21000		TRNN TT,ECL		;ECL ON WIRE?
21100		JRST NSMPO1
21200		MOVEI TTT,=19		;WIRE RULE 19
21300		FETCH(TT,D,CBIT)	;GET BITS FOR THIS PIN
21400		TRNE TT,FFOUT		;UNLESS FF OUTPUT
21500		MOVEI TTT,=21		;THEN ITS 21
21600	NSMPO1:	FETCH(T,B,WRN)
21700		IDIVI T,=100
21800		SKIPN TT		;IS THERE A NUMBER PART FROM DRAWING?
21900		MOVE TT,TTT		;NO, USE POSSIBLE GENERATED ONE
22000		FETCH(TTT,B,WBIT)	;GET WIRE TYPE BITS
22100		TRNE TTT,SNC		;IS IT AN NC (NO CONNECTION)
22200		TRO T,4			;YES, TURN ON WIRE TYPE 400 TO SIMPLE FILE
22300		IMULI T,=100
22400		ADD T,TT
22500		JUMPE T,NOWRN		;DON'T PRINT 0
22600		PUSH P,T
22700		PUTSTR[ASCIZ/ */]
22800		POP P,T
22900		PUSHJ P,DECOUT
23000	NOWRN:	CRLF
23100	WIRW3:	FETCH(D,D,NXBP)
23200		JUMPN D,WIRW4
23300		POP P,B
23400	WIRW1:	FETCH(B,B,NXTB)		;DO EACH SLOT
23500		JUMPN B,WIRW2
23600		OUTSTR[ASCIZ/
23700	/]
23800		RELEASE LST,
23900		SKIPN T,FACTR2
24000		JRST CKNX
24100		PUSHJ P,TTYDEC
24200		OUTSTR[ASCIZ/ POWER PINS SKIPPED.
24300	/]
24400	CKNX:	SKIPN T,FACTR1
24500		POPJ P,
24600		PUSHJ P,TTYDEC
24700		OUTSTR[ASCIZ/ WILD PINS SKIPPED.
24800	/]
24900		POPJ P,
25000	
25100	SKPNX:	AOS FACTR1
25200		JRST WIRW3
25300	
25400	SKPVLT:	AOS FACTR2
25500		JRST WIRW3
25600	
25700	CHKGIN:	SKIPL GINPIN			;DID WE RUN OUT OF NAMES?
25800		TRNN DOGIN			;NO, ARE WE INVENTING THEM?
25900		JRST SKPNX			;NO, SKIP PIN
26000	NEWGIN:	MOVE A,GINPIN
26100		FETCH(T,D,PBDY)
26200		FETCH(T,T,BLOC)
26300		HRL A,T				;NEEDS CARD LOC FOR EXTENT
26400		PUSHJ P,CONGIN			;INVENT NEXT NAME
26500		JRST [	SETOM GINPIN
26600			OUTSTR[ASCIZ/
26700	RAN OUT OF REAL PIN NAMES TO REPLACE "U" PIN NAMES.
26800	/]
26900			JRST SKPNX]
27000		HRRZM A,GINPIN
27100		MOVE A,(P)			;GET POINTER TO CARD BODY HEADER
27200		FETCH(A,A,BPIN)			;START LOOKING AT PINS
27300	NEWGN1:	FETCH(T,A,PINN)
27400		CAMN T,GINPIN			;THIS PIN IN USE ALREADY?
27500		JRST NEWGIN			;YES, INVENT ANOTHER
27600		FETCH(A,A,NXBP)			;LOOK AT NEXT
27700		CAMG T,GINPIN			;HAVE WE PASSED THIS PIN'S PLACE?
27800		JUMPN A,NEWGN1			;NO, KEEP LOOKING
27900	NEWGN2:	MOVE E,GINPIN			;USE NEW NAME
28000		JRST GOTGIN
28100	
28200	SMPSIG:	SETZ C,
28300		MOVE A,B
28400	SMPSG1:	FETCH(T,A,WBIT)
28500		TRNN T,GLB2
28600		JRST SMPSG2
28700		JUMPE C,SMPSG3
28800		OUTSTR[ASCIZ/
28900	MULTIPLE SIGNALS REQUESTED TO GO TO SIMPLE FILE:
29000	/]
29100		OUTSIG ADDR(C,SPNT)
29200		OUTSTR[ASCIZ/
29300	/]
29400		OUTSIG ADDR(A,SPNT)
29500		OUTSTR[ASCIZ/
29600	/]
29700	SMPSG3:	MOVE C,A
29800	SMPSG2:	FETCH(A,A,NNAM)
29900		JUMPN A,SMPSG1
30000		SKIPN A,C
30100		MOVE A,B
30200		MOVEI T,ADDR(A,SPNT)
30300		MOVE TT,[=22,,=24]	;22 CHARS IN NAME, USING 24 COLUMNS
30400		TRNE F,SGND		;GROUND IS SPECIAL
30500		JRST GNDPUT
30600		JRST SMPPUT		;PLUS ASSERTION/POLARITY
30700	
30800	DIG3:	SKIPGE T
30900		PUTBYT "-"
31000		MOVM T,T
31100		MOVEI TT,3
31200		MOVEM TT,NDIG
31300		JRST NDECOUT
31400	
31500	SMPVG:	PUSH P,A
31600		PUSHJ P,PINBIT		;MAP IT
31700		TLNN TT,GND		;GROUND PIN?
31800		JRST SMPVGE		;NO
31900		PUTSTR[ASCIZ/			G  /]
32000		MOVE A,(P)
32100		HRL A,SLICEL
32200		MOVE T,OFFSET
32300		PUSHJ P,BPNPIN
32400		MOVEI A,=40
32500		PUSHJ P,FILL
32600		PUTSTR[ASCIZ/	 G	
32700	/]
32800	SMPVGE:	POP P,A
32900		POPJ P,
     	00100	SUBTTL	'WDR'	'BAC'	WIRE LIST BACK TO PC PROG
00200	;WRITE ROUTER WIRE LIST FILE FOR INPUT TO PC PROG
00300	BAKOUT:	TROA ISBACK
00400	PUTOUT:	TRZ ISBACK
00500		MOVE T,[PUSHJ P,TTYIN]
00600		MOVEM T,GETCHR
00700		MOVE L,DEFLST
00800		TRNE ISBACK
00900		JRST [	FETCH(W,L,WIRL)		;ALL LISTS FOR BACKOUT
01000			JUMPE W,[OUTSTR[ASCIZ/NO CARDS AT ALL!
01100	/]
01200				POPJ P,]
01300			MOVSI T,'BAC'
01400			JRST SETWNM]
01500		PUSHJ P,LSTGET
01600		POPJ P,
01700		MOVSI T,'WDR'		;EXTENSION FOR ROUTER WIRE LIST
01800	SETWNM:	MOVEI TT,10		;FULL WORDS
01900		MOVSI TTT,'DSK'
02000		PUSHJ P,OUTSET		;SETUP OUTPUT STUFF
02100		POPJ P,			;LET HIM OUT HERE
02200		TRNE ISBACK
02300		JRST BAKOU0
02400		MOVEI TTT,WDRVER	;FIRST IDENTIFY US
02500		PUSHJ P,WORDOUT
02600		PUSHJ P,WLOUT
02700		PUSHJ P,WRTZERO		;MARK END OF IT ALL
02800		PUSHJ P,WRTZERO		;ONE MORE FOR GOOD MEASURE
02900		RELEASE LST,
03000		POPJ P,
03100	
03200	BAKOU0:	MOVEI TTT,BACVER
03300		PUSHJ P,WORDOUT
03400	BAKFO1:	FETCH(TTT,W,FCRD)
03500		PUSHJ P,WORDOUT
03600		FETCH(T,W,FCRD)		;CARD LOC
03700		JUMPE T,[OUTSTR[ASCIZ/NONE/]
03800			JRST BAKOUZ]
03900		PUSHJ P,BRS1W
04000	BAKOUZ:	MOVEI H,RADDR(W,FILS,FNXT)
04100		JRST BAKFO2
04200	
04300	BAKFO3:
04400	FOR I IN(FILN,FPPN,FDAT)
04500	<	FETCH(TTT,H,I)
04600		PUSHJ P,WORDOUT
04700	>
04800	FOR I IN(FREV,FMOD,FVAR,FPRF,AUTHOR,TIT1,TIT2,FPROJ,FPAGE,FOF)
04900	<	FETCH(T,H,I)
05000		PUSHJ P,WSTR
05100	>
05200		FETCH(T,H,FBRD)
05300		PUSHJ P,WSTR		;WRITE BOARD TYPE
05400	BAKFO2:	FETCH(H,H,FNXT)
05500		JUMPN H,BAKFO3
05600		PUSHJ P,WRTZERO		;END NAME BLOCKS
05700		PUSHJ P,WLOUT
05800		PUSHJ P,WRTZERO		;END OF RUNS
05900		PUSHJ P,DPRINT		;COUNT PARTS AND OUTPUT COUNTS
06000		SKIPN T,CDSKPC
06100		JRST ALLDOK
06200		OUTSTR[ASCIZ/, /]
06300		PUSHJ P,TTYDEC
06400		OUTSTR[ASCIZ/ BODIES WITH NO LOCS./]
06500	ALLDOK:	OUTSTR[ASCIZ/
06600	/]
06700		FETCH(W,W,NXTWL)
06800		JUMPN W,BAKFO1
06900		MOVSI TTT,400000
07000		PUSHJ P,WORDOUT
07100		RELEASE LST,
07200		POPJ P,
07300	
07400	WLOUT:	MOVEI H,RADDR(W,WIRES,ALPH)
07500		JRST WLOUT1
07600	
07700	WLOUT2:	FETCH(TT,H,WBIT)
07800		TRNE TT,NAM2ND
07900		JRST WLOUT1		;SKIP FAKE WIRES
08000		TRNN ISBACK
08100		JRST WLOUTB
08200		FETCH(TT,H,TBIT)
08300		TRNN TT,ANYCON		;GET TO BACK PANEL?
08400		JRST WLOUT1		;SKIP RUNS WHICH DON'T MAKE IT TO BACK PANEL
08500		TLO DOLC
08600		TLZ BAKGAT
08700		MOVE G,H
08800		SETZB A,CNTTAB
08900		MOVE T,[CNTTAB,,CNTTAB+1]
09000		BLT T,LODTAB+LODLEN-1
09100		PUSHJ P,GATHER		;ACCUMULATE LOADING
09200		PUSHJ P,LODMER		;CALC PROPER LOADING
09300		MOVE TTT,A		;WRITE WBIT, TBIT
09400		PUSHJ P,WORDOUT
09500		MOVE TTT,LINL
09600		HRL TTT,LINH
09700		PUSHJ P,WORDOUT		;INPUT LOADING
09800		MOVE TTT,LOUTL
09900		HRL TTT,LOUTH
10000		PUSHJ P,WORDOUT		;OUTPUT LOADING
10100		TLZ TFLG		;NONE OUT YET
10200		MOVE G,H
10300		FETCH(T,H,WBIT)
10400		TRNE T,GENSIG		;IS THIS EDGE RUN UNNAMED (I.E. GENERATED NAME)
10500		JRST WLOUTZ		;YES, WRITE NO SIGNAL NAME SO IT
10600					;WILL BE REGENERATED LATER WITH CARD LOC IN IT
10700	WLOUTG:	FETCH(T,G,WBIT)
10800		TRNN T,GLB1		;GLOBAL NAME?
10900		JRST WLOUTH
11000		TLO TFLG
11100		PUSHJ P,BACSTR
11200	WLOUTH:	FETCH(G,G,NNAM)
11300		JUMPN G,WLOUTG
11400		TLNE TFLG
11500		JRST WLOUTZ			;GLOBALS OUT!
11600		JRST WLOUTC			;NO GLOBALS, OUT ALL.
11700	
11800	WLOUTB:	FETCH(G,H,WPIN)
11900		JUMPE G,WLOUT1			;FLUSH NULL WIRES!
12000	WLOUTC:	MOVE G,H
12100	WLOUT3:	PUSHJ P,BACSTR
12200		FETCH(G,G,NNAM)
12300		JUMPN G,WLOUT3
12400	WLOUTZ:	PUSHJ P,WRTZERO
12500		FETCH(G,H,WPIN)		;FIRST PIN
12600	WLOUT5:	FETCH(A,G,PBDY)		;BODY POINTER
12700		FETCH(B,A,BLOC)		;BODY LOC
12800		FETCH(T,A,BBIT)
12900		TRNN ISBACK
13000		JRST WLOUTW
13100		TRNN T,CBODY
13200		JRST WLOUT6
13300		MOVE T,B
13400		FETCH(TT,G,PINN)
13500		PUSHJ P,CPNMER
13600		FETCH(TTT,G,PID)	;CPIN ID
13700		HRL TTT,T
13800		PUSHJ P,WORDOUT		;PPS,,CPID
13900		FETCH(TT,G,PBIT)
14000		LDB TTT,[POINT CXPOSL,TT,35-CXPOSB]
14100		LDB TT,[POINT CYPOSL,TT,35-CYPOSB]
14200		DPB TT,[POINT 9,TTT,35-9]
14300		ADDI TTT,1001
14400		PUSHJ P,WORDOUT
14500		FETCH(TT,G,FILP)
14600		FETCH(TTT,TT,FILN)
14700		PUSHJ P,WORDOUT		;FILENAME
14800		FETCH(TTT,TT,FPPN)
14900		PUSHJ P,WORDOUT		;PPN
15000		JRST WLOUT6
15100	
15200	WLOUTW:	TRNN T,CBODY		;CONNECTOR?
15300		JRST WLOUTV		;NO
15400		MOVE T,B
15500		FETCH(TT,G,PINN)
15600		PUSHJ P,CPNMER
15700		FETCH(TTT,W,FCRD)
15800		HRL TTT,T
15900		PUSHJ P,WORDOUT	;WRITE IT
16000		JRST WLOUT6
16100	
16200	WLOUTV:	FETCH(TTT,A,BID)
16300		PUSHJ P,WORDOUT		;WRITE BODY ID
16400		FETCH(TT,G,PTYP)	;TYPE POINTER
16500		FETCH(TTT,G,PINN)	;PIN #
16600		FETCH(T,A,BBIT)		;BODY BITS
16700		TRNN T,R1416		;IF IN OTHER FLAVOR SOCKET....
16800		JRST [	TRNE T,L1416
16900			ADDI TTT,1
17000			JRST WLOUTX]
17100		CAILE TTT,7
17200		ADDI TTT,2
17300	WLOUTX:	JUMPE TT,.+3		;WAS THERE A TYPE POINTER?
17400		FETCH(TT,TT,DPBIT)	;TYPE BITS
17500		HRL TTT,TT
17600		PUSHJ P,WORDOUT		;WRITE IT
17700		MOVE TTT,B
17800		PUSHJ P,WORDOUT		;NLNLN
17900	WLOUT6:	FETCH(G,G,NXTP)
18000		JUMPN G,WLOUT5
18100	WLOUT4:	PUSHJ P,WRTZERO		;MARK END OF WIRE
18200	WLOUT1:	FETCH(H,H,ALPH)		;FOLLOW LIST
18300		JUMPN H,WLOUT2
18400		POPJ P,
18500	
18600	BACSTR:	FETCH(T,G,WBIT)
18700		TRNN T,GLB2		;NEED UP ARROW IN BAC FILE?
18800		JRST [	BINSIG ADDR(G,SPNT)	;NO
18900			POPJ P,]
19000		BINSGU ADDR(G,SPNT)
19100		POPJ P,
     	00100	;OUTPUT PART COUNTS TO BAC FILE
00200	DPRINT:	PUSHJ P,CLEARB
00300		SETZM CDSKPC
00400		MOVEI H,RADDR(W,WBDY,NXTB)
00500		JRST DPRNT1
00600	
00700	DPRNT2:	FETCH(T,H,BBIT)
00800		TRNN T,CBODY		;DON'T DO CONNECTORS
00900		TROE T,BTMP1
01000		JRST DPRNT1
01100		MOVEM H,NBODS
01200		STORE(T,H,BBIT)
01300		FETCH(T,H,DIPT)
01400		MOVEM T,LSTDIP
01500		TRZ FLAG		;FLAG DIPTYPE NOT OUT YET
01600	DPRNT3:	MOVEM H,RBODS
01700		FETCH(T,H,PRTN)
01800		MOVEM T,LSTPART
01900		FETCH(T,H,PRPX)
02000		MOVEM T,LPRPX
02100		SETZM TMPCN1
02200		SETZM TMPCN2
02300		SETZM LSLOT
02400		TLZ TFLG		;FLAG NO 0 LOCS YET
02500	DPRNT4:	PUSHJ P,ACOUNT
02600	DPRNT7:	FETCH(H,H,NXTB)
02700		JUMPE H,DPRNT6
02800		FETCH(T,H,BBIT)
02900		TRNN T,CBODY
03000		TROE T,BTMP1
03100		JRST DPRNT7
03200		FETCH(TT,H,DIPT)
03300		CAME TT,LSTDIP
03400		JRST DPRNT7
03500		FETCH(TT,H,PRTN)
03600		CAME TT,LSTPART
03700		JRST DPRNT7
03800		FETCH(TT,H,PRPX)
03900		CAME TT,LPRPX
04000		JRST DPRNT7
04100		STORE(T,H,BBIT)
04200		JRST DPRNT4
04300	
04400	DPRNT6:	PUSHJ P,ACNT7		;FIX SECTION COUNT TO APPROX DIP COUNT
04500		TROE FLAG
04600		JRST DPRNP1
04700		SKIPN T,LSTDIP
04800		JRST [	MOVEI T,[0
04900				ASCIZ\N/A\]
05000			JRST .+2]
05100		FETCH(T,T,DNAM)
05200		PUSHJ P,WSTR		;WRITE STRING
05300	DPRNP1:	TLNN TFLG
05400		TDZA TTT,TTT
05500		MOVE TTT,TMPCN2
05600		PUSHJ P,WORDOUT
05700		MOVE TTT,TMPCN1
05800		PUSHJ P,WORDOUT
05900		SKIPN H,LSTPART
06000		JRST DPRNP3
06100	;NOTE, HERE WE WRITE ACTUAL PART NUMBER SO ERROR WILL OCCUR IF CHANGED
06200	DPRNP2:	FETCH(T,H,PRNB)
06300		FETCH(T,T,PRNS)
06400		PUSHJ P,WSTR
06500		FETCH(T,H,PRVS)
06600		PUSHJ P,WSTR
06700		FETCH(H,H,PRPP)
06800		JUMPN H,DPRNP2
06900	DPRNP3:	SKIPN H,LPRPX
07000		JRST DPRNP5
07100	DPRNP4:	FETCH(T,H,TLFT)
07200		PUSHJ P,WSTR
07300		FETCH(T,H,TRHT)
07400		PUSHJ P,WSTR
07500		FETCH(H,H,NXTT)
07600		JUMPN H,DPRNP4
07700	DPRNP5:	PUSHJ P,WRTZERO
07800		MOVE H,RBODS
07900	DPRNT8:	FETCH(H,H,NXTB)
08000		JUMPE H,DPRNT5
08100		FETCH(T,H,BBIT)
08200		TRNN T,CBODY
08300		TROE T,BTMP1
08400		JRST DPRNT8
08500		FETCH(TT,H,DIPT)
08600		CAME TT,LSTDIP
08700		JRST DPRNT8
08800		STORE(T,H,BBIT)
08900		JRST DPRNT3
09000	
09100	DPRNT5:	MOVNI TTT,1
09200		TRNE FLAG
09300		PUSHJ P,WORDOUT		;MARK END OF DIPTYPE
09400		MOVE H,NBODS
09500	DPRNT1:	FETCH(H,H,NXTB)
09600		JUMPN H,DPRNT2
09700		JRST WRTZERO
09800	
09900	ACOUNT:	FETCH(T,H,BLOC)
10000		JUMPE T,[TLO TFLG	;FLAG NO LOC FOR SOME BODIES
10100			AOS CDSKPC	;AND COUNT EACH ONE
10200			JRST ACNT1]
10300		CAME T,LSLOT
10400		AOS TMPCN1		;COUNT EACH LOC ONCE
10500		MOVEM T,LSLOT
10600	ACNT1:	SETZB F,FACTR1		;ACCUMULATE COUNT AND SECT BITS HERE
10700		MOVEI G,RADDR(H,BPIN,NXBP)
10800		JRST ACNT5
10900	
11000	ACNT6:	FETCH(TT,G,PTYP)	;TYPE POINTER
11100		JUMPE TT,ACNT5
11200		FETCH(TTT,TT,DPBIT)	;BITS
11300		TRNN TTT,INLD!OUTLD!TERM	;ONLY INPUTS OR OUTPUTS
11400		JRST ACNT5
11500		FETCH(TT,TT,SCTB)	;SECTION BITS
11600		MOVS TT,TT		;TO LEFT HALF
11700		JFFO TT,.+2		;(1 SEC/DIP WORKS RIGHT)
11800		JRST ACNT5
11900		MOVE TTT,SCTTAB(TTT)	;GET THE BIT
12000		TDOE TTT,FACTR1		;TURN ON NEW BIT AND TEST
12100		JRST ACNT5		;ALREADY ON, DON'T COUNT AGAIN
12200		MOVEM TTT,FACTR1
12300		ADDI F,1		;INC COUNT
12400	ACNT5:	FETCH(G,G,NXBP)
12500		JUMPN G,ACNT6
12600		ADDM F,TMPCN2
12700		POPJ P,
12800	
12900	ACNT7:	SKIPE A,TMPCN2
13000		SKIPN H,LSTDIP
13100		POPJ P,
13200		PUSHJ P,SECCAL		;CALC SEC/DIP (RETURNS IN F)
13300		ADDI A,(F)
13400		IDIVI A,1(F)		;CALC DIPS
13500		MOVEM A,TMPCN2
13600		POPJ P,
     	00100	SUBTTL	'WSS'	'WCS'	REFERENCE LISTINGS
00200	SIGCOM:	TROA CONLY
00300	DOREF:	TRZ CONLY
00400		TRZ ISBACK
00500		MOVE T,[PUSHJ P,TTYIN]
00600		MOVEM T,GETCHR
00700		MOVE L,DEFLST
00800		FETCH(E,L,WIRL)
00900		JUMPE E,[NCRDS:OUTSTR[ASCIZ/NO CARDS, YOU DUMMY!
01000	/]
01100			POPJ P,]
01200		TRNE CONLY
01300		JRST [CRDS1:FETCH(T,E,NXTWL)
01400			JUMPE T,[OUTSTR[ASCIZ/HOW MANY INTERCONNECTIONS DO YOU EXPECT BETWEEN ONE CARD?
01500	/]
01600				POPJ P,]
01700			MOVSI T,'WCS'	;CONNECTOR NEEDED LISTING
01800			JRST .+2]
01900		MOVSI T,'WSS'		;REFERENCE LISTING
02000		MOVEI TT,0		;DATA MODE 0
02100		MOVSI TTT,'DSK'
02200		PUSHJ P,OUTSET
02300		POPJ P,
02400		MOVEI T,WSSMAR
02500		MOVEM T,MARGIN
02600		SETZM REFLST
02700		HRROS REFLST
02800	DOREF1:	FETCH(F,E,HASHTB)	;GENLAST
02900		FETCH(F,F,ALPH)		;FIRST REAL NAME (NOTE WE ASSUME FIRST NAME IN LIST HAS SIG1 ON)
03000		JUMPE F,DOREF0
03100		GETFS(G,TBLK)
03200		STORE(F,G,TRHT)		;STORE SIGNAL NAME BLOCK POINTER HERE
03300		FETCH(T,E,FCRD)		;CARD LOC
03400		STORE(T,G,TLFT)
03500		PUSHJ P,SORTIN
03600		JFCL
03700		JFCL
03800	DOREF0:	FETCH(E,E,NXTWL)	;NEXT CARD
03900		JUMPN E,DOREF1		;SORT THEM ALL IN
04000	DOREF2:	HRRZ H,REFLST		;FIRST NAME
04100		JUMPE H,DOREFE		;DONE?
04200		HLLZS REFLST		;CLEAR LIST
04300		TRNN CONLY		;ONLY SOME SIGNALS?
04400		JRST NCONLY
04500		MOVE G,H
04600		SETZ TT,		;CLEAR BIT HOLDERS
04700	CSET1:	FETCH(T,G,TVAL)		;ORDER #
04800		JUMPN T,CSET3		;NO CONNECTIONS FOUND YET, I GIVE UP
04900		FETCH(TTT,G,TRHT)	;WIRE HEAD POINTER
05000		FETCH(T,TTT,WBIT)	;WIRE BITS
05100		TRNE T,NAM2ND
05200		FETCH(TTT,TTT,WPIN)
05300		FETCH(T,TTT,TBIT)
05400		TRNN T,ANYCON		;DOES IT GET TO BACK PANEL
05500		JRST [	TRNN T,OUTLD
05600			JRST [	TRNN T,INLD
05700				JRST CSET2	;NO IN, OUT, OR CONS
05800				TLNN TT,OUTLD	;ANY OUTPUTS ON OTHER CARDS?
05900				TRNE TT,OUTLD	;OR BACK PANEL
06000				JRST NCONLY	;YES, DO IT
06100				TLO TT,INLD	;INPUT ONLY ON CARD
06200				JRST CSET2]
06300			TLNE TT,INLD
06400			JRST NCONLY
06500			TLO TT,OUTLD		;HAVE OUTPUT ON CARD
06600			JRST CSET2]
06700		TRNN T,OUTLD
06800		JRST [	TRNE T,INLD
06900			TRO TT,INLD		;INPUT ON BACKPANEL
07000			JRST CSET2]
07100		TRO TT,OUTLD
07200		TLNE TT,INLD			;INPUT ON CARD?
07300		JRST NCONLY			;YES, PRINT
07400	CSET2:	FETCH(G,G,NXTT)
07500		JUMPN G,CSET1
07600	CSET3:	TRNE TT,INLD			;INPUT ON BACKPANEL?
07700		TRNE TT,OUTLD			;AND NO OUTPUT
07800		JRST CRFSKP			;NO
07900		TLNN TT,OUTLD			;AND OUTPUT ON CARD?
08000		JRST CRFSKP			;NO
08100	NCONLY:	SKIPL LINCNT
08200		PUSHJ P,RHDR
08300		FETCH(A,H,TRHT)		;SIGNAL NAME BLOCK
08400		SETZM TCOUNT
08500		PUTSIG ADDR(A,SPNT)	;PRINT SIGNAL NAME
08600		MOVE G,H
08700		JRST DOREFW		;DO REST OF EQUIVALENTS FOR THIS WIRE, THEN REST OF CARDS
08800	
08900	DOREFY:	FETCH(T,G,TVAL)		;ORDER #
09000		JUMPN T,DOREF3
09100		FETCH(A,G,TRHT)		;SIGNAL NAME BLOCK
09200	DOREFZ:	PUTCOM ADDR(A,SPNT)	;PUT OUT COMMENT AT END OF NAME
09300	DOREFW:	FETCH(A,A,NNAM)
09400		JUMPE A,DOREFX		;QUIT IF END THIS WIRE
09500		FETCH(T,A,WBIT)
09600		TRNN T,SIG1		;ALSO IF WE GET TO NEW FIRST NAME (CAN'T BE EQUIVALENT)
09700		JRST DOREFZ
09800	DOREFX:	FETCH(G,G,NXTT)
09900		JUMPN G,DOREFY
10000	DOREF3:	MOVE T,TCOUNT
10100		CAIL T,=16
10200		JRST [	CRLF
10300			PUTSTR[ASCIZ/		/]
10400			JRST WASSIG]
10500		PUTBYT 11
10600		CAIGE T,8
10700		PUTBYT 11
10800	WASSIG:	FETCH(T,H,TLFT)			;BAY-RACK-SLOT
10900		HRLZM T,SLICEL
11000		SKIPE SLICEL
11100		PUSHJ P,PSLICL
11200		PUTBYT 11
11300		FETCH(G,H,TRHT)			;SIGNAL NAME BLOCK
11400		SETZM TCOUNT
11500		PUSHJ P,ONECRD			;PUT OUT LINE(S) FOR ONE CARD
11600		SETZM TCOUNT			;FLAG AT LEFT MARGIN
11700		PUSHJ P,REFRET
11800		JUMPE H,DOREF2			;ALL GONE, GO AGAIN
11900		FETCH(T,H,TVAL)
12000		JUMPE T,DOREF3
12100	DOREF6:	MOVEI B,REFLST			;ALL 0'S GONE, RE-SORT THE REST
12200		HRRZ C,REFLST
12300	DOREF5:	MOVE G,H
12400		FETCH(H,H,NXTT)
12500		PUSHJ P,MERGIN			;MERGE INTO LIST
12600		JRST CPYRST			;WENT AT END, COPY THE REST
12700		JRST MERNUM			;EQV, DO REST
12800	
12900	CRFSKP:	PUSHJ P,REFRET
13000		JUMPE H,DOREF2
13100		FETCH(T,H,TVAL)
13200		JUMPE T,CRFSKP
13300		JRST DOREF6
13400	
13500	DOREFE:	RELEASE LST,
13600		POPJ P,
13700	
13800	ONECRD:	FETCH(E,G,WBIT)
13900		TRNE E,NAM2ND
14000		FETCH(G,G,WPIN)
14100		FETCH(E,G,TBIT)
14200		SETZB A,LODTAB
14300		MOVE T,[LODTAB,,LODTAB+1]
14400		BLT T,LODTAB+LODLEN-1
14500		TLO DOLC
14600		TLZ BAKGAT
14700		PUSH P,G
14800		PUSHJ P,GATHER
14900		PUSHJ P,LODMER			;CALC PROPER LOADING
15000		POP P,G
15100		MOVE T,LINL
15200		PUSHJ P,LDOUT
15300		PUTBYT 11
15400		MOVE T,LINH
15500		PUSHJ P,LDOUT
15600		PUTBYT 11
15700		SKIPN NOUT
15800		JRST [	TRNE E,GND
15900			JRST [	PUTSTR[ASCIZ/GND	/]
16000				JRST NTOUT]
16100			TRNN E,PWR
16200			JRST .+1
16300			SKIPLE T,PVOLTS
16400			PUTBYT "+"
16500			PUSHJ P,LDOUT
16600			PUTSTR[ASCIZ/	VOLTS/]
16700			JRST NTOUT]
16800		MOVE T,LOUTL
16900		PUSHJ P,LDOUT
17000		PUTBYT 11
17100		MOVE T,LOUTH
17200		PUSHJ P,LDOUT
17300	NTOUT:	FETCH(G,G,WPIN)			;FIRST PIN
17400		JUMPE G,[PUTSTR[ASCIZ/	NO PINS/]
17500			JRST NTPINS]
17600		SETZ F,				;CLEAR FILE LIST
17700	FSET1:	FETCH(D,G,PBDY)
17800		FETCH(D,D,BBIT)			;BODY BITS
17900		FETCH(T,G,FILP)			;FILE NAME POINTER
18000		MOVEI B,F+ADDR(0,NXTC)
18100		JRST FSET2
18200	
18300	FSET3:	FETCH(TTT,B,CFIL)
18400		FETCH(TTT,TTT,FILN)
18500		CAMG TTT,ADDR(T,FILN)
18600		JRST [	CAME TTT,ADDR(T,FILN)
18700			JRST FSET4
18800			MOVE C,B
18900			JRST FSET5]
19000	FSET2:	MOVE A,B
19100		FETCH(B,B,NXTC)
19200		JUMPN B,FSET3
19300	FSET4:	GETFS(C,CBLK)
19400		BCLEAR(TT,C,CBLK)
19500		STORE(C,A,NXTC)
19600		STORE(B,C,NXTC)
19700		STORE(T,C,CFIL)
19800	FSET5:	TRNN ISBACK			;BACK PANEL?
19900		JRST FSET7			;NO
20000		FETCH(TT,C,ICNT)
20100		ADDI TT,1			;COUNT A PIN
20200		STORE(TT,C,ICNT)
20300		JRST FSETE
20400	
20500	FSET7:	TRNN D,CBODY			;CON?
20600		JRST FSET6
20700		FETCH(TT,C,CCNT)
20800		ADDI TT,1
20900		TRNN D,BWILD		;FRONT?
21000		TROA TT,400000		;YES
21100		TRO TT,200000		;NO
21200		STORE(TT,C,CCNT)
21300		JRST FSETE
21400	
21500	FSET6:	FETCH(T,G,PTYP)
21600		JUMPE T,FSETE
21700		FETCH(T,T,DPBIT)
21800		TRNE T,OUTLD
21900		JRST [	FETCH(T,C,OCNT)
22000			ADDI T,1
22100			STORE(T,C,OCNT)
22200			JRST FSETE]
22300		TRNE T,TERM
22400		JRST [	FETCH(TT,C,ZCNT)
22500			ADDI TT,1
22600			STORE(TT,C,ZCNT)
22700			JRST FSETE]
22800		FETCH(T,C,ICNT)
22900		ADDI T,1
23000		STORE(T,C,ICNT)
23100	FSETE:	FETCH(G,G,NXTP)			;NEXT PIN OF WIRE
23200		JUMPN G,FSET1
23300		SETOM FACTR1
23400		MOVE G,F
23500		TRNE ISBACK
23600		JRST NTABB
23700	NTABA:	FETCH(T,G,OCNT)
23800		SKIPE T			;FIRST PRINT DRAWING NAMES WITH OUTPUTS
23900		PUSHJ P,NTAB
24000		FETCH(G,G,NXTC)
24100		JUMPN G,NTABA
24200	NTABB:	MOVE G,F
24300	NTABC:	FETCH(T,G,OCNT)
24400		TRNN ISBACK		;THIS IS ONLY LOOP FOR BACK PANEL
24500		SKIPN T			;FOR CARDS NOW WE DO ONES WITHOUT OUTPUTS
24600		PUSHJ P,NTAB
24700		MOVE A,G
24800		FETCH(G,G,NXTC)
24900		FSTRET(A,CBLK)
25000		JUMPN G,NTABC
25100	NTPINS:	CRLF
25200		POPJ P,
25300	
25400	NTAB:	AOS T,FACTR1
25500		CAIGE T,4
25600		JRST NTAB1
25700		SETZM FACTR1
25800		CRLF
25900		PUTSTR[ASCIZ/						/]
26000	NTAB1:	PUTBYT 11
26100		FETCH(A,G,CFIL)
26200		SETZM TCOUNT
26300		PUTSIX ADDR(A,FILN)
26400		TRNN ISBACK
26500		JRST NTAB2
26600		PUTBYT 11
26700		FETCH(T,G,ICNT)
26800		JRST DECOUT
26900	
27000	NTAB2:	MOVE T,TCOUNT
27100		SUBI T,6
27200		PUTBYT " "
27300		AOJLE T,.-1
27400		FETCH(T,G,ICNT)
27500		PUSHJ P,DECOUT
27600		PUTBYT ","
27700		FETCH(T,G,OCNT)
27800		PUSHJ P,DECOUT
27900		FETCH(T,G,ZCNT)
28000		JUMPE T,NOZPNT
28100		PUTBYT "Z"
28200		CAIE T,1
28300		PUSHJ P,DECOUT
28400	NOZPNT:	FETCH(T,G,CCNT)
28500		TRZE T,200000			;WILD?
28600		JRST [	TRZE T,400000
28700			JRST [	PUTBYT BWAROW
28800				CAILE T,2
28900				JRST DECOUT
29000				POPJ P,]
29100			PUTBYT WLDCHR
29200			JRST ISBCON]
29300		TRZN T,400000			;FRONT?
29400		POPJ P,
29500		PUTBYT "_"
29600	ISBCON:	CAIE T,1			;DON'T PRINT IN THIS CASE
29700		JRST DECOUT
29800		POPJ P,
29900	
30000	REFRET:	MOVE G,H
30100		FETCH(H,H,NXTT)
30200		FETCH(T,G,TRHT)			;SIGNAL BLOCK POINTER
30300	REFRT1:	FETCH(T,T,ALPH)
30400		JUMPE T,[FSTRET(G,TBLK)		;END OF LIST, GIVE BACK BLOCK
30500			POPJ P,]
30600		FETCH(TT,T,WBIT)
30700		TRNN TT,SIG1			;FIRST EQUIVALENT SIGNAL?
30800		JRST REFRT1			;NO, TRY ANOTHER
30900		STORE(T,G,TRHT)
31000		PUSHJ P,SORTIN			;SORT NEXT STRING INTO NEW LIST
31100		JFCL
31200		POPJ P,
     	00100	;		SORT SUBRS
00200	MERNM1:	FETCH(T,H,TVAL)
00300		CAME T,FACTR1			;STILL SAME OLD ORDER #?
00400		JRST DOREF5
00500		MOVE T,FACTR2
00600		STORE(T,H,TVAL)
00700		MOVE G,H
00800		FETCH(H,H,NXTT)
00900		FETCH(TTT,G,TLFT)
01000	MERNM2:	JUMPE C,MERNM3
01100		FETCH(T,C,TVAL)			;ORDER #
01200		CAME T,FACTR2			;ONE OF THIS GROUP?
01300		JRST MERNM3			;NO
01400		FETCH(T,C,TLFT)
01500		CAML T,TTT
01600		JRST MERNM3
01700		MOVE B,C
01800		FETCH(C,C,NXTT)
01900		JUMPN C,MERNM2
02000	MERNM3:	STORE(C,G,NXTT)
02100		STORE(G,B,NXTT)
02200		MOVE B,G
02300	MERNUM:	JUMPN H,MERNM1
02400		JRST DOREF2
02500	
02600	CPYRST:	STORE(H,G,NXTT)			;LINK REST ONTO END
02700		JUMPE H,DOREF2
02800	DOREF7:	FETCH(T,H,TVAL)			;NOW SET NEW ORDER #'S
02900		CAMN T,FACTR1
03000		JRST DOREF8
03100		MOVEM T,FACTR1
03200		AOSA T,FACTR2
03300	DOREF8:	MOVE T,FACTR2
03400		STORE(T,H,TVAL)
03500		FETCH(H,H,NXTT)
03600		JUMPN H,DOREF7
03700		JRST DOREF2
03800	
03900	MERGIN:	FETCH(T,G,TVAL)
04000		MOVEM T,FACTR1
04100		JRST SORTN2
04200	
04300	SORTIN:	MOVEI C,REFLST
04400		FETCH(T,G,TVAL)
04500		MOVEM T,FACTR1
04600	SORTN1:	MOVE B,C
04700		FETCH(C,C,NXTT)
04800	SORTN2:	JUMPE C,PUTHER
04900		FETCH(TT,C,TRHT)
05000		MOVEI TT,ADDR(TT,SCMP)
05100		FETCH(T,G,TRHT)
05200		MOVEI T,ADDR(T,SCMP)
05300		PUSHJ P,ALPHA
05400		JRST PUTHER
05500		JRST SORTN1			;NOT THERE YET
05600		JFCL				;EQUIVALENT
05700		JFCL				;EQUIVALENT
05800		FETCH(T,C,TVAL)			;EQUAL
05900		MOVEM T,FACTR2
06000		STORE(T,G,TVAL)
06100		FETCH(TTT,G,TLFT)
06200		JRST SORTN9
06300	
06400	SORTN3:	MOVE B,C
06500		FETCH(C,C,NXTT)
06600	SORTN9:	JUMPE C,SORTN8
06700		FETCH(TT,C,TVAL)
06800		CAME TT,T
06900		JRST SORTN8
07000		FETCH(TT,C,TLFT)
07100		CAMGE TT,TTT
07200		JRST SORTN3
07300		STORE(G,B,NXTT)
07400		STORE(C,G,NXTT)
07500		MOVE B,G
07600		JRST CPOPJ1
07700	
07800	SORTN8:	STORE(G,B,NXTT)
07900		STORE(C,G,NXTT)
08000		MOVE B,G
08100		SKIPN C				;IF THIS IS 0
08200		POPJ P,				;THEN WE ARE AT REAL END
08300		JRST CPOPJ1
08400	
08500	PUTHER:	FETCH(T,B,TVAL)
08600		ADDI T,1
08700		MOVEM T,FACTR2
08800		STORE(T,G,TVAL)
08900		STORE(G,B,NXTT)
09000		STORE(C,G,NXTT)
09100		MOVE B,G
09200		JUMPE C,CPOPJ			;AT END
09300		MOVE A,C
09400	SORTN5:	FETCH(T,A,TVAL)
09500		ADDI T,1
09600		STORE(T,A,TVAL)
09700		FETCH(A,A,NXTT)
09800		JUMPN A,SORTN5
09900		JRST CPOPJ1
10000	
10100	RHDR:	TLZN NOFF
10200		PUTSTR[BYTE(7)15,14]
10300		MOVN TTT,PAGLEN
10400		ADD TTT,MARGIN
10500		MOVEM TTT,LINCNT
10600		TRNE CONLY
10700		JRST RHDR3
10800		PUTSTR[ASCIZ/REF LISTING/]
10900		JRST RHDR2
11000	
11100	RHDR3:	PUTSTR[ASCIZ/CONNECTORS NEEDED/]
11200	RHDR2:	FETCH(A,L,WLNM)
11300		JUMPE A,RHDR1
11400		PUTSTR[ASCIZ/ FOR /]
11500		PUSHJ P,STROUT			;PRINT WIRE LIST NAME
11600	RHDR1:	PUSHJ P,PNTFDT
11700		PUTSTR[ASCIZ/
11800	SIGNAL NAME
11900			CARD	LOW IN	HI IN	LOW OUT	HI OUT	FILNAM	#I,#O Z# C#
12000	
12100	/]
12200		POPJ P,
     	00100	SUBTTL	'WLC'		COMPARE 2 WIRE LISTS
00200	WDECO:	TRZ PCNOTD
00300		OUTSTR[ASCIZ/ID OF "OLD" WIRELIST?/]
00400		PUSHJ P,FNDID
00500		POPJ P,
00600		JRST NOID
00700		HRLZM L,GOODW
00800		OUTSTR[ASCIZ/ID OF "NEW" WIRELIST?/]
00900		PUSHJ P,FNDID
01000		POPJ P,
01100		JRST NOID
01200		HRLZM L,BADW
01300		JRST WDECOA
01400	
01500	WIRCOM:	TRO PCNOTD
01600		MOVE L,DEFLST
01700		HRLZM L,GOODW
01800		HRLZM L,BADW
01900	WDECOA:	HLRZ L,GOODW
02000		FETCH(W,L,WIRL)
02100		PUSHJ P,LSTGT0
02200		POPJ P,
02300		HRRM W,GOODW
02400		HLRZ L,BADW
02500		FETCH(W,L,WIRL)
02600		TRNE PCNOTD
02700		FETCH(W,L,PCWL)
02800		JUMPE W,NXCRD1
02900		HRLM W,(P)
03000		PUSHJ P,GETLOP		;TRY TO FIND SAME CARD IN OTHER WIRELIST
03100		CAIA
03200		JRST WDECOK
03300		OUTSTR[ASCIZ/SAME CARD NOT FOUND IN /]
03400		TRNE PCNOTD
03500		OUTSTR[ASCIZ/PC/]
03600		FETCH(A,L,WLID)
03700		TRNN PCNOTD
03800		JRST [	OUTCHR [42]
03900			PUSHJ P,STRTTY
04000			OUTCHR[42]
04100			JRST .+1]
04200		OUTSTR[ASCIZ/ WIRELIST.
04300	/]
04400		HLRZ W,(P)
04500		PUSHJ P,LSTGT0
04600		JRST NXCRD1
04700	WDECOK:	HRRM W,BADW
04800		TRNN PCNOTD
04900		JRST [	MOVSI T,'WDC'
05000			JRST WDECO1]
05100		PUSHJ P,FIXDIP		;TRY TO COPY DIP TYPES ACROSS
05200		MOVSI T,'WLC'		;ERROR LISTING FOR WIRE LIST COMPARISON
05300	WDECO1:	MOVEI TT,0		;DATA MODE 0
05400		MOVSI TTT,'DSK'
05500		PUSHJ P,OUTSET
05600		POPJ P,
05700		TRNN PCNOTD		;FOR PC CARDS
05800		JRST WDECO2
05900		HRRZ W,GOODW
06000		PUSHJ P,FILLST		;PUT OUT DRAWING FILE HEADER
06100		 CHDR
06200		PUSHJ P,DOWLD		;PUT A WLD IN THE FRONT OF THIS FILE
06300		JRST WDECO3
06400	
06500	WDECO2:	HRRZ W,GOODW		;FOR D, PUT OUT BOTH FILE HEADERS
06600		PUSHJ P,FILLST
06700		 CHDRO
06800		HRRZ W,BADW
06900		PUSHJ P,FILLST
07000		 CHDRN
07100	WDECO3:	HRRZ W,GOODW
07200		PUSHJ P,CLEARW
07300		HRRZ W,BADW
07400		PUSHJ P,CLEARW
07500		TRNN PCNOTD
07600		SKIPA T,[[ASCIZ/	RUNS WITH CHANGES
07700	SIGNAL NAME
07800		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS	ADD	DELETE/]]
07900		MOVEI T,[ASCIZ/	WIRES WITH SHORTS OR OPENS
08000	SIGNAL NAME
08100		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS	SHORT	OPEN/]
08200		MOVEM T,HEADER
08300		SETZM LINCNT
08400		MOVEI T,WCIMAR
08500		MOVEM T,MARGIN
08600		HRRZ W,GOODW
08700		MOVEI W,RADDR(W,WIRES,ALPH);WIRES
08800		JRST WIRCM2
08900	
09000	WIRCM3:	FETCH(T,W,WBIT)
09100		TRNE T,NAM2ND!WNULL	;WNULL WILL BE HONEST IF NAM2ND IS OFF
09200		JRST WIRCM2		;SKIP FAKE WIRES
09300		SETZM MSINGL		;CLEAR 1 PIN RUN MATCH
09400		FETCH(T,W,TBIT)
09500		FETCH(H,W,WPIN)
09600		TRNN T,OUTLD		;ANY OUTPUTS
09700		JRST CONFN0
09800	OUTFN2:	FETCH(T,H,PBIT)
09900		TRNE T,DUP
10000		JRST OUTFN1
10100		FETCH(T,H,PTYP)
10200		JUMPE T,OUTFN1
10300		FETCH(T,T,DPBIT)
10400		TRNE T,OUTLD		;OUTPUT PIN?
10500		PUSHJ P,PINFNH		;TRY TO FIND IN BADW
10600		JRST OUTFN1		;LOSE
10700		JRST ISLINK		;THIS IS IT
10800	
10900	OUTFN1:	FETCH(H,H,NXTP)
11000		JUMPN H,OUTFN2
11100		FETCH(H,W,WPIN)
11200		FETCH(T,W,TBIT)
11300	CONFN0:	TRNN T,ANYCON
11400		JRST INFN0
11500	FNCON2:	FETCH(T,H,PBIT)
11600		TRNE T,DUP
11700		JRST FNCON1
11800		FETCH(T,H,PBDY)
11900		FETCH(T,T,BBIT)
12000		TRNN T,BWILD
12100		TRNN T,CBODY
12200		JRST FNCON1
12300		PUSHJ P,PINFNH
12400		JRST FNCON1
12500		JRST ISLINK
12600	
12700	FNCON1:	FETCH(H,H,NXTP)
12800		JUMPN H,FNCON2
12900		FETCH(H,W,WPIN)
13000		FETCH(T,W,TBIT)
13100	INFN0:	TRNN T,INLD
13200		JRST UNFN2
13300	INFN2:	FETCH(T,H,PBIT)
13400		TRNE T,DUP
13500		JRST INFN1
13600		FETCH(T,H,PTYP)
13700		JUMPE T,INFN1
13800		FETCH(T,T,DPBIT)
13900		TRNE T,INLD
14000		PUSHJ P,PINFNH
14100		JRST INFN1
14200		JRST ISLINK
14300	
14400	INFN1:	FETCH(H,H,NXTP)
14500		JUMPN H,INFN2
14600		FETCH(H,W,WPIN)
14700	UNFN2:	FETCH(T,H,PBIT)
14800		TRNE T,DUP
14900		JRST UNFN1
15000		PUSHJ P,PINFNH
15100		JRST UNFN1
15200		JRST ISLINK
15300	
15400	UNFN1:	FETCH(H,H,NXTP)
15500		JUMPN H,UNFN2
15600		TRNE PCNOTD		;IF COMPARING PC TO DRW,
15700		JRST WIRCM2		;THEN ONLY SEE WIRES
15800		SKIPE MSINGL		;DID WE FIND SINGLE PIN MATCH?
15900		JRST ISLNKS		;YES, GO USE IT
16000	WIRCM2:	FETCH(W,W,ALPH)
16100		JUMPN W,WIRCM3
16200		HRRZ W,GOODW
16300		MOVEI G,RADDR(W,WIRES,ALPH)
16400		TRNN PCNOTD
16500		SKIPA T,[[ASCIZ/	DELETED RUNS
16600	SIGNAL NAME
16700		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS/]]
16800		MOVEI T,[ASCIZ/	MISSING WIRES
16900	SIGNAL NAME
17000		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS/]
17100		MOVEM T,HEADER
17200		SETZM LINCNT
17300		MOVEI T,WCWMAR
17400		MOVEM T,MARGIN
17500		JRST WIRCM6
17600	
17700	WIRCM4:	FETCH(F,G,WBIT)
17800		TRNE F,NAM2ND!WNULL!WSINGL
17900		JRST WIRCM6		;ALWAYS SKIP FAKE HEADERS, NULLS, AND SINGLES
18000		TROE F,WTMP1		;RUN COMPARED YET?
18100		JRST WIRCM6		;YES
18200		STORE(F,G,WBIT)		;STORE WITH BIT SET
18300		pushj p,cchk
18400		PUTSIG ADDR(G,SPNT)
18500		FETCH(E,G,WPIN)
18600	WIRCM8:	PUSHJ P,PINPNT
18700		CRLF
18800		FETCH(E,E,NXTP)
18900		JUMPN E,WIRCM8
19000	WIRCM6:	FETCH(G,G,ALPH)
19100		JUMPN G,WIRCM4
19200		HRRZ W,BADW
19300		MOVEI G,RADDR(W,WIRES,ALPH)
19400		TRNN PCNOTD
19500		SKIPA T,[[ASCIZ/	ADDED RUNS
19600	SIGNAL NAME
19700		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS/]]
19800		MOVEI T,[ASCIZ/	EXTRA WIRES
19900	SIGNAL NAME
20000		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS/]
20100		MOVEM T,HEADER
20200		SETZM LINCNT
20300		MOVEI T,WCWMAR
20400		MOVEM T,MARGIN
20500		JRST WIRCN6
20600	
20700	WIRX2:	TLO TFLG		;NAME NOT OUT YET
20800		PUSHJ P,ISLNKX
20900		JRST WIRCN6
21000	
21100	WIRCN4:	FETCH(A,G,WBIT)
21200		TRNE A,NAM2ND!WNULL!WSINGL
21300		JRST WIRCN6		;ALWAYS SKIP FAKE HEADERS, NULLS, AND SINGLES
21400		TRNN PCNOTD
21500		JRST WIRCN7		;SKIP TESTS IF BOTH WD FILES
21600		TRNE A,SPWR!SGND
21700		JRST WIRX2			;IS GND OR PWR
21800	WIRCN7:	TROE A,WTMP1		;MATCHED ALREADY?
21900		JRST WIRCN6		;YES
22000		STORE(A,G,WBIT)
22100		pushj p,cchk
22200		PUTSIG ADDR(G,SPNT)
22300		FETCH(E,G,WPIN)
22400	WIRCN8:	PUSHJ P,PINPNT
22500		CRLF
22600		FETCH(E,E,NXTP)
22700		JUMPN E,WIRCN8
22800	WIRCN6:	FETCH(G,G,ALPH)
22900		JUMPN G,WIRCN4
23000		HRRZ W,GOODW
23100		MOVEI G,RADDR(W,WIRES,ALPH)
23200		TRNN PCNOTD
23300		SKIPA T,[[ASCIZ/	DELETED PINS
23400	SIGNAL NAME
23500		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS/]]
23600		MOVEI T,[ASCIZ/	LONESOME PINS FROM LOGIC DRAWING
23700	SIGNAL NAME
23800		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS/]
23900		MOVEM T,HEADER
24000		SETZM LINCNT
24100		MOVEI T,WCLMAR
24200		MOVEM T,MARGIN
24300		JRST WIRCO6
24400	
24500	WIRCO4:	FETCH(F,G,WBIT)
24600		TRNE F,WSINGL
24700		TRNE F,NAM2ND!WNULL
24800		JRST WIRCO6		;SKIP FAKE WIRES AND NULLS AND NON SINGLES
24900		TROE F,WTMP1
25000		JRST WIRCO6		;DONE ALREADY
25100		STORE(F,G,WBIT)
25200		pushj p,cchk
25300		PUTSIG ADDR(G,SPNT)
25400		FETCH(E,G,WPIN)
25500		PUSHJ P,PINPNT
25600		CRLF
25700	WIRCO6:	FETCH(G,G,ALPH)
25800		JUMPN G,WIRCO4
25900		TRNE PCNOTD
26000		JRST WDECON
26100		HRRZ W,BADW
26200		MOVEI G,RADDR(W,WIRES,ALPH)
26300		MOVEI T,[ASCIZ/	ADDED PINS
26400	SIGNAL NAME
26500		LOC(PIN#) TYPE	USE	DIPTYPE	BODY	FILE	POS/]
26600		MOVEM T,HEADER
26700		SETZM LINCNT
26800		MOVEI T,WCLMAR
26900		MOVEM T,MARGIN
27000		JRST WIRCP6
27100	
27200	WIRCP4:	FETCH(F,G,WBIT)
27300		TRNE F,WSINGL
27400		TRNE F,NAM2ND!WNULL
27500		JRST WIRCP6		;SKIP FAKE WIRES AND NULLS AND NON SINGLES
27600		TROE F,WTMP1
27700		JRST WIRCP6		;DONE ALREADY
27800		STORE(F,G,WBIT)
27900		pushj p,cchk
28000		PUTSIG ADDR(G,SPNT)
28100		FETCH(E,G,WPIN)
28200		PUSHJ P,PINPNT
28300		CRLF
28400	WIRCP6:	FETCH(G,G,ALPH)
28500		JUMPN G,WIRCP4
28600		JRST WDECOE
28700	
28800	WDECON:	MOVEI T,[ASCIZ/PWR OR GND PINS NOT WIRED TO PWR OR GND ON PC CARD
28900	LOC(PIN#) TYPE	USE	DIPTYPE		FILE		SIGNAL/]
29000		MOVEM T,HEADER
29100		SETZM LINCNT
29200		MOVEI T,WCLMAR
29300		MOVEM T,MARGIN
29400		HRRZ W,BADW
29500		MOVEI W,RADDR(W,WBDY,NXTB)
29600		JRST WIRVG1
29700	
29800	WIRVG2:	FETCH(T,W,DIPT)
29900		JUMPE T,WIRVGA			;ANY DIP TYPE?
30000		MOVEI E,RADDR(W,BPIN,NXBP)
30100		JRST WIRVG3
30200	
30300	WIRVG4:	FETCH(A,E,PTYP)
30400		JUMPE A,WIRVG3
30500		FETCH(TT,A,DPBIT)
30600		TRNE TT,PWR!GND
30700		JRST WIRVGC
30800	WIRVG3:	FETCH(E,E,NXBP)
30900		JUMPN E,WIRVG4
31000		JRST WIRVG1
31100	
31200	WIRVGE:	PUSHJ P,PINVG
31300		JRST WIRVG3
31400	
31500	PINVG:	pushj p,cchk
31600		PUSHJ P,PINVGP
31700	PINVGC:	PUTBYT 11
31800		FETCH(A,E,HPNT)
31900		PUTSIG ADDR(A,SPNT)
32000		CRLF
32100		POPJ P,
32200	
32300	WIRVGC:	FETCH(T,E,HPNT)
32400		FETCH(T,T,WBIT)
32500		TRNN T,SPWR!SGND
32600		JRST WIRVGE
32700		TRNN TT,PWR
32800		JRST WIRVGD
32900		TRNN T,SPWR
33000		JRST WIRVGE
33100		JRST WIRVG3
33200	
33300	WIRVGD:	TRNN T,SGND
33400		JRST WIRVGE
33500		JRST WIRVG3
33600	
33700	WIRVGA:
33800		SKIPN ISWW
33900		JRST WIRVG1
34000		FETCH(T,W,BBIT)
34100		TRNN T,BWILD
34200		TRNN T,CBODY
34300		JRST WIRVG1			;NO
34400		FETCH(F,W,BLOC)
34500		TLO F,MAPCON
34600		MOVEI E,RADDR(W,BPIN,NXBP)
34700		JRST WIRVGX
34800	
34900	WIRVGY:	FETCH(TT,E,PINN)
35000		MOVE T,F
35100		PUSHJ P,CPNMER
35200		MOVE A,T
35300		PUSHJ P,PINBIT
35400		TLNN TT,PWR!GND
35500		JRST WIRVGX
35600		FETCH(T,E,HPNT)
35700		FETCH(T,T,WBIT)
35800		TRNN T,SPWR
35900		JRST WIRVGW
36000		TLNE TT,PWR
36100		JRST WIRVGX
36200		JRST WIRVGZ
36300	
36400	WIRVGW:	TRNE T,SGND
36500		TLNE TT,GND
36600		JRST WIRVGX
36700	WIRVGZ:	HLLM TT,(P)
36800		pushj p,cchk
36900		PUSHJ P,PINPNF
37000		HLRZ TT,(P)
37100		TRNE TT,PWR
37200		PUTBYT PWRCHR
37300		TRNE TT,GND
37400		PUTBYT GNDCHR
37500		PUSHJ P,WASCON
37600		PUSHJ P,PINVGC
37700	WIRVGX:	FETCH(E,E,NXBP)
37800		JUMPN E,WIRVGY
37900	WIRVG1:	FETCH(W,W,NXTB)
38000		JUMPN W,WIRVG2
38100	WDECOE:	RELEASE LST,
38200		POPJ P,
38300	
38400	ISLNKS:	HLRZ H,MSINGL		;GET PIN WE MATCHED
38500		HRRZ F,MSINGL		;GET ITS MATCH
38600		FETCH(G,F,HPNT)		;GET ITS WIRE HEADER
38700	ISLINK:	FETCH(T,W,WBIT)
38800		TRO T,WTMP1		;MARK RUN MATCHED
38900		STORE(T,W,WBIT)
39000		TRC T,WSINGL!GENSIG
39100		TRCE T,WSINGL!GENSIG	;BUT DON'T MARK NEW RUN IF OLD IS SINGLE GENSIG
39200		JRST ISLNK6
39300		FETCH(TT,G,WBIT)
39400		TRNN TT,WSINGL		;GO AHEAD WITH SINGLES
39500		JRST WIRCM2		;MULTIPLE PIN RUNS WILL MATCH OTHER RUNS, OR BE ADDS LATER
39600	ISLNK6:	TLO TFLG		;NO SIGNAL NAME OUT YET
39700		MOVE A,W
39800		PUSHJ P,CLEARA		;CLEAR PRINT BITS
39900		MOVE A,G
40000		PUSHJ P,CLEARA		;ON BOTH WIRES
40100		MOVE TT,H
40200		PUSHJ P,PTSETA		;MARK AS MATCHED, BUT NOT PRINTED
40300		MOVE TT,F
40400		PUSHJ P,PTSETB		;MARK AS PRINTED AND MATCHED ALREADY
40500		TRNE PCNOTD
40600		JRST ISLNK0
40700		FETCH(T,W,WBIT)
40800		TRNE T,GENSIG
40900		JRST [	FETCH(T,G,WBIT)
41000			TRNN T,GENSIG
41100			JRST .+1
41200			JRST ISLNK0]	;DON'T COMPARE SIGNAL NAMES IF BOTH GENERATED
41300		MOVE H,W
41400		MOVE F,G
41500	ECOSIG:	JUMPE H,[JUMPE F,ECOSG1
41600			JRST CKADD]
41700		JUMPE F,CKDEL
41800		MOVEI T,ADDR(H,SCMP)
41900		MOVEI TT,ADDR(F,SCMP)
42000		PUSHJ P,ALPHA
42100		JRST CKDEL
42200		JRST CKADD
42300		JRST CKDEL
42400		JRST CKADD
42500		FETCH(T,H,WBIT)
42600		TRO T,WTMP1
42700		STORE(T,H,WBIT)
42800		FETCH(H,H,NNAM)
42900		FETCH(T,F,WBIT)
43000		TRO T,WTMP1
43100		STORE(T,F,WBIT)
43200		FETCH(F,F,NNAM)
43300		JRST ECOSIG
43400	
43500	CKADD:	FETCH(T,F,WBIT)
43600		TRZ T,WTMP1		;CLEAR BIT IN CASE WE HAVE BEEN THROUGH HERE BEFORE
43700		STORE(T,F,WBIT)
43800		FETCH(F,F,NNAM)
43900		JRST ECOSIG
44000	
44100	CKDEL:	TLZN TFLG
44200		JRST CKDEL1
44300		pushj p,cchk
44400	CKDEL1:	PUTSIG ADDR(H,SPNT)
44500		MOVEI A,=72
44600		PUSHJ P,FILL
44700		PUTSTR[ASCIZ/  D/]
44800		CRLF
44900		FETCH(T,H,WBIT)
45000		TRO T,WTMP1
45100		STORE(T,H,WBIT)
45200		FETCH(H,H,NNAM)
45300		JRST ECOSIG
45400	
45500	ECOSG1:	MOVE F,G
45600	ECOSG2:	FETCH(T,F,WBIT)
45700		TROE T,WTMP1
45800		JRST ECOSG3
45900		STORE(T,F,WBIT)
46000		TLZN TFLG
46100		JRST ECOSG4
46200		pushj p,cchk
46300	ECOSG4:	PUTSIG ADDR(F,SPNT)
46400		MOVEI A,=64
46500		PUSHJ P,FILL
46600		PUTSTR[ASCIZ/ A/]
46700		CRLF
46800	ECOSG3:	FETCH(F,F,NNAM)
46900		JUMPN F,ECOSG2
47000	ISLNK0:	FETCH(T,W,WBIT)
47100		TRO T,WTMP1
47200		STORE(T,W,WBIT)
47300		FETCH(T,G,WBIT)
47400		TRO T,WTMP1
47500		STORE(T,G,WBIT)
47600		MOVEI H,RADDR(W,WPIN,NXTP)
47700		JRST ISLNK1
47800	
47900	ISLNK2:	FETCH(T,H,PBIT)
48000		TRNE T,PTMP2		;MATCHED ALREADY?
48100		JRST ISLNK1
48200		PUSHJ P,PINFNG		;NO, FIND MATCH
48300		JRST MISING		;DELETED
48400		MOVE TT,H
48500		PUSHJ P,PTSETA		;MARK AS MATCHED, BUT NOT PRINTED
48600		MOVE TT,F
48700		PUSHJ P,PTSETB		;MARK AS MATCHED AND PRINTED
48800	ISLNK1:	FETCH(H,H,NXTP)
48900		JUMPN H,ISLNK2
49000		PUSHJ P,ISLNKX		;NOW DO ADDED PINS
49100		TLNE TFLG		;ANYTHING PRINTED
49200		JRST WIRCM2		;NO
49300		MOVEI H,RADDR(W,WPIN,NXTP) ;YES, PRINTED MATCHED PINS ALSO
49400		JRST MDUMP1
49500	
49600	MDUMP2:	FETCH(T,H,PBIT)
49700		TRNE T,PTMP1		;PRINTED YET?
49800		JRST MDUMP1		;YES
49900		MOVE E,H
50000		PUSH P,W
50100		HRRZ W,GOODW
50200		PUSHJ P,PINPNT
50300		CRLF
50400		POP P,W
50500	MDUMP1:	FETCH(H,H,NXTP)
50600		JUMPN H,MDUMP2
50700		JRST WIRCM2
50800	
50900	ISLNKX:	MOVEI F,RADDR(G,WPIN,NXTP)
51000		JRST ISLNK3
51100	
51200	ISLNK4:	FETCH(T,F,PBIT)
51300		TRNE T,PTMP1		;PRINTED YET?
51400		JRST ISLNK3		;YES
51500		MOVE TT,F
51600		PUSHJ P,PTSET
51700		FETCH(A,G,WBIT)
51800		TRNN A,SPWR!SGND
51900		JRST ISNTPG
52000		FETCH(T,F,PBDY)
52100		FETCH(T,T,BBIT)
52200		TRNN T,CBODY		;CONNECTOR?
52300		JRST ISNTC		;NO
52400		SKIPN ISWW
52500		JRST ISNTPG
52600		TRNE T,BWILD		;ONLY REAL ONES
52700		JRST ISNTPG
52800		FETCH(TT,F,PINN)
52900		FETCH(T,F,PBDY)
53000		FETCH(T,T,BLOC)
53100		PUSHJ P,CPNMER
53200		MOVE A,T
53300		TLO A,MAPCON
53400		PUSHJ P,PINBIT
53500		JUMPE TT,ISNTPG
53600		MOVS TT,TT
53700		FETCH(A,G,WBIT)
53800		JRST VPCHK0
53900	
54000	ISNTC:	FETCH(TT,F,PTYP)
54100		JUMPE TT,ISNTPG
54200		FETCH(TT,TT,DPBIT)
54300	VPCHK0:	TRNN TT,PWR
54400		JRST ISNTP
54500		TRNN A,SPWR
54600		JRST ISNTPG
54700		JRST ISLNK3		;IS PWR ON PWR, SKIP IT
54800	
54900	ISNTP:	TRNN TT,GND
55000		JRST ISNTPG
55100		TRNE A,SGND
55200		JRST ISLNK3
55300		JRST ISNTPG
55400	ISNTPG:	TLZN TFLG		;SIGNAL NAME OUT YET?
55500		JRST ISLNK5		;YES
55600		pushj p,cchk
55700		PUTSIG ADDR(W,SPNT)
55800		TRNN PCNOTD
55900		JRST ISLNK5
56000		CRLF
56100		PUTSIG ADDR(G,SPNT)
56200	ISLNK5:	MOVE E,F
56300		PUSH P,W
56400		HRRZ W,BADW
56500		PUSHJ P,PINPNT
56600		POP P,W
56700		MOVEI A,=64
56800		PUSHJ P,FILL
56900		TRNN PCNOTD
57000		PUTSTR[ASCIZ/ A/]
57100		TRNE PCNOTD
57200		PUTSTR[ASCIZ/ S/]
57300		CRLF
57400	ISLNK3:	FETCH(F,F,NXTP)
57500		JUMPN F,ISLNK4
57600		POPJ P,
57700	
57800	MISING:	MOVE TT,H
57900		PUSHJ P,PTSET
58000		TLZN TFLG		;NAME OUT YET?
58100		JRST MISNG1
58200		pushj p,cchk
58300		PUTSIG ADDR(W,SPNT)
58400		TRNN PCNOTD
58500		JRST MISNG1
58600		CRLF
58700		PUTSIG ADDR(G,SPNT)
58800	MISNG1:	MOVE E,H
58900		PUSH P,W
59000		HRRZ W,GOODW
59100		PUSHJ P,PINPNT
59200		MOVEI A,=72
59300		PUSHJ P,FILL
59400		TRNN PCNOTD
59500		PUTSTR[ASCIZ/  D/]
59600		TRNE PCNOTD
59700		PUTSTR[ASCIZ/  O/]
59800		CRLF
59900		POP P,W
60000		JRST ISLNK1
     	00100	;		SUBRS FOR WIRCOM
00200	PTSETB:	PUSH P,[PTMP1!PTMP2]
00300		JRST PTSET0
00400	
00500	PTSETA:	PUSH P,[PTMP2]
00600		JRST PTSET0
00700	
00800	PTSET:	PUSH P,[PTMP1]
00900	PTSET0:	FETCH(T,TT,PBIT)
01000	PTSET1:	IOR T,(P)
01100		STORE(T,TT,PBIT)
01200		FETCH(TT,TT,NXTP)
01300		JUMPE TT,PTSET2
01400		FETCH(T,TT,PBIT)
01500		TRNE T,DUP
01600		JRST PTSET1
01700	PTSET2:	POP P,(P)
01800		POPJ P,
01900	
02000	CLEARP:	HLRZ A,1(W)
02100		MOVEI A,RADDR(W,WIRES,ALPH)
02200		JRST CLEAR1
02300	
02400	CLEAR2:	PUSHJ P,CLEARA
02500	CLEAR1:	FETCH(A,A,ALPH)
02600		JUMPN A,CLEAR2
02700		POPJ P,
02800	
02900	CLEARA:	FETCH(B,A,WBIT)
03000		TRNE B,NAM2ND
03100		POPJ P,			;SKIP FAKE WIRES
03200		MOVEI B,RADDR(A,WPIN,NXTP)
03300		JRST CLEAR3
03400	
03500	CLEAR4:	FETCH(T,B,PBIT)
03600		TRZ T,PTMP1!PTMP2
03700		STORE(T,B,PBIT)
03800	CLEAR3:	FETCH(B,B,NXTP)
03900		JUMPN B,CLEAR4
04000		POPJ P,
04100	
04200	;HERE TO PUT OUT HEADER FOR OLD FILE ONLY
04300	CHDRO:	PUSHJ P,CHDR
04400		PUTSTR[ASCIZ/"OLD" WIRE LIST:
04500	
04600	/]
04700		POPJ P,
04800	
04900	;HERE TO PUT OUT HEADER FOR NEW FILE ONLY
05000	CHDRN:	PUSHJ P,CHDR
05100		PUTSTR[ASCIZ/"NEW" WIRE LIST:
05200	
05300	/]
05400		POPJ P,
05500	
05600	cchk:	skipGE lincnt
05700		jrst [	crlf
05800			popj p,]
05900	CHDR:	TLZN NOFF
06000		PUTSTR[BYTE(7)15,14]
06100		PUSH P,A
06200		MOVN A,PAGLEN		;INIT COUNT TO TOP OF PAGE
06300		ADD A,MARGIN
06400		MOVEM A,LINCNT
06500		HLRZ A,GOODW
06600		FETCH(A,A,WLNM)
06700		JUMPE A,[HLRZ A,BADW
06800			FETCH(A,A,WLNM)
06900			JUMPE A,BTHBNK
07000			PUTSTR[ASCIZ/Unnamed wire list/]
07100			JRST .+2]
07200		PUSHJ P,STROUT
07300		PUTSTR[ASCIZ/  - vs -  /]
07400		HLRZ A,BADW
07500		FETCH(A,A,WLNM)
07600		JUMPE A,[PUTSTR[ASCIZ/Unnamed wire list/]
07700			JRST ONEBNK]
07800		PUSHJ P,STROUT
07900	ONEBNK:	CRLF
08000	BTHBNK:	HRRZ A,GOODW
08100		FETCH(A,A,FCRD)
08200		PUSHJ P,PNTBRS
08300		CRLF
08400		PUTSTR @HEADER
08500		PUTSTR[ASCIZ/
08600	
08700	/]
08800		POP P,A
08900		POPJ P,
09000	
09100	PINPNX:	FETCH(D,E,PBDY)
09200		JRST PINPNY
09300	
09400	PINPNT:	MOVE T,LCOUNT
09500		CAIL T,8		;PUT ON SAME LINE IF ROOM
09600		CRLF
09700		PUTBYT 11
09800	PINVGP:	PUSHJ P,PINPNF
09900	WASCON:	PUTBYT 11
10000		JUMPE B,WASNCN
10100		FETCH(A,B,DUSE)
10200		PUTSIX A
10300	WASNCN:	PUTBYT 11
10400		FETCH(T,D,DIPT)		;DIP POINTER
10500		SETZM TCOUNT
10600		JUMPE T,[FETCH(T,D,BBIT)
10700			TRNE T,CBODY
10800			PUTSTR[ASCIZ/CON/]
10900			JRST WNONM1]
11000		FETCH(A,T,DNAM)
11100		PUSHJ P,STROUT
11200	WNONM1:	PUTBYT 11
11300		PUTSTR ADDR(D,BNAM)
11400		PUTBYT 11
11500		FETCH(A,E,FILP)
11600		PUTSIX ADDR(A,FILN)
11700		PUTBYT 11
11800		FETCH(A,D,BBIT)
11900		TRNN A,CBODY
12000		JRST BPPNT
12100		FETCH(A,E,PBIT)
12200		JRST CNPNT
12300	
12400	PINPNF:	FETCH(D,E,PBDY)
12500		FETCH(A,D,BLOC)
12600		SETZM TCOUNT
12700		FETCH(T,E,PINN)
12800		HRL A,T
12900		FETCH(T,D,BBIT)
13000		TRNN T,CBODY
13100		JRST PNNC
13200		PUSHJ P,LOCPNW
13300		FETCH(T,E,PBIT)
13400		PUSHJ P,PTAB
13500		SETZ B,		;FLAG TO WASCON NOT TO PRINT USE
13600		POPJ P,
13700	
13800	PNNC:
13900		PUSHJ P,LOCPNP
14900		FETCH(T,E,PBIT)
15000		PUSHJ P,PTAB
15100	PINPNY:	FETCH(B,E,PTYP)
15200		JUMPE B,[PUTSTR[ASCIZ/UN/]
15300			POPJ P,]
15400		FETCH(A,B,DPBIT)
15500		PUSHJ P,PNTYPE
15600		POPJ P,
15700	
15800	;ENTER WITH LOGIC PIN TO FIND IN H
15900	PINFNH:	FETCH(A,H,PBDY)		;BODY POINTER
16000		FETCH(A,A,BLOC)		;LOC OF BODY
16100		JUMPE A,CPOPJ		;CAN'T FIND IF NO LOC!!!!!!
16200		FETCH(B,H,PINN)		;PIN #
16300		HRRZ G,BADW
16400		MOVEI G,RADDR(G,WBDY,NXTB)
16500		JRST BDFNH1
16600	
16700	BDFNH2:	FETCH(C,G,BLOC)		;LOC
16800		CAMN A,C		;SAME LOC?
16900		JRST BDFNH3
17000	BDFNH1:	FETCH(G,G,NXTB)
17100		JUMPN G,BDFNH2
17200		POPJ P,			;LOSE
17300	
17400	BDFNH3:	MOVEI F,RADDR(G,BPIN,NXBP)
17500		JRST PNFNH1
17600	
17700	PNFNH2:	FETCH(T,F,PBIT)
17800		TRNE T,DUP
17900		JRST PNFNH1
18000		FETCH(T,F,PINN)
18100		CAME T,B		;PIN #
18200		JRST PNFNH1
18300		FETCH(C,F,HPNT)		;WIRE POINTER
18400		FETCH(T,C,WBIT)
18500		TRNE T,WTMP1		;DON'T FIND PREVIOUSLY MATCHED PINS
18600		JRST PNFNH1		;BUT KEEP TRYING
18700		TRNN T,WSINGL		;DON'T FIND SINGLES
18800		JRST [	MOVE G,C	;RETURN WIRE HEADER IN G
18900			JRST CPOPJ1]
19000		SKIPE MSINGL		;ALREADY GOT BEST SINGLE?
19100		JRST PNFNH1
19200		MOVEM F,MSINGL		;NO, SAVE THIS ONE
19300		HRLM H,MSINGL
19400	;CONTINUE TO SEARCH FOR NON-SINGLE OR UNMATCHED PIN
19500	PNFNH1:	FETCH(F,F,NXBP)
19600		JUMPN F,PNFNH2
19700		JRST BDFNH1
19800	
19900	;ENTER WITH LOGIC PIN IN H, PC WIRE IN G
20000	PINFNG:	MOVEI F,RADDR(G,WPIN,NXTP)
20100		FETCH(A,H,PBDY)
20200		FETCH(A,A,BLOC)		;LOC
20300		FETCH(B,H,PINN)		;PIN #
20400		JRST PINFN1
20500	
20600	PINFN2:	FETCH(T,F,PINN)		;PIN #
20700		CAME T,B
20800		JRST PINFN1
20900		FETCH(T,F,PBDY)		;BODY POINTER
21000		FETCH(T,T,BLOC)		;LOC
21100		CAMN A,T
21200		JRST CPOPJ1
21300	PINFN1:	FETCH(F,F,NXTP)
21400		JUMPN F,PINFN2
21500		POPJ P,
     	00100	SUBTTL	'WLD'		DIP LOC CHECK
00200	DIPCOM:	MOVE L,DEFLST
00300		HRLZM L,GOODW
00400		HRLZM L,BADW
00500		FETCH(W,L,WIRL)
00600		PUSHJ P,LSTGT0
00700		POPJ P,
00800		HRRM W,GOODW
00900		HLRZ L,BADW
01000		FETCH(W,L,PCWL)
01100		JUMPE W,NXCRD1
01200		PUSHJ P,GETLOP
01300		JRST NXCRD1
01400		HRRM W,BADW
01500		MOVSI T,'WLD'		;ERROR LISTING FOR WIRE LIST COMPARISON
01600		MOVEI TT,0		;DATA MODE 0
01700		MOVSI TTT,'DSK'
01800		PUSHJ P,OUTSET
01900		POPJ P,
02000		HRRZ W,GOODW
02100		PUSHJ P,FILLST
02200		 CHDR
02300		PUSHJ P,DOWLD
02400		RELEASE LST,
02500		POPJ P,
02600	
02700	DOWLD:	PUSHJ P,CLEARB
02800		MOVEI T,[ASCIZ\DIP TYPE/SOCKET MIS-MATCHING
02900	LOC	BODY	FILE	POS	DIPTYPE	PINS	PC PINS\]
03000		MOVEM T,HEADER
03100		MOVEI T,WLDMAR
03200		MOVEM T,MARGIN
03300		SETZM LINCNT
03400		HRRZ W,GOODW
03500		MOVEI H,RADDR(W,WBDY,NXTB)
03600		SETZM LETTER
03700		JRST DIPC1Z
03800	
03900	DIPC2Z:	FETCH(TT,H,BBIT)
04000		FETCH(T,H,BLOC)
04100		TRNE TT,CBODY		;CON?
04200		JRST DIPC1X		;YES, DO DIFFERENTLY
04300		JUMPE T,DIPC3Z		;ANY LOC?
04400		CAMN T,LETTER		;NEW LOC?
04500		JRST DIPC1Z		;NO, GET ANOTHER
04600		MOVEM T,LETTER
04700		MOVE C,BADW
04800		MOVEI C,RADDR(C,WBDY,NXTB)
04900		PUSHJ P,FN2BOD		;FIND THE LOC
05000		JRST DIPC4		;NO LOC ON PC CARD!
05100		FETCH(T,C,BBIT)
05200		TRO T,BTMP1
05300		STORE(T,C,BBIT)
05400		PUSHJ P,DIPMAX		;FIND MAX PIN # OF SOCKET
05500		FETCH(TTT,H,DIPT)	;DIPTYPE
05600		JUMPE TTT,DIPC5		;NO DIP TYPE?
05700		FETCH(TTT,TTT,DPNN)	;# OF PINS
05800		CAME TTT,PINNUM
05900		JRST DIPC6		;SAME # OF PINS, NO ERROR
06000		HRLM C,(P)
06100		PUSHJ P,FN2BOD		;SEE IF THERE IS ANOTHER
06200		JRST DIPC1Z		;NO, OK
06300		SKIPL LINCNT
06400		PUSHJ P,CHDR
06500		CRLF
06600		MOVE T,C
06700		HLRZ C,(P)
06800		HRLM T,(P)
06900		MOVE A,LETTER
07000		FETCH(T,C,BBIT)		;BODY BITS
07100		PUSHJ P,WLOCOUT
07200		PUSHJ P,DIPC1C		;REST OF LINE
07300		HLRZ C,(P)
07400		JRST DIPC1B
07500	
07600	DIPC1A:	PUSHJ P,FN2BOD		;TRY TO FIND ANOTHER SUCH LOC
07700		JRST DIPC1Z
07800	DIPC1B:	PUSHJ P,DIPC1C
07900		JRST DIPC1A
08000	
08100	DIPC1C:	PUTSTR[ASCIZ/				/]
08200		PUSHJ P,DIPMAX		;GET MAX PINS
08300		MOVE T,PINNUM
08400		PUSHJ P,DECOUT
08500		ERRSTR 3,[ASCIZ/MULTIPLE DIPS WITH SAME LOC/]
08600		POPJ P,
08700	
08800	DIPC1X:	FETCH(TT,H,BBIT)
08900		TRNE TT,BWILD		;SKIP WILD CARD CPINS
09000		JRST DIPC1Z
09100		MOVEM T,LETTER		;STORE LOC
09200		MOVE C,BADW
09300		MOVEI C,RADDR(C,WBDY,NXTB)
09400		PUSHJ P,FN2BOD		;FIND CON ON PC CARD
09500		JRST DIPC1N		;NO SUCH PADDLE
09600		FETCH(F,C,BPIN)		;FIRST PIN ON PC CARD
09700		FETCH(G,H,BPIN)		;FIRST PIN
09800		TLZ TFLG		;NO LOC OUT YET
09900	DIPC1Y:	FETCH(T,G,PINN)
10000	DIPC2Y:	JUMPE F,DIPC1M		;IF NO MORE PC PINS, THEN ERROR
10100		FETCH(TT,F,PINN)	;PIN #
10200		CAMLE T,TT		;PAST RIGHT PLACE YET?
10300		JRST DIPC1M		;YES, ERROR
10400		CAMN T,TT		;IS THIS IT?
10500		JRST DIPC1W		;YES, NEXT
10600		FETCH(F,F,NXBP)
10700		JRST DIPC2Y		;NEXT PC PIN
10800	
10900	DIPC1W:	FETCH(G,G,NXBP)
11000		JUMPN G,DIPC1Y
11100		JRST DIPC1Z
11200	
11300	DIPC1M:	SKIPGE LINCNT
11400		JRST DIPC0L
11500		PUSHJ P,CHDR
11600		TLZ TFLG		;NEED LOC AGAIN
11700	DIPC0L:	TLOE TFLG		;LOC NEEDED?
11800		JRST DIPC1L		;NO
11900		MOVE A,LETTER
12000		FETCH(T,H,BBIT)
12100		PUSHJ P,WLOCOUT
12200	DIPC1L:	PUSHJ P,CPINPN
12300		ERRSTR 2,[ASCIZ/NON EX PIN ON PADDLE/]
12400		JRST DIPC1W
12500	
12600	CPINPN:	PUTSTR[ASCIZ/		/]		;NO BODY
12700		FETCH(A,G,FILP)
12800		PUTSIX ADDR(A,FILN)			;FILE NAME
12900		PUTSTR[ASCIZ/		CON	/]		;DIP TYPE
13000		FETCH(A,G,PINN)
13100		PUSHJ P,PRCNPN
13200		PUTBYT 11
13300		SKIPN A,PINNUM
13400		POPJ P,
13500		JRST PRCNPN
13600	
13700	DIPC1N:	TLZ TFLG
13800	DIPC2N:	SKIPGE LINCNT
13900		JRST DIPC3N
14000		PUSHJ P,CHDR
14100		TLZ TFLG
14200	DIPC3N:	TLOE TFLG
14300		JRST DIPC4N
14400		MOVE A,LETTER
14500		FETCH(T,H,BBIT)
14600		PUSHJ P,WLOCOUT
14700		FETCH(G,H,BPIN)
14800	DIPC4N:	PUSHJ P,CPINPN
14900		ERRSTR 2,[ASCIZ/NO SUCH PADDLE ON PC CARD/]
15000		FETCH(G,G,NXBP)
15100		JUMPN G,DIPC2N
15200	DIPC1Z:	FETCH(H,H,NXTB)
15300		JUMPN H,DIPC2Z
15400		MOVEI T,[ASCIZ/DIP SOCKETS NOT USED IN LOGIC DRAWING
15500	LOC	PINS/]
15600		MOVEM T,HEADER
15700		SETZM LINCNT
15800		MOVE C,BADW
15900		MOVEI C,RADDR(C,WBDY,NXTB)		;NOW FIND THE SLACKERS
16000		JRST DIPC8
16100	
16200	DIPC7:	FETCH(T,C,BBIT)
16300		TRNE T,BTMP1!CBODY
16400		JRST DIPC8		;ALREADY SEEN, OK
16500		SKIPL LINCNT
16600		PUSHJ P,CHDR
16700		FETCH(T,C,BBIT)
16800		FETCH(A,C,BLOC)
16900		PUSHJ P,WLOCOUT
17000		PUTBYT 11
17100		PUSHJ P,DIPMAX
17200		MOVE T,PINNUM
17300		PUSHJ P,DECOUT
17400		CRLF
17500	DIPC8:	FETCH(C,C,NXTB)
17600		JUMPN C,DIPC7
17700		POPJ P,
17800	
17900	DIPMAX:	SETZ TTT,		;MAX PC PIN SO FAR
18000		MOVEI A,RADDR(C,BPIN,NXBP)
18100		JRST DIPC2A
18200	
18300	DIPC2B:	FETCH(TT,A,PINN)	;PIN #
18400		CAMLE TT,TTT
18500		MOVE TTT,TT
18600	DIPC2A:	FETCH(A,A,NXBP)
18700		JUMPN A,DIPC2B
18800		MOVEM TTT,PINNUM
18900		POPJ P,
19000	
19100	DIPC3Z:	MOVEM T,LETTER		;BLANK LOC
19200		SETZM PINNUM
19300		PUSHJ P,BDPNTA
19400		ERRSTR 0,[ASCIZ/NO LOCATION IN LOGIC DRAWING/]
19500		JRST DIPC1Z
19600	
19700	DIPC4:	SETZM PINNUM
19800		PUSHJ P,BDPNTA
19900		ERRSTR 1,[ASCIZ/NO SUCH LOCATION ON PC CARD/]
20000		JRST DIPC1Z
20100	
20200	DIPC5:	PUSHJ P,BDPNTA
20300		ERRSTR 0,[ASCIZ/NO DIP TYPE/]
20400		JRST DIPC1A
20500	
20600	DIPC6:	HRLM TTT,PINNUM		;STORE # OF PINS FOR PRINTING
20700		PUSHJ P,BDPNT
20800		ERRSTR 2,[ASCIZ/WRONG NUMBER OF PINS FOR DIP/]
20900		JRST DIPC1A
21000	
21100	BDPNTA:	FETCH(T,H,DIPT)		;DIP POINTER
21200		SKIPE T			;ANY DIP TYPE?
21300		FETCH(T,T,DPNN)		;YES, GET NUMBER OF PINS
21400		HRLM T,PINNUM		;NUMBER OF PINS ON DIP
21500	BDPNT:	SKIPL LINCNT
21600		PUSHJ P,CHDR
21700		CRLF
21800		MOVE A,LETTER
21900		FETCH(T,H,BBIT)
22000		PUSHJ P,WLOCOUT		;PRINT LOC
22100		PUTBYT 11
22200		SKIPN ADDR(H,BNAM)
22300		PUTSTR[ASCIZ/NONE/]
22400		PUTSTR ADDR(H,BNAM)
22500		PUTBYT 11
22600		FETCH(A,H,FILB)
22700		PUTSIX ADDR(A,FILN)
22800		PUTBYT 11
22900		FETCH(A,H,BBIT)
23000		PUSHJ P,BPPNT
23100		PUTBYT 11
23200		FETCH(A,H,DIPT)
23300		JUMPE A,[PUTSTR[ASCIZ/NONE/]
23400			JRST BDPNT2]
23500		FETCH(A,A,DNAM)
23600		PUSHJ P,STROUT
23700	BDPNT2:	PUTBYT 11
23800		HLRZ T,PINNUM
23900		SKIPE T
24000		PUSHJ P,DECOUT
24100		PUTBYT 11
24200		HRRZ T,PINNUM
24300		JUMPE T,CPOPJ
24400		JRST DECOUT
24500	
24600	CLEARB:	MOVEI TT,RADDR(W,WBDY,NXTB)
24700		JRST CLRB1
24800	
24900	CLRB2:	FETCH(TTT,TT,BBIT)
25000		TRZ TTT,BTMP1
25100		STORE(TTT,TT,BBIT)
25200	CLRB1:	FETCH(TT,TT,NXTB)
25300		JUMPN TT,CLRB2
25400		POPJ P,
25500	
25600	CLEARW:	MOVEI T,RADDR(W,WIRES,ALPH)
25700		JRST CLRW1
25800	
25900	CLRW2:	FETCH(TT,T,WBIT)
26000		TRZ TT,WTMP1
26100		STORE(TT,T,WBIT)
26200	CLRW1:	FETCH(T,T,ALPH)
26300		JUMPN T,CLRW2
26400		POPJ P,
     	00100	SUBTTL	'DAT'		PARTITION FILE OUTPUT
00200	DOPART:	MOVE L,DEFLST
00300		PUSHJ P,LSTGET
00400		POPJ P,
00500		PUSHJ P,DIPCHK
00600		JRST [	OUTSTR[ASCIZ/SORRY, COULDN'T GET DIPS IN!
00700	/]
00800			POPJ P,]
00900		PUSH P,LSTNAM		;SAVE DEFAULT NAME
01000		MOVE T,[DATNAM]
01100		MOVEM T,LSTNAM		;SET TO THIS FOR NOW
01200		MOVSI T,'DAT'		;PARTITION FILE EXTENSION
01300		MOVEI TT,0		;DATA MODE
01400		MOVSI TTT,'DSK'
01500		PUSHJ P,OUTSET
01600		JRST [	POP P,LSTNAM
01700			POPJ P,]	;HE GAVE UP!
01800		POP P,LSTNAM
01900		ASK[ASCIZ/PASS PRE-PLACED DIP LOCATIONS?/]
02000		JRST PARTQT
02100		TRZA FLAG
02200		TRO FLAG
02300		PUSHJ P,PARDEF		;PUT OUT BODY DEFS IN FRONT OF FILE
02400		MOVEI T,3		;AVOID SPECIAL SIGS
02500		MOVEM T,FACTR1		;INIT SIGNAL # COUNTER
02600		MOVEI H,RADDR(W,WIRES,ALPH)
02700		JRST PART1
02800	
02900	PART2:	FETCH(B,H,WBIT)
03000		TRNE B,NAM2ND!WNULL
03100		JRST PART1		;SKIP FAKE WIRES
03200		MOVEI T,2
03300		TRNE B,SPWR
03400		JRST PARTGS		;2 = CODE FOR PWR
03500		TRNN B,WSINGL		;SINGLE OR
03600		TRNE B,SNC		;NAME NC
03700		SOJA T,PARTGS		;1 = CODE FOR NC
03800		TRNE B,SGND
03900		AOJA T,PARTGS		;3 = CODE FOR GND
04000		AOS T,FACTR1		;NOT PWR OR GND, GENERATE A NEW NUMBER
04100	PARTGS:	STORE(T,H,WTMP)		;STORE SEQ. # IN LH OF WIRE HEAD WORDS
04200	PART1:	FETCH(H,H,ALPH)		;NEXT WIRE
04300		JUMPN H,PART2
04400		MOVEI H,RADDR(W,WBDY,NXTB)
04500		JRST BPART1
04600	
04700	BPART2:	FETCH(T,H,DIPT)		;DIP TYPE
04800		JUMPE T,BPART1		;LOSER
04900		FETCH(T,T,DTMP)		;GET DIP # (GENERATED BY PARDEF)
05000		JUMPE T,BPART1		;SKIP ONES WITH NO DIP #! (THEY WEREN'T 14 OR 16 PIN DIPS)
05100		FETCH(T,H,BPIN)
05200		JUMPE T,BPART1		;SKIP ONES WITH NO PINS!
05300		PUSHJ P,MAXSET		;CALC MAX SECT PIN #
05400		SETOM FACTR1		;SET LAST SEC #
05500		PUSHJ P,NXTSEC		;FIND FIRST
05600		JRST [	OUTSTR[ASCIZ/GROSS LOSSAGE AT BPART, NO SECTIONS FOUND FOR BODY /]
05700			OUTSTR ADDR(H,BNAM)
05800			OUTSTR[ASCIZ/
05900	/]
06000			JRST BPART1]
06100	BPART3:	MOVEM T,FACTR1		;MAKE IT THE ONE
06200		PUSHJ P,BHPNT		;PRINT BODY HEADER
06300		PUSHJ P,F4CRLF
06400		SETZ G,
06500		MOVEI F,G		;START HERE FOR ID LIST
06600		MOVE D,FACTR2		;THIS IS SETUP TO AOBJN POINTER
06700	SPART0:	PUSHJ P,PNFND		;PIN FOR PIN# IN D AND SECT # IN FACTR1
06800		JRST [	PUSHJ P,PINID0	;PIN ID FOR NO PIN
06900			MOVEI T,1	;THIS SIGNAL #
07000			JRST SPART1]
07100		PUSHJ P,PHPNT		;PRINT SIGNAL # AND LINK ID INTO LIST
07200	SPART1:	PUSHJ P,DEC5
07300		AOBJN D,SPART0		;DO THEM ALL
07400	BPART4:	PUSHJ P,F4CRLF		;END OF SIGNAL #'S
07500		PUSHJ P,PIDPNT		;POOT OUT ID'S
07600		PUSHJ P,NXTSEC		;TRY FOR ANOTHER SECTION
07700		CAIA
07800		JRST BPART3		;GOT ANOTHER, LOOP BACK
07900	BPART1:	FETCH(H,H,NXTB)		;ANOTHER BODY
08000		JUMPN H,BPART2
08100		PUTSTR[ASCIZ/           0/]	;END BODIES
08200		PUSHJ P,F4CRLF
08300		SKIPE ISWW
08400		PUSHJ P,WAGGND		;PUT OUT GND AND PWR FIRST
08500		SKIPN ISWW
08600		OUTSTR[ASCIZ/SINCE THIS IS NOT A WIRE WRAP BOARD
08700	I CAN'T PASS PWR AND GND EDGE CONNECTIONS!
08800	/]
08900		MOVEI H,RADDR(W,WBDY,NXTB)	;BACK TO BODY LIST
09000		JRST CPART1
09100	
09200	CPART2:	FETCH(T,H,BBIT)			;LOC
09300		TRNN T,CBODY			;CONNECTOR?
09400		JRST CPART1			;NO, SKIP IT
09500		FETCH(T,H,BLOC)
09600		MOVEM T,FACTR1
09700		MOVEI G,RADDR(H,BPIN,NXBP)
09800		JRST CPART3
09900	
10000	CPART4:	FETCH(T,G,PID)			;PIN ID
10100		PUSHJ P,OCT6			;PRINT IT
10200		FETCH(D,G,FILP)
10300		FETCH(D,D,FILN)
10400		HLRZ T,D
10500		PUSHJ P,OCT6			;LH FILENAME
10600		HRRZ T,D
10700		PUSHJ P,OCT6			;RH FILENAME
10800		FETCH(TT,G,PBDY)
10900		FETCH(TT,TT,BBIT)
11000		TRNE TT,BWILD
11100		TDZA TT,TT
11200		FETCH(TT,G,PINN)
11300		MOVE T,FACTR1
11400		PUSHJ P,CPARTP
11500		FETCH(T,G,HPNT)
11600		FETCH(T,T,WTMP)			;SIGNAL #
11700		PUSHJ P,DEC5
11800		PUSHJ P, F4CRLF			;THAT'S ALL
11900	CPART3:	FETCH(G,G,NXBP)			;LOOP THROUGH PINS
12000		JUMPN G,CPART4
12100	CPART1:	FETCH(H,H,NXTB)			;NEXT BODY
12200		JUMPN H,CPART2
12300		PUTSTR[ASCIZ/     0/]		;END OF CONNECTOR PINS
12400		PUSHJ P,F4CRLF
12500	PARTQT:	RELEASE LST,			;FINI
12600		POPJ P,
12700	
12800	PIDPNT:	JUMPE G,F4CRLF		;ANY LIST AT ALL?
12900	PIDPN1:	MOVE F,G
13000		FETCH(T,F,TRHT)		;PIN ID
13100		PUSHJ P,OCT6		;PRINT IT
13200		FETCH(G,G,NXTT)
13300		FSTRET(F,TBLK)
13400		JUMPN G,PIDPN1
13500		JRST F4CRLF		;DO CRLF
13600	
13700	
13800	PHPNT:	FETCH(T,A,PID)
13900		GETFS(TT,TBLK)
14000		STORE(T,TT,TRHT)
14100		CLEAR(TT,NXTT)
14200		STORE(TT,F,NXTT)
14300		MOVE F,TT		;NEW END
14400		FETCH(T,A,HPNT)
14500		FETCH(T,T,WTMP)
14600		POPJ P,			;RETURN SIGNAL # IN T
14700	
14800	PINID0:	GETFS(TT,TBLK)		;STORE A 0 ID IN ID LIST
14900		CLEAR(TT,NXTT)
15000		CLEAR(TT,TRHT)
15100		STORE(TT,F,NXTT)
15200		MOVE F,TT
15300		POPJ P,
15400	
15500	BHPNT:	FETCH(T,H,FILB)		;OH WELL, THIS IS UNIQUE FOR THE SLICE
15600		PUSHJ P,OCT6
15700		FETCH(T,H,BID)
15800		PUSHJ P,OCT6		;BODY ID
15900		FETCH(B,H,FILB)
16000		FETCH(B,B,FILN)
16100		HLRZ T,B
16200		PUSHJ P,OCT6		;LH FILENAME
16300		HRRZ T,B
16400		PUSHJ P,OCT6		;RH FILENAME
16500		FETCH(T,H,DIPT)
16600		FETCH(T,T,DTMP)
16700		PUSHJ P,DEC5		;DIP #
16800		TRNN FLAG		;PASSING LOCS?
16900		POPJ P,			;NO, QUIT
17000		FETCH(A,H,BLOC)
17100		LDB T,[POINT 12,A,35]
17200		PUSHJ P,DEC5		;THIS IS X
17300		LDB T,[POINT 6,A,23]
17400		JRST DEC5		;THIS IS Y
17500	
17600	NXTSEC:	MOVEI T,100		;PICK ULTRA GROSS SEC # (.GE. 18)
17700		FETCH(TT,H,BPIN)
17800	NXTSC2:	HRLM TT,(P)
17900		FETCH(TTT,TT,PTYP)	;TYPE POINTER
18000		JUMPE TTT,NXTSC1	;UGH!
18100		FETCH(TT,TTT,DPBIT)
18200		TRNN TT,INLD!OUTLD!TERM
18300		JRST NXTSC1
18400		FETCH(TT,TTT,SCTB)
18500		MOVS TT,TT
18600		JFFO TT,.+2		;CALC SECT #
18700		JRST NXTSC1
18800		CAMLE T,TTT		;SMALLER THAN SMALLEST?
18900		CAMG TTT,FACTR1		;YES, LARGER THAN LAST?
19000		JRST NXTSC1		;NO
19100		MOVE T,TTT		;YES, SAVE IT
19200	NXTSC1:	HLRZ TT,(P)
19300		FETCH(TT,TT,NXBP)
19400		JUMPN TT,NXTSC2
19500		CAIE T,100		;THIS TELLS US IF WE FOUND ANOTHER
19600		AOS (P)			;FOUND ANOTHER, SKIP
19700		POPJ P,
19800	
19900	MAXSET:	FETCH(T,H,DIPT)		;DIP POINTER
20000		SETZM FACTR2		;MAX PIN #
20100		FETCH(T,T,DPIN)
20200	MAXPN1:	FETCH(TT,T,DPBIT)
20300		TRNN TT,INLD!OUTLD!TERM
20400		JRST MAXPN2
20500		FETCH(TTT,T,SCTP)
20600		CAMLE TTT,FACTR2	;BIGGER THAN MAX SO FAR?
20700		MOVEM TTT,FACTR2	;YES, STORE
20800	MAXPN2:	FETCH(T,T,DPNXT)
20900		JUMPN T,MAXPN1
21000		MOVN T,FACTR2
21100		HRLZM T,FACTR2
21200		AOS FACTR2		;THIS IS NOW A STARTING POINTER
21300		POPJ P,
21400	
21500	PNFND:	MOVEI A,RADDR(H,BPIN,NXBP);START HERE
21600		JRST PNFND1
21700	
21800	PNFND2:	FETCH(TT,A,PTYP)
21900		JUMPE TT,PNFND1		;ANY TYPE POINTER?
22000		FETCH(T,TT,DPBIT)
22100		TRNN T,INLD!OUTLD!TERM
22200		JRST PNFND1
22300		FETCH(T,TT,SCTP)
22400		CAIE T,(D)		;SAME SECT PIN #?
22500		JRST PNFND1		;NO
22600		FETCH(T,TT,SCTB)
22700		MOVS T,T
22800		JFFO T,.+1		;CALC SECT #
22900		CAMN TT,FACTR1		;SAME?
23000		JRST CPOPJ1		;YES, RETURN
23100	PNFND1:	FETCH(A,A,NXBP)		;NO, LOOK FORWARD
23200		JUMPN A,PNFND2
23300		POPJ P,
23400	
23500	OCT6:	MOVEI TTT,6
23600	OCT6A:	IDIVI T,10
23700		HRLM TT,(P)
23800		SOJLE TTT,.+2
23900		PUSHJ P,OCT6A
24000		HLRZ TTT,(P)
24100		ADDI TTT,60
24200		XCT PUTCHR
24300		POPJ P,
     	00100	;		PARTITION DIP DEFINITION OUTPUT
00200	PARDEF:	SETZM FACTR1		;INITIALIZE DIP #'S
00300		PUSHJ P,DCLEAR
00400		MOVEI H,RADDR(W,WBDY,NXTB)
00500		JRST DBPRT1
00600	
00700	DBPRT2:	PUSH P,H
00800		MOVE A,H	;SAVE BODY POINTER FOR ERROR PRINTOUT
00900		FETCH(H,H,DIPT)
01000		JUMPE H,[FETCH(T,A,BBIT)
01100			TRNE T,CBODY	;CONNECTOR BODY?
01200			JRST .+2	;YES, PROCEED
01300			OUTSTR[ASCIZ/NO DIP TYPE FOR /]
01400			PUSHJ P,DEFLOS
01500			JRST .+2]
01600		PUSHJ P,DIPDEF
01700		POP P,H
01800	DBPRT1:	FETCH(H,H,NXTB)
01900		JUMPN H,DBPRT2
02000	NPARDP:	PUTSTR[ASCIZ/    0/]
02100		JRST F4CRLF
02200	
02300	DEFLOS:	SKIPN ADDR(A,BNAM)
02400		JRST [	OUTSTR[ASCIZ/UNNAMED BODY/]
02500			JRST UNNDEF]
02600		OUTSTR ADDR(A,BNAM)
02700	UNNDEF:	HRLM A,(P)
02800		FETCH(A,A,DIPT)
02900		JUMPE A,DEFLSD
03000		OUTSTR[ASCIZ/, DIP TYPE IS /]
03100		FETCH(A,A,DNAM)
03200		PUSHJ P,STRTTY
03300	DEFLSD:	HLRZ A,(P)
03400		OUTSTR[ASCIZ/, YOU ARE LOSING!
03500	/]
03600		POPJ P,
03700	
03800	
03900	;POOT OUT 1 DIP DEF
04000	DIPDEF:	FETCH(T,H,DPNN)		;# OF PINS
04100		CAIE T,=14
04200		CAIN T,=16
04300		CAIA
04400		JRST [	OUTSTR[ASCIZ/DIP TYPE NOT 14 OR 16 PINS FOR /]
04500			JRST DEFLOS]
04600		FETCH(T,H,DTMP)
04700		JUMPN T,CPOPJ		;ALREADY OUT!
04800		AOS T,FACTR1
04900		STORE(T,H,DTMP)
05000		PUSHJ P,SECCAL		;CALC DIP DIVISION
05100		FETCH(T,H,DTMP)
05200		PUSHJ P,DEC5		;THEN PRINT DIP #
05300		MOVE T,G		;PINS/UNIT
05400		PUSHJ P,DEC5
05500		MOVEI T,1(F)		;UNITS/PKG
05600		PUSHJ P,DEC5
05700		FETCH(T,H,DPNN)		;PINS/PKG
05800		PUSHJ P,DEC5
05900		MOVEI TTT,PWR
06000		PUSHJ P,PG5		;FIND AND PRINT PWR PIN
06100		MOVEI TTT,GND
06200		PUSHJ P,PG5		;FIND AND PRINT GND PIN
06300		FETCH(A,H,DNAM)
06400		PUSHJ P,STROUT		;PRINT DIP NAME
06500		PUSHJ P,F4CRLF
06600	DPART7:	HRLZ G,G		;G HAS # OF PINS/SEC
06700		TLC G,-1
06800		AOBJN G,.+1		;NOW HAS -COUNT,,PIN #
06900		MOVNI F,1(F)		;INC BY 1 FOR COUNT
07000		HRLZ F,F		;NOW HAS -COUNT,,SEC #
07100	DPRT7A:	MOVE E,G		;INIT E FROM G
07200		HRRZ D,F		;INTI RH OF D TO SEC #
07300	DPRT7B:	HRL D,E			;SET LEFT HALF TO PIN #
07400		PUSHJ P,PPNT5		;FIND AND PRINT PIN
07500		AOBJN E,DPRT7B		;LOOP FOR ALL PINS
07600		AOBJN F,DPRT7A		;LOOP FOR ALL SECTIONS
07700		JRST F4CRLF		;END WITH A CRLF
07800	
07900	;FIND A PWR OR GND PIN AND PRINT IT
08000	PG5:	FETCH(TT,H,DPIN)
08100		MOVEI T,1
08200		MOVEM TTT,1(P)
08300	PG5A:	FETCH(TTT,TT,DPBIT)
08400		TDNE TTT,1(P)
08500		JRST DEC5
08600		ADDI T,1
08700		FETCH(TT,TT,DPNXT)
08800		JUMPN TT,PG5A
08900		SETZ T,
09000		OUTSTR[ASCIZ/PWR OR GND NOT FOUND ON DIP /]
09100		FETCH(A,H,DNAM)
09200		PUSHJ P,STRTTY
09300		OUTSTR[ASCIZ/, WILL PASS 0!
09400	/]
09500	DEC5:	MOVEI TT,5
09600		MOVEM TT,NDIG
09700		JRST NDECOUT
09800	
09900	;ENTER WITH H=DIP DEF POINTER  D=PIN#,,SEC#
10000	PPNT5:	FETCH(TT,H,DPIN)
10100		MOVEI T,1
10200	PPNT5A:	FETCH(TTT,TT,DPBIT)
10300		TRNN TTT,INLD!OUTLD!TERM
10400		JRST PPNT5B
10500		FETCH(TTT,TT,SCTP)
10600		HRLZ TTT,TTT		;PICK UP PIN #
10700		XOR TTT,D
10800		TLNE TTT,-1		;SAME?
10900		JRST PPNT5B		;NO
11000		HRLM TT,(P)
11100		FETCH(TT,TT,SCTB)
11200		MOVS TT,TT
11300		JFFO TT,.+2
11400		JRST PPNT5B
11500		CAIN TTT,(D)		;SAME SEC #?
11600		JRST DEC5		;YES, PHY PIN # IN T, PRINT IT
11700		HLRZ TT,(P)		;RESTORE TT
11800	PPNT5B:	ADDI T,1
11900		FETCH(TT,TT,DPNXT)
12000		JUMPN TT,PPNT5A
12100		OUTSTR[ASCIZ/PIN /]
12200		HLRZ T,D
12300		PUSHJ P,TTYDEC
12400		OUTSTR[ASCIZ/ OF SECTION /]
12500		HRRZ T,D
12600		PUSHJ P,TTYDEC
12700		OUTSTR[ASCIZ/ NOT FOUND ON DIP /]
12800		FETCH(A,H,DNAM)
12900		PUSHJ P,STRTTY
13000		OUTSTR[ASCIZ/, WILL PASS 0!
13100	/]
13200		SETZ T,
13300		JRST DEC5
13400	
13500	;CALL WITH DIP POINTER IN H, RETURN WITH PINS/SEC IN G, SEC/DIP IN F
13600	SECCAL:	SETOB G,F		;START THEM OUT AS 0
13700		FETCH(TTT,H,DPIN)
13800	DPART3:	FETCH(TT,TTT,DPBIT)
13900		TRNN TT,INLD!OUTLD!TERM	;INPUT OR OUTPUT PIN?
14000		JRST DPART0
14100		FETCH(T,TTT,SCTP)	;SECT PIN #
14200		CAMLE T,G		;LARGER?
14300		MOVE G,T		;NEW LARGEST
14400		FETCH(T,TTT,SCTB)
14500		MOVS T,T
14600		JFFO T,.+2
14700		JRST DPART0
14800		CAMLE TT,F		;LARGER SECT #?
14900		MOVE F,TT		;YES
15000	DPART0:	FETCH(TTT,TTT,DPNXT)
15100		JUMPN TTT,DPART3
15200		POPJ P,
15300	
15400	DCLEAR:	SKIPN H,DIPLST
15500		POPJ P,
15600	DPART1:	CLEAR(H,DTMP)
15700		FETCH(H,H,NXTD)
15800		JUMPN H,DPART1
15900		POPJ P,
     	00100	SUBTTL	OUTSET
00200	;SETUP DEVICE AND NAME FOR OUTPUT
00300	OUTSET:	SETZM ALLNAM
00400	ALLSET:	MOVEM T,DEFEXT		;DEFAULT EXTENSION
00500		HRRM TT,OUTMOD		;SET DATA MODE
00600		MOVEM TTT,OUTDEV
00700	NOITS,<
00800		JUMPN TT,OUTMOD		;FOR FULL WORD MODE NO OTHER DEVICE
00900		MOVSI TTT,'LST'
01000		DEVCHR TTT,
01100		JUMPE TTT,OUTMOD
01200		MOVSI TTT,'LST'
01300		MOVEM TTT,OUTDEV
01400	>;NOITS
01500	OUTMOD:	INIT LST,10
01600	OUTDEV:	'DSK   '		;ALWAYS USE DISK!
01700		XWD LSTHD,0
01800		JRST [	OUTSTR[ASCIZ/INIT FAILED ON OUTPUT DEVICE!
01900	/]
02000			JRST ERRET]
02050		SETZM PAGCNT		;START WITH THE FIRST PAGE
02100		SETZM LCOUNT		;START AT LEFT MARGIN
02200		SETZM LINCNT		;NEED HEADER
02300		TLO NOFF		;BUT ALREADY AT TOP!
02400		MOVEI T,LSTBUF
02500		EXCH T,.JBFF
02600		OUTBUF LST,2
02700		MOVEM T,.JBFF
02800		MOVE T,[PUSHJ P,BYTOUT]	;SETUP OUTPUT ROUTINE (EVEN FOR BINARY)
02900		MOVEM T,PUTCHR
03000		SETZM TTYFLG		;ASSUME NOT OUT TO TTY
03100		TLZ DEC,<COMLIN!>SIMTAB	;NOT SIMULATING TABS NORMALLY OR COMMENTING
03200		SETZM PNTNAM		;NO NAME TO PRINT YET
03300	NOITS,<
03400		MOVE T,OUTDEV
03500		DEVCHR T,		;CHECK IF HE REASSIGNED THE DISK
03600		TLNE T,10		;TTY?
03700		SETOM TTYFLG		;YES
03800		TLNN T,4		;DOES IT STILL HAVE A DIRECTORY?
03900		JRST CPOPJ1		;NON-DIRECTORY DEVICE, QUIT NOW
04000	>;NOITS
04100		SKIPN T,ALLNAM
04200		JRST NOALLF
04300		MOVEM T,FILNAM
04400		MOVE T,ALLPPN
04500		MOVEM T,FILPPN
04600		MOVE T,DEFEXT
04700		MOVEM T,FILEXT
04800		SETZM FILDAT
04900		PUSH P,A
05000		MOVE T,[OUTCHR TTT]
05100		MOVEM T,PUTCHR
05200		MOVEI A,FILNAM
05300		PUSHJ P,FILPNT
05400		POP P,A
05500		JRST GOTALL
05600	
05700	NOALLF:	PUSHJ P,SETFIL
05800		POPJ P,
05900	GOTALL:	MOVE T,[PUSHJ P,BYTOUT]	;LOSING SETFIL CLOBBERED THIS
06000		MOVEM T,PUTCHR
06100		MOVE T,FILPPN
06200		LOOKUP LST,FILNAM
06300		SKIPA TT,FILEXT
06400		SETO TT,
06500		MOVEM T,FILPPN
06600		CLOSE LST,			;DON'T GET INTO ALTER MODE!!!
06700		TRNN TT,-1
06800		JRST NOEXST
06900	IFN 0,<	ASK[ASCIZ/ ALREADY EXISTS, REPLACE?/]
07000		POPJ P,
07100		POPJ P,
07200	;>	OUTSTR[ASCIZ/, BEING REPLACED/]
07300	NOEXST:	HLLZS FILEXT
07400		SETZM FILDAT
07500		ENTER LST,FILNAM
07600		JRST [	OUTSTR[ASCIZ/ ENTER FAILED, CODE= /]
07700			HRRZ T,FILEXT
07800			PUSHJ P,TTYDEC
07900			OUTSTR[ASCIZ/
08000	/]
08100			POPJ P,]
08200		OUTSTR[ASCIZ/
08300	/]
08400		MOVE T,FILNAM
08500		MOVEM T,LSTNAM
08600		MOVEM T,PNTNAM
08700		MOVEM T,ALLNAM
08800		HLLZ T,FILEXT
08900		MOVEM T,PNTEXT
09000		SKIPN T,FILPPN
09100		DSKPPN T,
09200		MOVEM T,PNTPPN
09300		MOVEM T,ALLPPN
09400		JRST CPOPJ1
     	   