;<DRAW>BTEXT.FAI.64, 15-NOV-75 18:03:04, EDIT BY HELLIWELL
VERSION(BTEXT,3)
MD,<
;BODY TEXT MODE TEXT AND PROPERTY PLACEMENT
ENTBTB:	MOVE A,BTBODY
	HLRZ A,(A)
	HRRZ A,1(A)
	JRST ALREAD		;ENTER EDITOR ON THIS BODY

ENTBTM:	PUSHJ P,GETCLS
	JRST PERRET
	MOVEM A,BTBODY
	MOVEI T,BTXTM
	JRST CHNGMD

BTXPLB:	PUSHJ P,GETCLS
	JRST PERRET
	CAIA
BTXPLC:	MOVE A,BTBODY
	SETZM BTEXT
	PUSHJ P,BTXPUT
	JFCL
	HRRZ TT,(E)
	HLRZ T,(TT)
	JUMPN T,CPOPJ
	MOVEI T,STDBIG
	HRLM T,(TT)
	POPJ P,

BTXPRB:	PUSHJ P,GETCLS
	JRST PERRET
	CAIA
BTXPRP:	MOVE A,BTBODY
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/PROPERTY NAME?
/]
	PUSHJ P,TREADU
	POPJ P,
	POPJ P,
	MOVE T,B
	PUSHJ P,BFPROP
	JRST BTXPNW
	TROA TFLG		;REMEMBER FOUND IN BODY DEF
	TRZ TFLG		;REMEMBER FOUND IN BODY
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/OLD PROPERTY, NEW TEXT?
/]
BTXPR1:	MOVE E,T		;SAVE POINTER TO BLOCK
	PUSHJ P,TXREAD
	CAIE C,ALTMOD
	SKIPN 1(B)
	JRST PUTFS
	PUSH P,TT
	PUSH P,T
	TRNE TFLG		;DID WE FIND IN BODY OR BODY DEF?
	PUSHJ P,COPLTP		;COPY TEXT AND PROPERTIES INTO INDIRECT LIST
	POP P,T
	MOVE A,E		;IF COPLTP CALLED, E SET TO INDIRECT POINTER BLOCK
	HLRZ E,(A)
	JUMPN E,BTXPR2
	HRRZ TT,1(A)
	GETFS(E)
	HRLM E,(A)
	MOVE TTT,1(TT)
	MOVEM TTT,1(A)
	HLRZ TT,(TT)
	MOVE TTT,1(TT)
	MOVEM TTT,1(E)
	PUSH P,B
	PUSH P,T
	HLRZ T,(TT)		;GET PROPERTY NAME
	PUSHJ P,LSTCOP
	HRLZM B,(E)
	POP P,T
	POP P,B
	SKIPGE T
	MOVEI T,STDBIG
BTXPR2:	TRO MCHG!NEEDCL
	HRRZ TT,(E)
	SKIPGE T
	HLRZ T,(TT)
	HRLM T,(B)
	HRRM B,(E)
	SKIPE B,TT
	PUSHJ P,PUTFS
	HLRZ TT,(E)
	HLRZ B,(TT)
	HRRZS (TT)
	SKIPE B
	PUSHJ P,PUTFS		;GIVE BACK DIP DEF LIST
	POP P,TT
	MOVE T,1(A)
	TRNN T,1
	POPJ P,			;NO AUTO OFFSET
	JRST EDTCEN		;GO CENTER IT

BTXPNW:	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/NEW PROPERTY, /]
	MOVEM T,BTEXT
	PUSHJ P,BTXPUT
	SKIPA B,BTEXT		;LOSE, MUST GIVE BACK PROPERTY NAME
	POPJ P,			;WIN, RETURN
	JRST PUTFS

;CALL WITH BODY POINTER IN A
BTXPUT:	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/TEXT?
/]
	PUSHJ P,TXREAD
	CAIE C,ALTMOD
	SKIPN 1(B)
	JRST PUTFS
	TRO MCHG!NEEDCL
	GETFS(C)
	PUSH P,T
	MOVE T,CURSE
	ADJUST(SUB,T,<1(A)>)
	PUSH P,F
	HLRZ E,(A)
	HLRZ F,(E)
	MOVE F,UNROT(F)
	PUSHJ P,ORIENT
	POP P,F
	TRO T,1			;AUTO OFFSET INITIALLY
	MOVEM T,1(C)
	HLRZ E,1(E)
	PUSH P,TT
	HRRZ TT,1(E)
	SKIPN TT
	PUSHJ P,COPLTP		;COPY BODY DEF TEXT/PROPERTIES INTO INDIRECT LIST
	POP P,TT
	POP P,T
	HRRZ D,1(E)
	HRRM C,1(E)
	HRRM D,(C)
	JRST BTXIN8

BTCPRB:	PUSHJ P,GETCLS
	JRST PERRET
	CAIA
BTCPRP:	MOVE A,BTBODY
	HLRZ TTT,(A)
	HLRZ TTT,1(TTT)
	HRRZ TTT,1(TTT)
	JUMPE TTT,BTCPR1
	PUSHJ P,BFCPRP
	POPJ P,
	TRZ TFLG		;FOUND IN BODY
BTCPR2:	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/NEW TEXT?
/]
	JRST BTXPR1

BTCPR1:	HLRZ TTT,(A)
	HRRZ TTT,1(TTT)
	HLRZ TTT,1(TTT)
	HLRZ TTT,1(TTT)
	PUSHJ P,BFCPRP
	POPJ P,
	TRO TFLG
	JRST BTCPR2
;EDIT MODE TEXT AND PROPERTY PLACEMENT
EDTXT:	SETZM BTEXT
	PUSHJ P,EDTPUT
	POPJ P,			;DON'T DIDLE SIZE IF NO CHANGE
	HRRZ TT,(E)
	HLRZ T,(TT)
	JUMPN T,CPOPJ		;ZERO SIZE?
	MOVEI T,STDBIG		;YES, NOT ALLOWED, USE STANDARD
	HRLM T,(TT)
	POPJ P,

EDTPRP:	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/PROPERTY NAME?
/]
	PUSHJ P,TREADU
	POPJ P,
	POPJ P,
	MOVE T,B
	MOVE A,CURBOD
	PUSHJ P,FPROP
	JRST EDTPNW
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/OLD PROPERTY, NEW TEXT?
/]
EDTPR1:	MOVE A,T
	PUSHJ P,TXREAD
	CAIE C,ALTMOD
	SKIPN 1(B)
	JRST PUTFS
	PUSH P,TT
	TRO MCHG!NEEDCL
	HLRZ E,(A)
	HRRZ TT,(E)
	SKIPGE T
	HLRZ T,(TT)		;IF NO SIZE TYPED, COPY OLD
	HRLM T,(B)
	HRRM B,(E)
	MOVE B,TT
	PUSHJ P,PUTFS
	HLRZ TT,(E)
	HLRZ B,(TT)
	HRRZS (TT)
	SKIPE B
	PUSHJ P,PUTFS
	POP P,TT
	MOVE T,1(A)
	TRNN T,1		;AUTO OFFSET?
	POPJ P,			;NO
	JRST EDTCEN

EDTPNW:	MOVEM T,BTEXT
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/NEW PROPERTY, /]
	PUSHJ P,EDTPUT
	SKIPA B,BTEXT		;HE QUIT, GIVE BACK STRING
	POPJ P,			;ALL OK
	JRST PUTFS

EDTPUT:	TLNN M,DSKACT!MACACT
	OUTSTR [ASCIZ /TEXT?
/]
	PUSHJ P,TXREAD	;READ TEXT
	CAIE C,ALTMOD	;IF ALTMODE TYPED,
	SKIPN 1(B)	;OR NULL TEXT
	JRST PUTFS	;JUST RETURN FREE STORAGE
	TRO MCHG!NEEDCL
	MOVE A,CURBOD	;GET POINTER TO CURRENT BODY
	HLRZ A,1(A)	;GET POINTER TO DATA BLOCK
	GETFS (C)
	SKIPN D,DBODPN
	JRST BTXIN9	;NO BODIES TO INSERT INTO
BTXINS:	HLRZ E,(D)
	HRRZ TTT,1(E)
	CAME TTT,CURBOD	;THIS BODY OF OUR TYPE?
	JRST BTXIN1	;NO
	HLRZ E,1(E)	;YES
	HRL E,1(E)	;GET CURRENT POINTER
	TLNN E,-1	;IS THERE ONE
	JRST BTXIN1	;NO, DON'T HAVE TO ADD TO IT
	SKIPN BTEXT	;IS THIS A PROPERTY?
	JRST BTXIN2	;NO, INSERT INDIRECT POINTER
	PUSH P,T
	MOVE T,BTEXT	;NAME OF PROPERTY
	HLRZ TTT,E	;BODY PROPERTY LIST
	PUSHJ P,FPROPX	;SEE IF BODY ALREADY HAS THIS PROPERTY
	JRST [	POP P,T
		JRST BTXIN2]	;BODY DOESN'T HAVE IT, ADD IT
	POP P,T
	JRST BTXIN1	;BODY ALREADY HAS ONE, DON'T ADD IT

BTXIN2:	GETFS(TTT)
	HRRZM C,1(TTT)
	HLRZM E,(TTT)
	HRRM TTT,1(E)
BTXIN1:	HRRZ D,(D)	;NEXT BODY
	JUMPN D,BTXINS
BTXIN9:	MOVE D,CURSE	;GET CURRENT POSITION
	TRO D,1		;SET AUTO OFFSET BIT
	TLZ D,1		;CLEAR MARK BIT
	MOVEM D,1(C)	;DEPOSIT AS X,Y
	HLRZ D,1(A)	;GET TEXT POINTER
	MOVEM D,(C)	;LINK IN NEW BLOCK...
	HRLM C,1(A)	;...
BTXIN8:	GETFS (E)
	HRLM E,(C)	;DEPOSIT POINTER TO TEXT DATA BLOCK
	HRRZM B,(E)	;DEPOSIT POINTER TO TEXT
	SKIPGE T	;IF NO SIZE TYPED,
	MOVEI T,STDBIG	;USE STANDARD
	HRLM T,(B)	;DEPOSIT CHR SIZE IN FIRST BLOCK OF TEXT
	MOVE T,BTEXT	;GET PROPERTY NAME
	HRLM T,(E)	;AND SAVE
	AOS (P)		;SKIP TO INDICATE SUCCESS, AND FALL INTO EDTCEN
EDTCEN:	TRO MCHG
	HRRZ T,(E)
	HLRZ T,(T)
	SKIPN T
	MOVEI T,STDBIG
	PUSH P,T
	ANDI T,377777	;REMOVE VERT BIT
	HLRZ TTT,TT	;GET # LINES-1
	ANDI TT,-1	;GET # CHARS
	IMUL TT,CMUL(T)
	IMULI TT,CWIDTH
	ASH TT,-1	;ONLY HALF FOR OFFSET
	MOVNS TT
	HRLM TT,1(E)	;X PART
	SUBI TTT,1
	IMUL TTT,CMUL(T)
	IMULI TTT,CHGHT
	ASH TTT,-1
	HRRM TTT,1(E)	;Y OF CONSTANT OFFSET
	POP P,T
	TRNN T,400000	;VERT?
	POPJ P,
	MOVEI F,1	;YES 90 DEGREES CCW
	MOVE T,1(E)
	PUSHJ P,ORIENT
	MOVEM T,1(E)
	POPJ P,

BTXTZ:
EDTTZ:	PUSHJ P,GETCLS
	JRST PERRET
	MOVEI T,1
	IORM T,1(A)		;TURN ON AUTO OFFSET BIT
EDTTZA:	MOVEI T,1
	LSH T,@MODE
	TDNE T,[1EDTTM!1BTXTM]
	TRNN TMOVE
	JRST EDTTZ2
	CAME A,CLOSES
	JRST EDTTZ2
	TRZE INMOV
	TRO NEEDCL
EDTTZ2:	HLRZ E,(A)
	HRRZ T,(E)
	ADD T,[POINT 7,1]
	SETZB TT,TTT
EDTTZ1:	PUSHJ P,GETTT
	JRST [	CAILE TTT,(TT)
		HRR TT,TTT
		JRST EDTCEN]
	CAIE C,""
	AOJA TTT,EDTTZ1
	ADD TT,[1,,0]
	CAILE TTT,(TT)
	HRR TT,TTT
	SETZ TTT,
	JRST EDTTZ1

;$$Y IN EDIT MODES
EDCPRP:	MOVE TTT,CURBOD
	HLRZ TTT,1(TTT)
	HLRZ TTT,1(TTT)
	PUSHJ P,BFCPRP
	POPJ P,
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/NEW TEXT?
/]
	JRST EDTPR1

EDTENT:	MOVEI T,EDTTM
	JRST CHNGMD

STOBTP:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ T,(A)
	HLRZ T,(T)
	PUSHJ P,SETTT
	JUMPE T,ITSTUF
	JRST STOTX0

STOBTX:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ T,(A)
	HRRZ T,(T)
	JRST STOTXB		;CALL ROUTINE FOR POINT TEXT
;PRINT ALL PROPERTIES FOR THIS BODY OR BODY DEF
LPROPS:	MOVEI T,1
	LSH T,@MODE
	TDNE T,[ALLEDM!1EDTAM]
	JRST EDTLPR
	TDNE T,[1BTXTM]
	JRST [	MOVE A,BTBODY
		JRST BTXLPR]
	TDNN T,[1BODM]
	JRST PERRET
	PUSHJ P,GETCLS
	JRST PERRET
BTXLPR:	MOVE H,A
	HLRZ G,(H)
	HLRZ G,1(G)
	HRRZ G,1(G)
	JUMPE G,[OUTSTR[ASCIZ/
NO LOCAL BODY PROPERTIES.
/]
		JRST BTSLPE]
	OUTSTR[ASCIZ/
LOCAL BODY PROPERTIES:
* INDICATES PROPERTY FROM BODY DEF.
/]
	PUSHJ P,LPROPL	;LIST PROPERTY LIST
BTSLPE:	HLRZ H,(H)
	HRRZ H,1(H)
	CAIA
EDTLPR:	MOVE H,CURBOD		;LIST BODY DEF PROPERTIES
	OUTSTR[ASCIZ/
BODY NAME: /]
	HRRZ T,(H)		;BODY NAME
	PUSHJ P,OUTTXT
	HLRZ G,1(H)
	HLRZ G,1(G)
	JUMPE G,[OUTSTR[ASCIZ/
NO BODY DEFINITION PROPERTIES.
/]
		POPJ P,]
	OUTSTR[ASCIZ/
BODY DEFINITION PROPERTIES:
/]
LPROPL:	OUTSTR[ASCIZ/! INDICATES INVISIBLE PROPERTY.
/]
LPROP0:	MOVEI C," "		;ASSUME LOCAL
	HLRZ B,(G)
	JUMPN B,LPROP1
	MOVEI C,"*"		;INDIRECT
	HRRZ B,1(G)
	HLRZ B,(B)
LPROP1:	HLRZ T,(B)		;PROPERTY NAME
	JUMPE T,LPROP2		;SKIP TEXT
	OUTCHR C
	HRRZ A,(B)
	HLRZ A,(A)
	SKIPN A
	OUTCHR["!"]
	SKIPE A
	OUTCHR[" "]
	PUSHJ P,OUTTXT		;TYPE PROPERTY NAME
	OUTCHR[":"]
	HRRZ T,(B)
	PUSHJ P,OUTTXT
	OUTSTR[ASCIZ/
/]
LPROP2:	HRRZ G,(G)
	JUMPN G,LPROP0
	POPJ P,
;LINE EDIT TEXT
STANFO,<
LODTPN:	HLRZ T,(A)	;POINTER TO REL VEC WORD
	HRRZ T,(T)	;POINTER TO STRING
	PUSHJ P,LODED	;LOAD IT
	POPJ P,

TPNTQ:	PUSHJ P,TPNTQA
	POPJ P,
	JRST EDTDL1

BTPNTQ:	PUSHJ P,TPNTQA
	POPJ P,
	JRST BTXDL0

TPNTQA:	PUSHJ P,GETCLS
	JRST PERRET		;NONE
	PUSHJ P,LODTPN
	JRST TPNTZ1

TPNTZ:	PUSHJ P,TPNTZA
	POPJ P,
	JRST EDTDL1

BTPNTZ:	PUSHJ P,TPNTZA
	POPJ P,
	JRST BTXDL0

TPNTZA:	PUSHJ P,GETCLS
	JRST PERRET
	PUSHJ P,LODTPN	;LOAD IT
	PTWRS9	[0
		[BYTE(9)271,271,271,377,0]]	;CTRL1 999 BACKSPACE
TPNTZ1:	PUSHJ P,TXREAD	;READ TEXT BACK
	CAIN C,ALTMOD
	JRST PUTFS	;NO CHANGE
	SKIPN 1(B)
	JRST [	PUSHJ P,PUTFS
		JRST CPOPJ1]
	HLRZ E,(A)
	HLRZ TT,(E)
	JUMPN TT,ZSIZOK
	SKIPN T
	MOVEI T,STDBIG		;IF TEXT ONLY, MUST HAVE SIZE
ZSIZOK:	SKIPGE T
	MOVEI T,STDBIG	;NO SIZE, USE STANDARD
	HRLM T,(B)	;STO SIZE
	HRRZ T,(E)
	HRRM B,(E)
	MOVE B,T
	PUSHJ P,PUTFS
	TRO MCHG
	MOVE T,1(E)
	TRNN T,1		;AUTO OFFSET?
	POPJ P,			;NO
	JRST EDTCEN		;TT STILL SETUP FROM TXREAD
>;STANFO
;TEXT, KILL

;KILL (STOP DISPLAYING)
EDTKIL:	PUSHJ P,GETCLS
	JRST PERRET
	TRO MCHG!NEEDCL
	TRZ INMOV
	HLRZ T,(A)
	HLRZ TT,(T)
	JUMPE TT,EDTDL1
	HRRZ T,(T)
	HRRZS (T)		;0 CHAR SIZE = NO DISPLAY
	POPJ P,

;DELETE
EDTDEL:	PUSHJ P,GETCLS
	JRST PERRET
	TRO MCHG!NEEDCL
	TRZ INMOV
EDTDL1:	MOVEI B,DBODPN
FBT1:	PUSHJ P,FBTPTR
	JRST EDTDL2
	HRRZ T,(D)
	HRRM T,(C)
	FSTRET(D)
	JRST FBT1

EDTDL2:	HLRZ C,(A)
	HLRZ C,(C)
	JUMPE C,EDTDL3
	HLRZ B,(C)
	SKIPE B
	PUSHJ P,PUTFS
	MOVE B,C
	PUSHJ P,PUTFS
EDTDL3:	MOVE C,CURBOD	;GET POINTER TO TYPE
	HLRZ C,1(C)	;GET POINTER TO POINTER BLOCK
	HLRZ B,1(C)	;GET POINTER TO TEXT
	CAMN B,A	;IS IT THE FIRST ONE?
	JRST EDTKP1	;YES
EDTKP2:	MOVE C,B
	HRRZ B,(C)	;NO, GET POINTER TO NEXT
	CAME B,A	;IS THIS IT?
	JRST EDTKP2	;LOOP
	HRRZ TT,(B)	;GET POINTER TO NEXT
	HRRM TT,(C)	;DEPOSIT POINTER AROUND STUFF TO BE DELETED
	MOVSS (B)	;PREPARE TO PUT IT BACK ON FREE STORAGE
	JRST PUTFS

EDTKP1:	HRRZ TT,(B)	;GET POINTER TO NEXT
	HRLM TT,1(C)	;DEPOSIT POINTER AROUND
	MOVSS (B)	;PREPARE TO PUT IT BACK ON FREE STORAGE
	JRST PUTFS

BTXKIL:	PUSHJ P,GETCLS
	JRST PERRET
	TRO MCHG!NEEDCL
	TRZ INMOV
	HLRZ T,(A)
	HLRZ TT,(T)
	JUMPE TT,BTXDL0
	HRRZ T,(T)
	HRRZS (T)
	POPJ P,

BTXUKL:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ T,(A)
	HRRZ T,(T)
	HLRZ TT,(T)		;GET SIZE
	JUMPN TT,[TLNN M,DSKACT!MACACT
		OUTSTR[ASCIZ/ALREADY VISIBLE.
/]
		POPJ P,]
	MOVEI TT,STDBIG		;SET SIZE TO STANDARD
	HRLM TT,(T)
	POPJ P,			;THIS SHOULDN'T CHANGE PICTURE

BTXDEL:	PUSHJ P,GETCLS
	JRST PERRET
	TRO MCHG!NEEDCL
BTXDL0:	HRL A,CLAST
BTXDL1:	HLRZ C,(A)
	HLRZ T,(C)
	JUMPE T,BTXDL2		;IF ONLY TEXT, JUST FLUSH IT
	PUSH P,A
	MOVE A,BTBODY
	HLRZ A,(A)
	HRRZ A,1(A)
	PUSHJ P,FPROP0		;LOOK FOR THIS PROPERTY IN BODY DEF
	JRST [	POP P,A
		JRST BTXDL2]	;NOT IN DEF, JUST DELETE
	POP P,A
	MOVEM T,1(A)		;STORE INDIRECT POINTER TO IT
	HRRZS (A)		;AND CLEAR POINTER
	JRST BTXDL3		;GIVE BACK AND CHECK FOR EMPTY LIST

BTXDL2:	HLRZ B,A
	HRRZ T,(A)
	HRRM T,(B)		;LINK US OUT
	FSTRET(A)
BTXDL3:	HLRZ A,(C)
	JUMPE A,BTXDL5
	HLRZ B,(A)
	SKIPE B
	PUSHJ P,PUTFS
	MOVE B,A
	PUSHJ P,PUTFS
BTXDL5:	MOVE B,C
	PUSHJ P,PUTFS
	MOVE A,BTBODY
	HLRZ A,(A)
	HLRZ A,1(A)
	HRRZ B,1(A)
	JUMPE B,CPOPJ		;LEAVE IF NONE NOW
BTXDL4:	HLRZ T,(B)
	JUMPN T,CPOPJ		;LEAVE IF NON INDIRECT POINTER STILL IN LIST
	HRRZ B,(B)
	JUMPN B,BTXDL4		;CHECK THEM ALL
	HRRZ B,1(A)
	HLLZS 1(A)
	JRST PUTFS		;GIVE BACK INDIRECT LIST

;$$D DELETE PROPERTY NAME
BTNPRP:
EDNPRP:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ T,(A)
	HLRZ B,(T)
	JUMPE B,PERRET		;NO PROPERTY NAME, LOSE
	HRRZS T,(T)
	HLRZ TT,(T)
	JUMPN TT,PUTFS
	MOVEI TT,STDBIG
	HRLM TT,(T)
	JRST PUTFS
;ALL NEW BODY/BODY DEF PROPERTY/TEXT ROUTINES.

;FPROP - FIND BODY DEF PROPERTY
;STRING PROPERTY NAME IN T (RETURNED TO FS IF FOUND)
;BODY DEF POINTER IN A
;SKIP RETURNS WITH PROPERTY BLOCK POINTER IN T

FPROP:	PUSHJ P,FPROP0
	POPJ P,
	PUSH P,T
	EXCH B,TTT
	PUSHJ P,PUTFS
	MOVE B,TTT
	POP P,T
	JRST CPOPJ1

;FPROPX - FIND PROPERTY NAME IN LIST SUPPLIED
;BODY OR BODY DEF PROPERTY LIST POINTER IN TTT
;STRING PROPERTY NAME IN T
;SKIP RESTURNS WITH PROPERTY BLOCK IN T (TTT NOW CONTAINS STRING POINTER)

FPROP0:	HLRZ TTT,1(A)
	HLRZ TTT,1(TTT)
	JUMPE TTT,CPOPJ
FPROPX:	PUSH P,A
	PUSH P,B
	PUSH P,T
FPROP1:	HLRZ B,(TTT)
	JUMPN B,FPROP3
	HRRZ B,1(TTT)
	HLRZ B,(B)
FPROP3:	HLRZ B,(B)
	JUMPE B,FPROP2
	MOVE A,(P)
	PUSHJ P,TXTMAT
	JRST FPROP2
	POP P,T
	POP P,B
	POP P,A
	EXCH T,TTT
	JRST CPOPJ1

FPROP2:	HRRZ TTT,(TTT)
	JUMPN TTT,FPROP1
	POP P,T
	POP P,B
	POP P,A
	POPJ P,

;FNDDIP - FIND DIP TYPE
;BODY POINTER IN A
;SKIP RETURNS WITH DIPTYPE BLOCK POINTER IN T

FNDDIP:	MOVEI TT,[ASCIZ/DIPTYPE/]
	PUSHJ P,ASCCOP
	PUSHJ P,BFPROP
	JRST [	PUSH P,B
		MOVE B,T
		PUSHJ P,PUTFS
		POP P,B
		POPJ P,]
	JRST CPOPJ1		;FOUND IN BODY DEF
	HLRZ TT,(T)		;FOUND IN BODY, CHECK FOR INDIRECT
	JUMPN TT,CPOPJ1
	HRRZ T,1(T)
	JRST CPOPJ1

;BFPROP - FIND PROPERTY FOR BODY
;BODY POINTER IN A
;STRING PROPERTY NAME IN T
;SKIP RETURNS WITH PROPERTY BLOCK POINTER IN T
;SKIPS 1 IF FOUND IN BODY DEF (NO INDIRECT LIST IN BODY)
;SKIPS 2 IF FOUND IN BODY (INDIRECT OR DIRECT)
;PROPERTY NAME STRING IS RETURNED TO FS IF FOUND

BFPROP:	HLRZ TTT,(A)
	HLRZ TTT,1(TTT)
	PUSH P,A
	HRRZ TTT,1(TTT)
	JUMPE TTT,BFPRP4
	PUSH P,B
	PUSH P,T
BFPRP2:	HLRZ B,(TTT)
	JUMPN B,BFPRP3
	HRRZ B,1(TTT)
	HLRZ B,(B)
BFPRP3:	HLRZ B,(B)
	JUMPE B,BFPRP1
	MOVE A,(P)
	PUSHJ P,TXTMAT
	JRST BFPRP1
	POP P,B
	PUSHJ P,PUTFS
	POP P,B
	POP P,A
	MOVE T,TTT
	JRST CPOPJ2

BFPRP1:	HRRZ TTT,(TTT)
	JUMPN TTT,BFPRP2
	POP P,T
	POP P,B
	POP P,A
	POPJ P,

BFPRP4:	HLRZ A,(A)
	HRRZ A,1(A)
	PUSHJ P,FPROP		;LOOK IN BODY DEF
	JRST [	POP P,A		;NOT FOUND
		POPJ P,]
	POP P,A
	JRST CPOPJ1

;BFCPRP - FIND BODY OR BODY DEF PROPERTY BY CLOSEST MATCH NAME
;POINTER TO PROPERTY LIST IN TTT
;RETURNS PROPERTY BLOCK OR INDIRECT POINTER IN T

BFCPRP:	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/PROPERTY NAME (ENOUGH TO UNIQUELY SPECIFY IT)?
/]
	JUMPE TTT,[PUSHJ P,SCARF
		POPJ P,
		JRST NXPROP]
	PUSHJ P,TREADU
	POPJ P,
	JRST NXPROP
	PUSH P,A
	PUSH P,B
	TRZ TFLG		;NO MATCHS YET
EDCPR2:	HLRZ A,(TTT)
	JUMPN A,EDCPR4
	HRRZ A,1(TTT)
	HLRZ A,(A)
EDCPR4:	HLRZ A,(A)
	JUMPE A,EDCPR3
	MOVE B,(P)
	ADD A,[POINT 7,1]
	ADD B,[POINT 7,1]
EDCPR5:	PUSHJ P,BTGETB		;GET A MATCH CHARACTER
	JRST EDCPR6		;MATCH
	PUSHJ P,BTGETA		;GET A PROPERTY NAME CHARACTER
	JRST EDCPR3		;NO MATCH
	CAMN T,TT		;MATCH?
	JRST EDCPR5		;YES, LOOP
	JRST EDCPR3		;NO MATCH

EDCPR6:	TROE TFLG		;FLAG ONE FOUND, CHECK FOR MORE THAN ONE
	JRST AMBIGP		;AMBIGUOUS PROPERTY
	MOVEM TTT,BTEXT		;SAVE MATCH HERE
	PUSHJ P,BTGETA		;GET ONE MORE CHAR OF PROPERTY NAME
	JRST EXPROP		;EXACT MATCH, WIN NOW
EDCPR3:	HRRZ TTT,(TTT)
	JUMPN TTT,EDCPR2
EXPROP:	POP P,B
	PUSHJ P,PUTFS
	POP P,A
	MOVE T,BTEXT		;GET MATCH (IF ANY)
	TRNE TFLG		;WAS THERE A MATCH?
	JRST EDCPR7		;YES, PRINT NAME AND RETURN IT
NXPROP:	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/SORRY, NO SUCH PROPERTY.
/]
	POPJ P,

EDCPR7:	TLNE M,DSKACT!MACACT
	JRST CPOPJ1
	PUSH P,T
	HLRZ TT,(T)
	JUMPN TT,EDCPR8
	HRRZ TT,1(T)
	HLRZ TT,(TT)
EDCPR8:	HLRZ T,(TT)
	PUSHJ P,OUTTCR
	POP P,T
	JRST CPOPJ1

AMBIGP:	POP P,B
	PUSHJ P,PUTFS
	POP P,A
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/SORRY, AMBIGUOUS PROPERTY NAME.
/]
	POPJ P,

BTGETA:	TLNN A,760000
	JRST [	HRR A,-1(A)
		TRNN A,-1
		POPJ P,
		JRST .+1]
	ILDB T,A
	JUMPE T,CPOPJ
	JRST CPOPJ1

BTGETB:	TLNN B,760000
	JRST [	HRR B,-1(B)
		TRNN B,-1
		POPJ P,
		JRST .+1]
	ILDB TT,B
	JUMPE TT,CPOPJ
	JRST CPOPJ1

;MPROP - MAKE A PROPERTY BLOCK
;STRING PROPERTY NAME IN T
;BODY DEF POINTER IN A
;NEW BLOCK RETURNED IN T WITH NO VALUE STRING YET

MPROP:	GETFS(TT)
	MOVEI TTT,1
	MOVEM TTT,1(TT)		;INITIALIZE TO AUTO OFFSET
	GETFS(TTT)
	HRLM TTT,(TT)
	SETZM 1(TTT)
	HRLZM T,(TTT)
	HLRZ T,1(A)
	HLRZ TTT,1(T)
	HRRM TTT,(TT)
	HRLM TT,1(T)
	MOVE T,TT
	POPJ P,

;FBTPTR - FIND INSTANCE OF PROPERTY/TEXT INDIRECT POINTER
;LAST BODY FOUND IN B
;BODY DEF PROPERTY/TEXT BLOCK POINTER IN A
;SKIP RETURNS WITH NEW BODY IN B
;	POINTER TO INDIRECT BLOCK IN D, PREVIOUS IN C

FBTPT1:	HLRZ D,(B)
	HRRZ T,1(D)
	CAME T,CURBOD
	JRST FBTPTR
	HLRZ D,1(D)
	ADDI D,1
	JRST FBTPT3

FBTPT2:	HLRZ T,(D)
	JUMPN T,FBTPT3		;IGNORE LOCAL BODY TEXT
	HRRZ T,1(D)		;SEE IF THIS USE OF THE TEXT FROM
	CAMN T,A		;THE TYPE IS THE ONE WE WANT
	JRST CPOPJ1
FBTPT3:	MOVE C,D
	HRRZ D,(D)
	JUMPN D,FBTPT2
FBTPTR:	HRRZ B,(B)
	JUMPN B,FBTPT1
	POPJ P,

;COPLTP - MAKE INDIRECT LIST TO BODY DEF TEXT/PROPERTIES
;BODY POINTER IN A
;IF E POINTS TO BODY DEF PROPERTY, IT IS CHANGED TO POINT TO INDIRECT BLOCK

COPLTP:	HLRZ T,(A)
	HRRZ TT,1(T)
	HLRZ TT,1(TT)
	HLRZ TT,1(TT)
	JUMPE TT,CPOPJ		;LEAVE IF NO BODY DEF LIST TO COPY
	HLRZ T,1(T)
	ADDI T,1		;POINT T TO NEW LISTHEAD
CPLTP1:	GETFS(TTT)
	HRRM TTT,(T)		;LINK IN INDIRECT BLOCK
	MOVE T,TTT		;GET NEW END OF LIST
	SETZM (TTT)		;CLEAR LINK OUT
	HRRZM TT,1(TTT)		;PUT IN INDIRECT POINTER
	CAMN E,TT		;DOES E POINT TO IT?
	MOVE E,TTT		;YES, POINT E TO INDIRECT BLOCK
	HRRZ TT,(TT)
	JUMPN TT,CPLTP1
	POPJ P,

;ASCCOP - MAKE INTERNAL FORMAT STRING FROM ASCIZ STRING
;ASCIZ STRING POINTER IN TT
;RETURNS INTERNAL FORMAT STRING POINTER IN T

ASCCOP:	GETFS(T)
	HRLM T,(P)
	JRST ASCCP2

ASCCP1:	GETFS(TTT)
	HRRZM TTT,(T)
	MOVE T,TTT
ASCCP2:	MOVE TTT,(TT)
	MOVEM TTT,1(T)
	TRNN TTT,376
	JRST ASCCP3
	SKIPE 1(TT)
	AOJA TT,ASCCP1
ASCCP3:	SETZM (T)
	HLRZ T,(P)
	POPJ P,
>;MD
      