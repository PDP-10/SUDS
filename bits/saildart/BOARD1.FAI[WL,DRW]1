;<WIRELIST>BOARD1.FAI.28, 20-NOV-75 11:26:44, EDIT BY HELLIWELL

MD,<DEFINE MDWL <IFE 0>>
MPC,<DEFINE MDWL <IFN 0>>
MWL,<DEFINE MDWL <IFE 0>>

MWL,<DEFINE STORAGE(A)<>>

MDPC,<	VERSION(LOCS,4)	>

;GENERAL USE MACROS AND DEFINITIONS

DEFINE CHECK(TAG,LENGTH)<
IFN .-TAG-LENGTH,<PRINTS /TAG LOSES
/>
>;CHECK

;HERE WE DEFINE MACROS SO EACH BOARD AND NOMENCLATURE FILE DEFINES ITSELF

DEFINE ALLWW
<0,<>>

DEFINE ALLLOCS
<0,<>>

DEFINE .ADD(MACRO,NAME,TABLE)<.ADD1(MACRO,\MACRO,NAME,TABLE)>

DEFINE .ADD1(MACRO,DUMMY,BODY,NAME,TABLE)
<	DEFINE MACRO
<DUMMY,<BODY
	BRDNAM(NAME,TABLE)>>;MACRO
>;ADD1

DEFINE .DONE(MACRO)<.DONE1(MACRO,\MACRO)>

DEFINE .DONE1(MACRO,DUMMY,BODY)
<	DEFINE MACRO
<BODY
>;MACRO
>;DONE1
;THIS IS THE TRANSFER VECTOR WHICH IS SETUP BY THE BOARD TYPE SETTING COMAND
;THERE IS A SIMILAR OBJECT IN WWC

STORAGE(IMPURE)

LOCSTV__.

LCINIT:	JRST NNOMEN
LOCOUT:	JRST NNOMEN
QUPIN:	JRST NNOMEN
SLTOUT:	JRST NNOMEN
GETSLT:	JRST NNOMEN
BPINPN:	JRST NNOMEN
RPNAM:	JRST NNOMEN

MDPC,<
CSLTLP:	JRST NNOMEN
GTSLTL:	JRST NNOMEN
SLTLPN:	JRST NNOMEN
PINPLS:	JRST NNOMEN

MD,<
CSLTLT:	JRST NNOMEN
GTCONP:	JRST NNOMEN
CSLTLD:	JRST NNOMEN
>;MD
>;MDPC

MWL,<
PINPN5:	JRST NNOMEN
TRPNAM:	JRST NNOMEN
RPNAMA:	JRST NNOMEN
WLOCOUT:	JRST NNOMEN
LOCPNC:	JRST NNOMEN
LOCPNW:	JRST NNOMEN
PRCNPN:	JRST NNOMEN
GETLOC:	JRST NNOMEN
PADPRT:	JRST NNOMEN
RAYDIP:	JRST NNOMEN
RAYCON:	JRST NNOMEN
LOCPIN:	JRST NNOMEN
LOCPNM:	JRST NNOMEN
LOCPNP:	JRST NNOMEN
CPNSEP:	JRST NNOMEN
CPNMER:	JRST NNOMEN
BPNPIN:	JRST NNOMEN
CPARTP:	JRST NNOMEN
PRBCN:	JRST NNOMEN
SEQLOC:	JRST NNOMEN
CONGIN:	JRST NNOMEN
GTSLTT:	JRST NNOMEN
>;MWL
LTVLNJ__.-LOCSTV		;LENGTH OF PART WITH JRST'S
SLTCUE:	[0]
PINCUE:	[0]
MDPC,<
CPCUE:	[0]
BODCUE:	[0]
PROTOB:	[ASCID /LOC/]
>;MDPC
MWL,<
WBDCUE:	[0]
CBCUE:		[0]
>;MWL

LTVLEN__.-LOCSTV
LTVLEN__LTVLEN

NOMTYP:	ININOM			;INDEX INTO NOMENCLATURE TABLES
MDWL,<
WWTYP:	INIWW			;INDEX INTO BOARD TABLES
>;MDWL

FNDTMP:	0			;FLAG USED IN BOARD NAME SEARCH
SMALL:	0			;SMALLEST DISTANCE BETWEEN WW PINS

STORAGE(PURE)

NNOMEN:	OUTSTR [ASCIZ /SORRY - NO NOMENCLATURE TYPE
/]
	POPJ P,

;TRANSFER VECTOR FOR UNSPECIFIED BOARD

LNOBRD:	REPEAT LTVLNJ
<	JRST NNOMEN
>
	REPEAT LTVLEN-LTVLNJ
<	[0]
>
SUBTTL	L2N,N2L -- LETTER/NUMBER CONVERSION TABLES

STORAGE(IMPURE)

L2NLEN__200	;LETTER/NUMBER CONVERSION TABLE LENGTHS
N2LLEN__200

L2N:	BLOCK L2NLEN		;LEAVE CONTIGUOUS AND IN THIS ORDER
N2L:	BLOCK N2LLEN
MAXN2L:	0

DEFINE L2N2L (I,J) <
	ORG L2NSUB+"I"
	MDPC,<J+>NNN
IFGE "I"-"A",<
IFLE "I"-"Z",<
;IF LETTER, SET LOWER CASE THE SAME
	ORG L2NSUB+"I"+40
	MDPC,<J+>NNN
>>
	ORG N2LSUB+NNN
	"I"
NNN__NNN+1
>
SUBTTL	PROGRAM DEPENDENT IO CONTROL
STORAGE(PURE)
MWL,<
	CHRREG__TTT
	NUMREG__A
	DESTIN__SLICEL
	DEFINE GETCH <	XCT GETCHR
			 JFCL
>
	DEFINE GETNUM <	PUSHJ P,DECIN
			 JFCL
>
	DEFINE TGETNUM < PUSHJ P,TDECIN
			  JFCL
>
>;MWL

MDPC,<	CHRREG__C
	NUMREG__T
	DESTIN__LETTER

DEFINE GETCH <	XCT GTCHRX
>

DEFINE GETNUM <	PUSHJ P,GETDEC
>


GETDEC:	SETZ NUMREG,
GTDEC1:	GETCH
	CAIL CHRREG,"0"
	CAILE CHRREG,"9"
	POPJ P,
	IMULI NUMREG,=10
	ADDI NUMREG,-"0"(CHRREG)
	JRST GTDEC1
>;MDPC
;THESE ROUTINES SET UP THE BOARD TYPE

;TAKES POINTER TO STRING IN FREE STORAGE IN B
;XWD -LENGTH,NAME TABLE IN C

MDWL,<
FNDWW:	SKIPA C,[XWD -NWW,WNAMES]
>;MDWL
FNDNOM:	MOVE C,[XWD -NLOCS,LNAMES]
	PUSH P,B
	SETOM FNDTMP		;CLEAR PARTIAL MATCH STORAGE
	JUMPGE C,FNDBR8		;IN CASE OF EMPTY TABLE
FNDBR1:	MOVE T,(C)		;GET BYTE POINTER
	MOVE B,(P)		;AND POINTER TO STRING
	ADD B,[POINT 7,1]
FNDBR2:	ILDB TT,T		;NEXT CHAR OF BOARD NAME
	TLNE B,760000		;END OF WORD?
	JRST FNDBR3		;NO
	HRR B,-1(B)
	TRNN B,-1
	JRST FNDBR4		;END OF SOURCE STRING
FNDBR3:	ILDB TTT,B		;NEXT CHAR OF SOURCE STRING
	JUMPE TTT,FNDBR4	;END OF SOURCE STRING?
	CAMN TTT,TT		;STILL MATCH?
	JRST FNDBR2		;YES, CONTINUE
FNDBR5:	AOBJN C,FNDBR1		;NO, TRY NEXT BOARD
FNDBR8:	HRRE C,FNDTMP
	SKIPL C
FNDBR7:	AOS -1(P)
FNDBR6:	POP P,B
	POPJ P,

FNDBR4:	JUMPE TT,[HRRZ C,C
		JRST FNDBR7]	;EXACT MATCH
	SKIPL FNDTMP		;PREVIOUS PARTIAL MATCH?
	JRST [	SETOM FNDTMP
		HRRZS FNDTMP	;FLAG MULTIPLE PARTIAL MATCHES
		JRST FNDBR5]	;TRY FOR EXACT MATCH
	HRRZM C,FNDTMP
	JRST FNDBR5

;GETS BOARD NAME FROM TTY, LOOKS IT UP, AND SETS IT UP

MDWL,<
GETBRD:
MDPC,<	TLNN M,DSKACT!MACACT	>
	OUTSTR [ASCIZ /BOARD TYPE?/]
	PUSHJ P,TREADU			;DOES CASE CONVERSION
	 POPJ P,			;ALTMODE
MDPC,<	 JRST [	MOVE B,WWTYP		;NULL
		OUTSTR @WNAMES(B)
		POPJ P,]
>;MDPC
MWL,<	 POPJ P,	>
	PUSHJ P,FNDWW				;FIND THAT BOARD TYPE
	 JRST [	PUSHJ P,PUTFS
		OUTSTR [ASCIZ /BOARD NOT FOUND
/]
		POPJ P,]
	PUSHJ P,PUTFS
	MOVEI C,-WNAMES(C)
	HRRZM C,WWTYP
MDPC,<	TLNN M,DSKACT!MACACT	>
	OUTSTR @WNAMES(C)		;TYPE THE BOARD NAME FOR THE PEOPLE
MWL,<	OUTSTR[ASCIZ/
/]
>;MWL
	JRST SETWW
>;MDWL

GETNOM:
MDPC,<	TLNN M,DSKACT!MACACT	>
	OUTSTR [ASCIZ /NOMENCLATURE TYPE?/]
	PUSHJ P,TREADU			;DOES CASE CONVERSION
	 POPJ P,			;ALTMODE
MDPC,<	 JRST [	MOVE B,NOMTYP		;NULL
		OUTSTR @LNAMES(B)
		POPJ P,]
>;MDPC
MWL,<	 POPJ P,	>
	PUSHJ P,FNDNOM			;FIND THAT BOARD TYPE
	 JRST [	PUSHJ P,PUTFS
		OUTSTR [ASCIZ /NOMENCLATURE NOT FOUND
/]
		POPJ P,]
	PUSHJ P,PUTFS
	MOVEI C,-LNAMES(C)
	HRRZM C,NOMTYP
MDPC,<	TLNN M,DSKACT!MACACT	>
	OUTSTR @LNAMES(C)		;TYPE THE BOARD NAME FOR THE PEOPLE
MWL,<	OUTSTR[ASCIZ/
/]
>;MWL
	JRST SETNOM

;GIVEN THE BOARD TYPE IN NOMTYP, SETS UP TRANSFER VECTORS AND CONVERSION TABLES

CLRNOM:	MOVE B,[ININOM]
	MOVEM B,NOMTYP
SETNOM:	MOVE B,NOMTYP
	HRL C,LOCTVV(B)		;SET UP LOCS TRANSFER VECTOR
	HRRI C,LOCSTV
	BLT C,LOCSTV+LTVLEN-1
	SKIPL NOMTYP		;NO SPECIFIC BOARD?
	PUSHJ P,LCINIT		;SET UP LETTER/NUMBER CONVERSION TABLES
	POPJ P,

MDWL,<
CLRWW:	MOVE B,[INIWW]
	MOVEM B,WWTYP
SETWW:
MWL,<
	HRL C,WWCTVV(B)		;SET UP WWC TRANSFER VECTOR
	HRRI C,WWCTV
	BLT C,WWCTV+WTVLEN-1
	SKIPN ISWW		;ONLY WIRE WRAP BOARDS HAVE WWINIT
	POPJ P,
	MOVEI C,=1000
	IDIV T,FRACTN		;CALCULATE SMALLEST POSSIBLE DISTANCE BETWEEN WW PINS
	MOVEM T,SMALL
	PUSHJ P,WWINIT		;WIRE WRAP INITIALIZATION
>;MWL
	POPJ P,
>;MDWL

AVAIL:	MOVSI A,-NLOCS
	OUTSTR [ASCIZ /NOMENCLATURE TYPES:
/]
AVAIL1:	OUTSTR @LNAMES(A)
	OUTSTR [ASCIZ /
/]
	AOBJN A,AVAIL1
MDWL,<	MOVSI A,-NWW
	JUMPGE A,CPOPJ		;DONE IF NO BOARDS
	OUTSTR [ASCIZ /

BOARD TYPES:
/]
AVAIL2:	OUTSTR @WNAMES(A)
	OUTSTR [ASCIZ /
/]
	AOBJN A,AVAIL2
>;MDWL
	POPJ P,
SUBTTL	PUTDEC,NPUTDEC -- DECIMAL OUTPUT ROUTINES

PUTDEC:	SETZM NDIG
NPUTDEC:SKIPGE T
	PUTBYT "-"
	MOVM T,T
PUTDC1:	IDIVI T,=10
	HRLM TT,(P)
	SOSG NDIG
	JUMPE T,.+2
	PUSHJ P,PUTDC1
	HLRZ TT,(P)
	MOVEI TTT,"0"(TT)
	XCT PUTCHR
	POPJ P,

MWL,<
DECOUT_PUTDEC
NDECOUT_NPUTDEC
>;MWL
;WIRE WRAP BOARD ROUTINES

MWL,<

DEFINE SETPAD(NPADS)
<	IFL MAXPAD-<NPADS>,<PRINTS /MAXPAD NOT LARGE ENOUGH.
/>
	NPADS
>

DEFINE CHECK(TAG,LENGTH)<
IFN .-TAG-LENGTH,<PRINTS /TAG LOSES
/>
>;CHECK

WIRGND:	-1		;DEFAULT WIRE GROUNDS FOR DEC BOARDS
LNGRID:	0		;-1 ENABLES LETTER NUMBER GRID

WWCTV:

ISWW:	0		;FLAGS IF WIRE WRAP OR PC BOARD
WWINIT:	JRST NBOARD	;THE WIRE WRAP TRANSFER VECTOR
MAPRC:	JRST NBOARD
MAPPAD:	JRST NBOARD
PINMAP:	JRST NBOARD
PINBIT:	JRST NBOARD
VGCON:	JRST NBOARD
DSTCLC:	JRST NBOARD
FPWR:	JRST NBOARD
FGND:	JRST NBOARD
PGPRTM:	JRST NBOARD
PGPRNT:	JRST NBOARD
GNDCLR:	JRST NBOARD
WAGGND:	JRST NBOARD
GNDOUT:	JRST NBOARD
VCCOUT:	JRST NBOARD
RAYGEN:	JRST NBOARD	;RAYTHEON PRINT GENERATED PIN
	NWBLEN__.-WWINIT
NROWS:	0
NCOLS:	0
NCLPRG:	0
DIPSLT:	0
NPADS:	0
PADLET:	0
PADPIN:	0
FRACTN: 0		;WIRE LENGTH FRACTION
WRAPMG:	0		;ADDITIONAL WIRE LENGTH FOR INSULATION AROUND POST
POSTMG:	0		;ADDITIONAL WIRE LENGTH FOR BARE WIRE  AROUND POST
NEXTR:	0		;CLEARANCE BETWEEN PINS IN ADJACENT SOCKET ROWS
	NW0LEN__.-WWINIT-NWBLEN
WTVLEN__.-WWCTV
WTVLEN__WTVLEN

WNOBRD:	0
	REPEAT NWBLEN
<	JRST NBOARD
>
	REPEAT NW0LEN
<	0
>
	CHECK(WNOBRD,WTVLEN)

NBOARD:	OUTSTR [ASCIZ /SORRY - NO BOARD TYPE
/]
	POPJ P,
;SOME HANDY BYTE POINTERS

DEFINE LOW12<[POINT 12,A,35]>		;LOW ORDER 12 BITS OF A
DEFINE B6AT23<[POINT 6,A,23]>
DEFINE B6AT17<[POINT 6,A,17]>
DEFINE B6AT29<[POINT 6,A,29]>

SQRT:	JFFO T,.+2		;GET LOC OF FIRST BIT
	POPJ P,
	MOVNI TTT,(TT)
	ADDI TTT,=35
	ASH TTT,-1
	MOVEI TT,1
	ASH TT,(TTT)
	MOVEI TTT,=3		;3 ITERATIONS FOR NOW
SQRTLP:	MOVE TTTT,TT
	IDIVM T,TTTT
	ADD TT,TTTT
	ASH TT,-1
	SOJG TTT,SQRTLP
	MOVE T,TT
	POPJ P,

NUMPNT:	IDIVI T,=10
	ADDI TT,60
	JUMPE T,.+3
	ADDI T,60
	OUTCHR T
	OUTCHR TT
	POPJ P,
;DISTANCE CALCULATOR FOR ROUTER STUFF
;CALLS WITH ONE PIN IN A,B OTHER IN C,D RETURNS DISTANCE IN G

;CITY BLOCK DISTANCE FOR W940 STUFF

DISTCB:PUSHJ P,PINMAP		;MAP ONE OF THEM
	JRST DSTERR
	HRLM A,(P)
	MOVE A,C		;MOVE IN OTHER POINT
	MOVE B,D
	MOVE C,T		;SAVE X,Y
	MOVE D,TTT		;AND DIST
	PUSHJ P,PINMAP
	JRST DSTERR
	CAMLE TTT,D
	SKIPA G,D
	MOVE G,TTT
	ASH G,1			;DOUBLE IT (MUST GO TO END AND BACK!)
	HLRE TT,T
	HLRE TTT,C
	SUB TT,TTT
	MOVM TT,TT
	HRRE T,T
	HRRE C,C
	SUB T,C
	MOVM T,T		;THIS IS Y PART
	JUMPE G,DSTCLX
	CAMG T,NEXTR		;OR IF PINS ARE ALONG A ROW BORDER
	JRST DSTCLX		;THEN END-AROUND FUDGE ISN'T NEEDED
	SKIPE LNGRID		;WE HAVE TO DO EAF DIFFERENTLY IF LNGRID IS TRUE
	JRST [	LDB C,[POINT 6,(P),5]	;GET ONE COLUMN LETTER
		LDB D,[POINT 6,A,23]	;GET OTHER COLUMN LETTER
		CAMN C,D		;SAME COLUMN?
		ADD T,G			;YES, FUDGE
		JRST DSTCLX]
	LDB C,[POINT 12,(P),17]
	LDB D,[POINT 12,A,35]
	SUB C,D
	IDIV C,NCOLS
	JUMPN D,DSTCLX		;IF REMAINDER, THEN DIF COLUMNS, AND NO FUDGE
	ADD T,G			;SAME COLUMN, BUT NOT CLOSE ENOUGH, FUDGE AROUND END OF DIP
DSTCLX:	ADD T,TT		;ADD IN X PART
	CAIN T,0		;0 LENGTH RUN?
	JRST DSTERR		;THEN DON'T ADD MARGINS
	CAILE T,=8000		;LONGER THAN 8 INCHES?
	ADDI T,=250		;YES, ADD 1/4 INCH
	CAME T,SMALL		;DON'T ADD WRAPMG IF PINS ARE ADJACENT
	ADD T,WRAPMG		;INSULATED WIRE TO WRAP AROUND POST
	ADD T,POSTMG		;BARE WIRE TO WRAP AROUND POST
	IDIV T,SMALL		;MODULO SMALLEST POSSIBLE SPACING
ITS,<	ASH TT,1
	CAML TT,SMALL
>;ITS
NOITS,<	SKIPE TT	>
	ADDI T,1		;YES, ADD 1
	MOVE G,T
	POPJ P,

DSTERR:	SETZ G,
	POPJ P,

;CALCULATE POINT TO POINT DISTANCE

DISTPP:
	PUSHJ P,PINMAP		;MAP ONE OF THEM
	JRST DSTERR
	MOVE A,C		;GET OTHER POINT
	MOVE B,D
	MOVE C,T		;SAVE X,Y
	PUSHJ P,PINMAP
	JRST DSTERR
	HLRE TT,T
	HLRE TTT,C
	SUB TT,TTT		;GET VERTICAL DISTANCE
	IMUL TT,TT		;SQUARE IT
	HRRE T,T
	HRRE C,C
	SUB T,C			;HORIZONTAL DISTANCE
	IMUL T,T		;SQUARE IT
	ADD T,TT
	JUMPE T,DSTIS0		;DON'T WASTE TIME ON 0 LENGH RUNS
	PUSHJ P,SQRT		;SQUARE ROOT = HYPOTENEUSE (?SP?)
	CAILE T,=8000		;LONGER THAN 8 INCHES?
	ADDI T,=250		;YES, ADD 1/4 INCH
NOSTAN,<CAME T,SMALL
	ADD T,WRAPMG		;ADD SOME TO GO AROUND THE PINS
	ADD T,POSTMG		;ADD 1.5" FOR WRAPPING AROUND POSTS
>;NOSTAN
STANFO,<	;QUANTIZE FOR PRECUT WIRES
	CAMN T,SMALL		;ADJACENT PINS?
	JRST [	ADD T,POSTMG	;YES, ADD BARD WRAP ONLY
		JRST DSTIS1	]
	ADD T,POSTMG
	ADD T,WRAPMG
	MOVEI TTT,=500		;SET TTT TO INCREMENT FOR WIRRES FROM 3 TO 8 INCHES
	CAILE T,=8000		;OVER 8" ?
	MOVEI TTT,=1000		;YES, SET TTT TO INCREMENT FOR WIRES OVER 8 INCHES
	IDIV T,TTT
	SKIPE TT
	ADDI T,1
	IMUL T,TTT		;ROUND UP TO APPROPRIATE INCREMENT
DSTIS1:
>;STANFO
	IDIV T,SMALL		;MODULO SMALLEST POSSIBLE DISTANCE BETWEEN PINS
	SKIPE TT		;REMAINDER?
	ADDI T,1		;YES, ROUND UP
DSTIS0:	MOVE G,T
	POPJ P,
;SPECIAL DEC ROUTINES FOR WIRELISTER

DEFINE CHKBRD
<	SKIPGE NOMTYP
	JRST NBOARD
>

DEC,<
;PRINTS LOCATION AND PIN # FOR TAPR-8 OUTPUT
;NUMBER OF PIN ON DIP IN T
;BODY BITS IN TT
;LOCATION (DIP,,PIN) IN A
TP8LOC:	CHKBRD
	TRNE TT,CBODY		;CONNECTOR?
	JRST TP8CON		;YES
	LDB TT,[POINT 6,A,5]
	MOVE TT,N2L(TT)		;GET LOC LETTER IN CASE NON-STANDARD
	CAIN T,=14
	MOVEI TT,"E"		;STANDARD FOR 14 PIN
	CAIN T,=16
	MOVEI TT,"F"		;16 PIN
	CAIN T,=24
	MOVEI TT,"G"		;24 PIN
	PUTBYT (TT)
	LDB T,[POINT 12,A,17]
	CAILE T,=99
	JRST TP8ERR
	MOVEI TT,2
	MOVEM TT,NDIG
	PUSHJ P,NPUTDEC
	HRRZ T,A
	CAILE T,=99
	JRST TP8ERR
	MOVEI TT,2
	MOVEM TT,NDIG
	JRST NPUTDEC

TP8CON:	LDB T,[POINT 6,A,5]
	PUTBYT @N2L(T)
	LDB T,[POINT 6,A,29]
	PUTBYT @N2L(T)
	MOVEI T,2
	MOVEM T,NDIG
	LDB T,[POINT 6,A,35]
	JRST NPUTDEC

TP8ERR:	OUTSTR[ASCIZ\ILLEGAL DIP AND/OR PIN #
\]
	POPJ P,

;PRINT PIN NUMBER FOR CS FILE
NETPIN:	MOVE T,A
	JRST DECOUT

;PRINT BP PIN FOR CS
PRCSBP:	LDB T,[POINT 5,A,26]
	LDB TT,[POINT 6,A,5]
	ADDI T,-1(TT)
	PUTBYT @N2L(T)
	LDB T,[POINT 6,A,35]
	MOVEI TT,2
	MOVEM TT,NDIG
	PUSHJ P,NDECOUT
	PUTBYT 40
	LDB T,[POINT 6,A,17]
	SUBI T,1
	IMULI T,=18
	LDB TT,[POINT 6,A,11]
	ADD T,TT
	MOVEI TT,2
	MOVEM TT,NDIG
	JRST NDECOUT

;PRINT PIN NUMBER FOR REDAC
RDCBPN:	CHKBRD
	HLRZ T,A
	JRST DECOUT

;PRINT PIN(A-V) AS NUMBER FOR REDAC
RDCCPN:	CHKBRD
	LDB T,[POINT 6,A,11]
	HLRZ TT,B
	CAILE TT,3
	SETZ TT,
	ADD T,(TT)[	0		;CASE 0 (??)
			0		;CASE 1 (1-18)
			=18		;CASE 2 (19-36)
			2*=18]		;CASE 3 (37-54)
	JRST DECOUT

;PRINT PADDLE ("U") AND NUMBER FOR WILD PIN
RDCUCN:	CHKBRD
	LDB T,[POINT 5,A,23]
	PUTBYT @N2L(T)
	LDB T,[POINT 11,A,17]
	JRST DECOUT

;PRINT CONNECTOR PADDLE AND SIDE
RDCCPD:	CHKBRD
	LDB T,[POINT 5,A,23]
	PUTBYT @N2L(T)
	LDB T,[POINT 6,A,17]
	JRST DECOUT

;PRINT NUMBER FOR CONNECTOR IN A FOR SR FILE
SRCPNM:	CHKBRD
	LDB T,[POINT 6,A,23]
	SUBI T,1
	TLNN A,4000	;WILD PIN?
	CAILE T,5	;OR ILLEGAL PADDLE?
	JRST SRCPER
	LDB TT,[POINT 6,A,17]
	CAIL TT,1
	CAILE TT,2
	JRST SRCPER
	SUBI TT,1
	LDB TTT,[POINT 5,A,11]
	SUBI TTT,1
	TRNE TT,1		;SIDE 2?
	TRO TTT,40		;YES, LOOK THERE
	SKIPGE SRPTAB(TTT)
	JRST SRCPER
	IMULI T,=33
	ADD T,SRPTAB(TTT)
	JRST PUTDEC

SRPTAB:
FOR I_4,=18
<	I		;A1-S1
>
	-1		;T1
FOR I_=19,=20
<	I		;U1-V1
>
REPEAT 40-<.-SRPTAB>,<-1>
	-1		;A2
	=21		;B2
	-1		;C2
FOR I_=22,=36		;D2-V2
<	I
>
REPEAT 100-<.-SRPTAB>,<-1>

SRCPER:	PUTSTR[ASCIZ/***/]
	POPJ P,
;GENERATE U PINS
;CALL WITH C(A) POINTER TO LAST PIN GENERATED
UGIN:	CHKBRD
	TRNE A,OUTLD
	JRST [	MOVEI A,UGINP2
		JRST UGIN1]
	TRNE A,TERM
	JRST [	MOVEI A,UGINP3
		JRST UGIN1]
	MOVEI A,UGINP1
UGIN1:	SKIPGE (A)
	POPJ P,			;RAN OUT
	PUSH P,T
	HLRZ T,(A)
	ADDI T,1
	CAMLE T,1(A)			;OVERFLOW?
	JRST UGINER
	HRLM T,(A)
	POP P,T
	MOVE A,(A)
	JRST CPOPJ1

UGINER:	POP P,T
	SETOM (A)
	OUTSTR[ASCIZ/RAN OUT OF GENERATED "U" PINS IN THE RANGE /]
	OUTSTR 2(A)
	OUTSTR[ASCIZ/.
NO MORE PINS WILL BE GENERATED IN THIS RANGE.
/]
	POPJ P,

UGINSET:CHKBRD
	HRRZ T,L2N+"U"
	LSH T,14
	HRLI T,4000+0
	MOVEM T,UGINP1
	HRLI T,4000+=199
	MOVEM T,UGINP2
	HRLI T,4000+=399
	MOVEM T,UGINP3
	POPJ P,

UGINP1:	0
	4000+=199
	ASCIZ/U100-U199/

UGINP2:	0
	4000+=399
	ASCIZ/U200-U399/

UGINP3:	0
	4000+=599
	ASCIZ/U400-U599/
>;DEC
>;MWL
  