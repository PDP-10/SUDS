;<DRAW>POINT.FAI;85, 29-JUL-75 17:40:21, EDIT BY HELLIWELL
VERSION(POINT,7)

;AED	AL DUNLOP	CMU	5/3/76	22:00:00

;STRAIGHTEN LINES (D) CHECK FOR COINCEDENT POINTS
MD,<
STRAIGHTEN:
	TRO MCHG!NEEDCL
	SKIPN A,PONPNT
	POPJ P,
STRTN1:	MOVE TT,1(A)	;X,Y
	PUSHJ P,PMOVX	;STRAIGHTEN X
	PUSHJ P,PMOVY	;STRAIGHTEN Y
	HRRZ A,(A)
	JUMPN A,STRTN1
	POPJ P,
>;MD

;CHECK FOR POINT COINCEDENT WITH POINT IN A
STOPM:
MPC,<	HLRZ TT,(A)
	HRRZ TT,1(TT)
	MOVE TT,1(TT)
	EQV TT,SID
	JUMPL TT,SAMSTP
	SKIPE B,PONPN2
	JRST STOPM0
	POPJ P,

SAMSTP:
>;MPC
	SKIPN B,PONPNT
	POPJ P,
STOPM0:	MOVE T,1(A)
MD,<	HRLM B,(P)
	PUSHJ P,STOPM4
	POPJ P,			;FOUND LOSER
	HLRZ A,(A)
	HLRZ A,1(A)
	MOVE C,A
DEFINE STPMAC ' (X,Y)
<	H'X'RZ A,Y(C)
	JUMPE A,STPM'X'Y
	MOVE T,1(A)
	HLRZ B,(P)
	PUSHJ P,STOPM4
	POPJ P,
STPM'X'Y:
>
FOR I IN (<L,0>,<L,1>,<R,0>,<R,1>)
<	STPMAC(I)
>
	POPJ P,

>;MD
STOPM4:	CAMN T,1(B)
	JRST STOPM3
STOPM1:	HRRZ B,(B)
	JUMPN B,STOPM4
MD,<	JRST CPOPJ1	>
MPC,<	POPJ P,	>

STOPM3:	CAMN A,B
	JRST STOPM1
	OUTSTR[ASCIZ/
YOU JUST PUT ONE POINT ON TOP OF ANOTHER,
YOU'D BETTER FIX IT!
/]
	POPJ P,			;ONLY SAY IT ONCE
;PUTPNT, ONSCR
;PUTPNT:  CREATES A POINT ENTRY ...
;CALL WITH:
;		A = POINTER TO PIN # & X,Y BLOCK
;		B = BITS & BODY POINTER

PUTPNT:	SETZM HSHFLG#
PUTPN0:	GETFS (D)
	GETFS (TTT)
	HRLZM TTT,(D)	;LINK BLOCKS TOGETHER
	TRO NEEDCL	;NEED ANOTHER CLOSES
	TLNE B,ISPIN	;IS THIS GOING TO BE A PIN?
	TDZA E,E	;YES, ZERO TO CELL
	AOS E,PID	;NEW POINT ID
	HRRM E,(TTT)	;SAVE POINT ID OR 0
	HRLM B,(TTT)	;SAVE BODY POINTER OR 0
	SKIPE HSHFLG	;FAST ENTRY??
	JRST PUTPN4
	MOVE T,D
	HRLI T,PONPNT
	MOVEM T,LSTPNT	;LAST POINT STORED AND ITS LAST
	MOVE T,PONPNT
	HRRZM D,PONPNT
	HRRM T,(D)
PUTPN4:
MD,<	GETFS (E)
	SETZM (E)	;NO LINES
	SETZM 1(E)	;...
>;MD
MPC,<	SETZ E,		;NO LINE BLOCK TO START WITH	>
	HRLZM E,1(TTT)	;DEPOSIT POINTER TO ^_ BLOCK
	GETFS (T)
	HRRM T,1(TTT)	;DEPOSIT POINTER TO TEXT & BODY POINTER BLOCK
	MOVEM A,(T)	;DEPOSIT PIN POINTER
MPC,<
	TLZ B,FRONT	;CLEAR THIS BIT
	IOR B,SID	;PUT IT ON CURRENT SIDE
ROUTE,<	TLZ M,%ROUTE	;MAKE HIM ROUTE AGAIN>
>;MPC
	HLLZM B,1(T)	;DEPOSIT BITS &  0
	POPJ P,

ONSCR:	CAML T,LEFT
	CAMLE T,RIGHT
	POPJ P,
	HRRE TTT,T	;GET Y
	CAML TTT,BOTTOM
	CAMLE TTT,TOP
	POPJ P,
	AOS (P)		;DO THIS FOR SPEED
	POPJ P,
;ALTMODE, SPACE, PNTPUT
PNALT:	TRZE INLIN
	TRO NEEDCL
CLRMOV:	TRZE INMOV	;TURN OFF MOVING
	TRO NEEDCL
	POPJ P,

MD,<
PNSPC:	TRNN INLIN
	JRST CLRMOV
	TRC ZIGZAG	;COMPLIMENT THE WAY THE ZIG ZAGS
	POPJ P,
>;MD
;PNTPUT
;CALL WITH
;	T	X,Y FOR NEW POINT
;RETURNS WITH
;	D	POINTER TO POINT
;	TTT	DATA BLOCK
;	T	TEXT AND BODY BLOCK
;	E	NEIGHBORS

HSHPUT:	AOSA HSHFLG#	;MAKE FAST HASH ENTRY FOR NOW
PNTPUT:	SETZM HSHFLG
	PUSH P,B	;SAVE B
	SETZB A,B
	PUSH P,T	;SAVE X,Y
	PUSHJ P,PUTPN0	;CREATE ENTRY
	POP P,1(D)	;DEPOSIT X,Y
	POP P,B
	POPJ P,
;NOT (D)
MD,<
PNOT:	TRNE INLIN	;CHECK DRAWING LINE
	PUSHJ P,GETCLS
	JRST PERRET	;NO
	PUSHJ P,PNOT1
	JRST PERRET
	POPJ P,

PNOT1:	MOVE B,LINING
	HLRZ C,(A)
	HLRZ C,1(C)	;_^
	HLRZ D,(B)
	HLRZ D,1(D)	;_^
	MOVE T,1(A)	;X,Y OF START POINT
	ADJUST(SUB,T,<1(B)>)	;- X,Y OF DESTINATION
	HRRE TT,T
	HLRES T
	MOVEI E,0
	MOVEI F,2
	SKIPGE T
	MOVEI E,1
	SKIPGE TT
	MOVEI F,3
	MOVMS T
	MOVMS TT
	CAMN T,TT	;45 DEGREES?
	TRNN ZIGZAG	;YES, TAKE HINT FROM ZIGZAG
	CAMLE T,TT	;HORZ OR VERT?
	MOVE F,E	;HORZ, USE HORZ DISP.
	JRST @(F)[	NRIGHT
			NLEFT
			NUP
			NDOWN]
NRIGHT:	HRRZ T,1(D)
	JUMPN T,CPOPJ	;ONE THERE ALREADY, LOSE
	HLRZ T,1(C)
	JUMPN T,CPOPJ	;ONE LEFT OF DEST., LOSE
	HRRM A,1(D)
	HRLM B,1(C)
	JRST NOUT
NLEFT:	HLRZ T,1(D)
	JUMPN T,CPOPJ
	HRRZ T,1(C)
	JUMPN T,CPOPJ
	HRLM A,1(D)
	HRRM B,1(C)
	JRST NOUT
NUP:	HRRZ T,(D)
	JUMPN T,CPOPJ
	HLRZ T,(C)
	JUMPN T,CPOPJ
	HRRM A,(D)
	HRLM B,(C)
	JRST NOUT
NDOWN:	HLRZ T,(D)
	JUMPN T,CPOPJ
	HRRZ T,(C)
	JUMPN T,CPOPJ
	HRLM A,(D)
	HRRM B,(C)
NOUT:	TRZ INLIN
	TRO MCHG!NEEDCL
	JRST CPOPJ1
;MINUS, PLUS (D)
PNMNS:	TRNE INLIN	;CHECK DRAWING LINE
	PUSHJ P,GETCLS
	JRST PERRET
	PUSHJ P,PNMNS1	;TRY THE WAY WE ARE NOW
	TRCA ZIGZAG
	POPJ P,
	PUSHJ P,PNMNS1	;TRY THE OTHER WAY TOO
	TRCA ZIGZAG	;PUT IT BACK THE WAY WE FOUND IT
	POPJ P,
	JRST PERRET

PNMNS1:	MOVE B,LINING
	MOVE TT,1(B)
	MOVE T,1(A)	;GET ITS X,Y
	XOR TT,T
	TLNE TT,-1
	TRNN TT,-1
	JRST PNOT1	;ONLY DIFFERENT IN ONE DIMENSION, GO DO PNOT
	MOVE TT,1(B)
	SUB TT,T	;COMPUTE DIF BETWEEN POINTS
	SETZ C,
	TRNE ZIGZAG	;WHICH WAY ARE WE GOING?
	AOSA C
	MOVSS TT
	HLRZ TTT,(A)
	HLRZ TTT,1(TTT)
	ADD TTT,C
	TLNN TT,400000
	SKIPA TTT,(TTT)
	MOVS TTT,(TTT)
	TRNE TTT,-1
	POPJ P,
	MOVE TTT,LINING	;NOW CHECK POINT WE ARE COMING FROM
	HLRZ TTT,(TTT)
	HLRZ TTT,1(TTT)
	SUBI TTT,-1(C)	;OTHER DIRECTION FROM CLOSES
	TRNE TT,400000	;DITTO
	SKIPA TTT,(TTT)
	MOVS TTT,(TTT)
	TRNE TTT,-1	;LINE THERE ALREADY?
	POPJ P,		;YES, LOSE
	PUSH P,CURSE
	MOVEM T,CURSE
	PUSH P,A
	PUSHJ P,PLPNT	;MAKE A CORNER POINT
	MOVE B,LINING	;GET POINTER TO NEW OLD POINT
	POP P,D
	HLRZ TTT,(D)	;GET DATA BLOCK POINTER
	MOVE T,1(D)	;GET X,Y
	PUSHJ P,PLENT	;ENTER THE LAST LINE
	POP P,CURSE
	TRZ INLIN
	TRO NEEDCL!MCHG
	JRST CPOPJ1

PPLUS:	PUSHJ P,CLRMOV
	TRNE INLIN	;ARE WE ALREADY DRAWING A LINE?
	JRST PLPNT	;YES
	PUSHJ P,GETCLS	;NO, DRAW IT TO CLOSEST POINT?
	JRST PERRET
	MOVEM A,LINING	;...
	TRZ ZIGZAG	;START OUT THIS WAY
	TRO NEEDCL!INLIN
	POPJ P,
;MINUS, PLUS SUBRS (D)
PLPNTF:	TRC ZIGZAG	;TRY THE OTHER WAY
PLPNT:	MOVE B,LINING	;GET POINT WE ARE COMING FROM
	MOVE T,CURSE	;GET CURSOR POSITION
	CAMN T,1(B)	;SHOULD BE DIFFERENT
	POPJ P,
	TRNN ZIGZAG	;WHICH WAY ARE WE GOING
	MOVE T,1(B)	;THE OTHER WAY
	HLL T,CURSE	;GET CURSOR X
	TRNE ZIGZAG	;WHICH WAY ARE WE GOING?
	HLL T,1(B)	;THE OTHER WAY
	CAMN T,1(B)	;THIS SHOULDN'T MATCH
	JRST PLPNTF	;TRY THE OTHER WAY
	PUSH P,T
	PUSHJ P,PNTPUT	;CREATE THE POINT
	POP P,T
PLENT:	MOVEI A,
	MOVE TT,1(B)	;GET X,Y FOR OLD POINT
	TRNE ZIGZAG	;WHICH WAY?
	JRST PLENT1	;THE OTHER WAY
	MOVEI A,1	;_ INSTEAD OF ^
	MOVSS T
	MOVSS TT	;LOOK AT X INSTEAD OF Y
PLENT1:	SUB T,TT	;GET DIRECTION OF DIFFERENCE
	MOVE TT,A
	TRNN T,400000	;WAS SIGN NEGATIVE?
	ADDI A,2	;NO, SWITCH WHICH IS LEFT & WHICH IS RIGHT
	HLRZ TT,(B)	;GET POINTER TO OLD POINT DATA BLOCK
	HLRZ TT,1(TT)	;GET POINTER TO OLD POINT _^ BLOCK
	HLRZ E,1(TTT)
	XCT (A)[HLRZ F,(TT)	;GET OLD POINTER FROM OLD
		HLRZ F,1(TT)	;SEE ROT0 FOR COMMENTS::::
		HRRZ F,(TT)
		HRRZ F,1(TT)]
	JUMPN F,PERRET		;LOSE IF LINE THERE ALREADY
	XCT (A)[HRRM B,(E)	;DEPOSIT POINTER IN NEW TO OLD
		HRRM B,1(E)
		HRLM B,(E)
		HRLM B,1(E)]
	XCT (A)[HRLM D,(TT)	;DEPOSIT POINTER IN OLD TO NEW
		HRLM D,1(TT)
		HRRM D,(TT)
		HRRM D,1(TT)]
	TRC ZIGZAG	;CHANGE THE WAY WE GO
	MOVEM D,LINING	;GO FROM NEW POINT
	MOVEM D,MOVED	;BETTER CHECK IF ON TOP OF ANOTHER POINT
	TRO MCHG
	POPJ P,
>;MD
;MAKE FEEDTHROUGH(|), PLUS (PC)
MPC,<
;SIMULATE +$1F1R+
PLFEED:	PUSHJ P,CLRMOV		;CAN'T BE MOVING
	TRNE INLIN		;IF NOT DRAWING LINE
	JRST PLFEDL
	PUSHJ P,GETCLS		;FIND CLOSEST
	JRST PERRET		;NONE
	HLRZ T,(A)
	HRRZ T,1(T)
	MOVE T,1(T)
	TLNE T,ISPIN!CPIN!FEEDTH
	JRST PERRET
	MOVEM A,LINING		;THE REST IS THE SAME
	TRO INLIN		;NOW IN LINE DRAWING MODE
	JRST PLFDL0

PLFEDL:	PUSHJ P,PPLUS0		;SIMULATE PLUS
	JRST PERRET		;CAN'T +
PLFDL0:	MOVE G,LINING
	PUSHJ P,RDFEED		;SIMULATE 1F
	PUSHJ P,FUCKUP		;JUST MADE POINT, CAN'T LOSE
	MOVE G,LINING
	HLRZ G,(G)
	HLRZ B,(G)		;POINTER TO OTHER SIDE
	HRRZ G,1(G)
	MOVE T,1(G)
	TLNN T,FEEDTH		;DID IT REALLY FEED THROUGH?
	JRST PERRET
	HRRZM B,LINING		;GO FROM OTHER SIDE NOW
	SWITCH			;NOW WE'RE ON THE OTHER SIDE
	POPJ P,

PPLUS:	PUSHJ P,PPLUS0
	JRST PERRET
	POPJ P,

PPLUS0:	TRNE INLIN
	JRST PLPNT
	PUSHJ P,GETCLS
	POPJ P,
	MOVEM A,LINING
	TRZ INMOV
	TRO NEEDCL!INLIN
	JRST CPOPJ1

PLPNT:	MOVE T,CURSE
	MOVE B,LINING
	CAMN T,1(B)		;WILL THIS MAKE COINCIDENT POINTS?
	POPJ P,
	PUSHJ P,PNTPUT
	GETFS(E)
	HRLM E,1(TTT)		;WILL NEED NEIGHBOR BLOCK
	SETZM 1(E)
	HRLZM B,(E)
	HLRZ T,(B)
	PUSHJ P,FRELNK
	XCT (T)[PUTAB:	HRLM D,(B)
			HRRM D,1(B)
			HRLM D,1(B)]
	MOVEM D,LINING
	MOVEM D,MOVED		;BETTER CHECK IF ON TOP OF ANOTHER POINT
	TRO MCHG
	JRST CPOPJ1		;WIN RETURN
;MINUS, FNDLNK, FRELNK (PC)
PNMNS:	TRNE INLIN
	PUSHJ P,GETCLS
	JRST PERRET
PNMNS1:	MOVE B,LINING		;ENTER HERE FROM LATTL
	HLRZ B,(B)
	HLRZ B,1(B)
	PUSHJ P,FNDLNK		;ALREADY GOT A POINTER TO IT?
	TRZA INLIN		;NO, MAKE IT!
	JRST PERRET		;YES, SCREW HIM!
	PUSH P,A
	HLRZ T,(A)
	PUSHJ P,FRELNK
	MOVE D,LINING
	XCT (T)PUTAB
	HLRZ T,(D)
	PUSHJ P,FRELNK
	POP P,D
	XCT (T)PUTAB
	TRO MCHG!NEEDCL
	MOVEI T,ANGLPG
	JRST HYDPOG

FNDL2:	MOVEI T,2
FNDL1:	XCT (T)[GETAB:	HLRZ TT,(B)
			HRRZ TT,1(B)
			HLRZ TT,1(B)]
	CAIN TT,(A)
	JRST CPOPJ1
	SOJGE T,FNDL1
	MOVE TT,B
	HRRZ B,(B)
FNDLNK:	JUMPN B,FNDL2
	POPJ P,

FRELNK:	HLRZ B,1(T)
	JUMPN B,FRLNK1
	GETFS(B)
	SETZM 1(B)
	SETZM (B)
	HRLM B,1(T)
FRLNK1:	SETZ A,
	PUSHJ P,FNDLNK
	CAIA
	POPJ P,
	GETFS(B)
	HRRM B,(TT)
	SETZM (B)
	SETZM 1(B)
	MOVEI T,2	;USE LAST FIRST
	POPJ P,
>;MPC
;PNTPLC, PN2DEL
PNTPLC:	TRNE INMOV!INLIN
	JRST PERRET
	MOVE T,CURSE	;GET CURSOR POSITION
	PUSHJ P,PNTPUT	;MAKE A POINT
	MOVE T,LSTPNT	;GET NEW POINT AND PREVIOUS POINTER
	JRST SCLOSE

PN2DEL:	PUSHJ P,GETCLS
	POPJ P,
	MOVE B,CLAST
	EXCH B,A
	HLRZ C,(B)
	HLRZ C,1(C)
MD,<
	MOVE T,(C)
	MOVE TT,1(C)
	JUMPE T,[JUMPE TT,DELPNT
		TLNE TT,-1
		TRNN TT,-1
		JRST PERRET
		PUSHJ P,LMER1
		SETOM CLOSUP
		JRST DELPNT]
	TLNE T,-1
	TRNN T,-1
	JRST PERRET
	JUMPE TT,[PUSHJ P,LMER0
		SETOM CLOSUP
		JRST DELPNT]
	TLNE TT,-1
	TRNN TT,-1
	JRST PERRET
	SETOM CLOSUP
	PUSHJ P,LMER0
	PUSHJ P,LMER1
	JRST DELPNT

FOR @$ I_0,1
<
LMER$I:	HLRZ D,I(C)
	HRRZ T,I(C)
	HLRZ TT,(D)
	HLRZ TT,1(TT)
	HRRM T,I(TT)
	HLRZ TT,(T)
	HLRZ TT,1(TT)
	HRLM D,I(TT)
	POPJ P,
>
>;MD

MPC,<	JUMPE C,PERRET
	SETZM 1(P)
	SETZM 2(P)
D2LIN:	MOVEI E,2
D2LIN1:	XCT (E)DELTAB
	JUMPE D,D2LIN2
	EXCH D,1(P)		;ADVANCE THE WORLD
	EXCH D,2(P)
	JUMPN D,PERRET		;NON-ZERO IF TOO MANY
D2LIN2:	SOJGE E,D2LIN1
	HRRZ C,(C)
	JUMPN C,D2LIN
	SKIPN 2(P)		;FIND 2?
	JRST PERRET		;NO
	AOBJN P,.+1		;NOW PUSH ONE
	MOVE D,1(P)		;PICKUP THE OTHER
	PUSH P,A		;PUSH A IN ITS SPOT
	MOVE A,B		;SETUP A WITH PIN POINTER
	MOVE B,-1(P)		;AND PICKUP THE FIRST
	PUSHJ P,D2LIN4
	MOVE B,D
	MOVE D,-1(P)		;NOW THE OTHER WAY
	PUSHJ P,D2LIN4
	POP P,B			;RESTORE LAST
	POP P,(P)		;THROW AWAY THE OTHER
	EXCH A,B		;GET A AND B IN RIGHT PLACES
	SETOM CLOSUP
	JRST DELPNT		;AND DELETE

D2LIN4:	HLRZ B,(B)
	HLRZ B,1(B)
	PUSHJ P,FNDLNK
	PUSHJ P,FUCKUP
	XCT (T)PUTAB
	POPJ P,
>;MPC
;DELPNT
DELPNL:	PUSHJ P,LNKSET	;SETUP A WITH LAST POINTER
	JRST DELPNT	;THEN LEAP IN

PNTDEL:	PUSHJ P,GETCLS	;GET POINTER TO CLOSEST POINT
	JRST PERRET
	MOVE B,CLAST	;ALSO LAST POINTER
	EXCH B,A	;INTO CORRECT AC'S
	TRZ TFLG	;DON'T DELETE PINS
	TRZE INMOV
	TRO NEEDCL
DELPNT:	TRO MCHG
	TRZ INMOV
	PUSH P,A	;SAVE LAST
	PUSHJ P,REMPNT	;REMOVE POINT FROM ANY SETS
	PUSHJ P,KILPNT	;KILL LINES, TEXT
	POP P,A		;RESTORE LAST
	TRNE TFLG	;DELETE PINS?
	JRST DELPOK	;YES
	TLNE F,MPC,<CPIN!>ISPIN		;IS IT A PIN?
	POPJ P,		;YES, DON'T DELETE
DELPOK:	TRO NEEDCL
	HRRZ T,(B)
	HRRM T,(A)	;LINK US OUT
MPC,<	HLR F,(B)
	HLR F,(F)	;GET BODY OR FEED THROUGH POINTER
>;MPC
	HLRZ D,(B)	;PUT THIS STUFF BACK ON FREE STORAGE...
	HRRZ E,(B)	;GET POINTER TO NEXT
	MOVE A,B	;...
	FSTRET (A)
MD,<
	HLRZ A,1(D)
	FSTRET (A)
>;MD
DPARN:	HRRZ A,1(D)
	FSTRET (D)
	HLRZ D,(A)
	TLNN F,CPIN
	JRST NTCPIN
	PUSH P,(A)	;PUSH POINTER TO CPIN BLOCK
	FSTRET (A)
	POP P,A
NTCPIN:	FSTRET (A)
	JUMPE D,NTCPN1
	PUSH P,B
	MOVE B,D
	PUSHJ P,PUTFS
	POP P,B
NTCPN1:
MPC,<	TLNN F,FEEDTH	;IS IT A FEED THROUGH?
	POPJ P,		;NO
	HLRZ A,(F)
	HRRZ A,1(A)
	MOVSI B,FEEDTH
	ANDCAB B,1(A)	;MAKE SURE HE DOESN'T TRY TO GET BACK
	HRRZ B,F
	SWITCH
	PUSHJ P,DELPNL
	SWITCH
>;MPC
	POPJ P,
;DELPNT SUBRS
KILPNT:	PUSHJ P,KILTXT	;FLUSH TEXT
ROUTE,<MPC,<TLZ M,%ROUTE>>;MAKE HIM ROUTE AGAIN
	HLRZ  C,(B)	;GET POINTER TO DATA BLOCK
	MOVE F,1(C)
	MOVE F,1(F)	;GET BITS
	HLRZ C,1(C)	;GET POINTER TO _^ BLOCK
MD,<
	DEFINE FOO (A,B)
<	A D,B(C)
	JUMPE D,.+2
	PUSHJ P,REMLIN>
	FOO (HRRZ)
	FOO (HLRZ)
	FOO (HRRZ,1)
	FOO (HLRZ,1)
	SETZM (C)	;CLEAR _^ POINTERS
	SETZM 1(C)	;...
>;MD
MPC,<
	MOVE A,B
	JUMPE C,DELMER
	PUSH P,C
DELIN:	MOVEI E,2
DELIN1:	XCT (E)[DELTAB:	HLRZ D,(C)
			HRRZ D,1(C)
			HLRZ D,1(C)]
	JUMPE D,.+2
	PUSHJ P,REMLIN
	SOJGE E,DELIN1
	HRRZ C,(C)
	JUMPN C,DELIN
	POP P,C
DELMER:	PUSH P,B
	HLRZ B,(B)
	HRRZS 1(B)
	MOVE B,C
	JUMPE B,.+2
	PUSHJ P,PUTFS
	POP P,B
>;MPC
	HRRZ E,(B)	;GET POINTER TO NEXT POINT
	POPJ P,

MPC,<
REMLIN:	PUSH P,B
	HLRZ B,(D)
	HLRZ B,1(B)
	PUSHJ P,FNDLNK
	CAIA
	XCT (T)[	HRRZS(B)
			HLLZS 1(B)
			HRRZS 1(B)]
	POP P,B
	SETOM CLOSUP
	POPJ P,

>;MPC


MD,<
REMLIN:	HLRZ T,(D)	;GET POINTER TO DATA BLOCK
	HLRZ T,1(T)	;GET POINTER TO _^ BLOCK
	DEFINE FOO (Y,Z,X)
<	Y TT,Z(T)
	CAMN TT,B
	X Z(T)>
	FOO (HRRZ,,HLLZS)
	FOO (HRRZ,1,HLLZS)
	FOO (HLRZ,,HRRZS)
	FOO (HLRZ,1,HRRZS)
	SETOM CLOSUP
	POPJ P,
>;MD

LNKSET:
MPC,<	HLRZ T,(B)
	HRRZ T,1(T)
	MOVE T,1(T)	;GET SIDE BITS
	EQV T,SID
	JUMPL T,LNKSTF	;WHICH SIDE IS IT ON??
	MOVEI A,PONPN2	;OTHER SIDE
	JRST LNKST1

LNKSTF:
>;MPC
	MOVEI A,PONPNT	;CURRENT SIDE
LNKST1:	HRRZ T,(A)
	CAIN T,(B)	;DOES THIS GUY POINT TO US?
	POPJ P,		;YES, RETURN
	MOVE A,T
	JUMPN A,LNKST1
	PUSHJ P,FUCKUP
	MOVE A,B	;LINK BACK TO SELF
	POPJ P,
;DELNUL
DELNUL:	TRZE INLIN!INMOV
	TRO NEEDCL
	TRZ TFLG		;DON'T DELETE PINS!!!!!
	SETZM COUNT		;ZERO COUNT
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/TYPE Y TO MARK NULL POINTS FOR FIND,
(ELSE ALL NULL POINTS WILL BE DELETED)/]
	PUSHJ P,YORN
	POPJ P,			;ALTMODE
	JRST DELALL		;DELETE ALL
	TLO ASK
	SETZM FIND		;NONE FOUND YET
	SKIPE E,PONPNT
	PUSHJ P,ACLRP		;CLEAR FIND MARK BITS
	MOVEI B,PONPNT
	PUSHJ P,DNULL		;NOW MARK NULL POINTS
MPC,<	SKIPE E,PONPN2
	PUSHJ P,ACLRP
	MOVEI B,PONPN2
	PUSHJ P,DNULL
>;MPC
	JRST FNDCNT

DNULLA:	PUSH P,A		;SAVE LAST POINTER
	HLRZ T,(B)
	HLRZ TT,1(T)
MD,<	SKIPN (TT)
	SKIPE 1(TT)
	JRST NODEL
>;MD
MPC,<
	JUMPE TT,DLNCK1
DLINCK:	HLRZ TTT,(TT)
	JUMPN TTT,NODEL
	SKIPE 1(TT)
	JRST NODEL
	HRRZ TT,(TT)
	JUMPN TT,DLINCK
DLNCK1:
>;MPC
	HRRZ T,1(T)
	MOVE TT,1(T)
	TDNE TT,[MPC,<FEEDTH!PLANES!CPIN!>ISPIN,,MPC,<-1>]
	JRST NODEL
	HLRZ TT,(T)
	JUMPN TT,NODEL
	TLNN ASK
	JRST NOASK
	MOVSI TT,FOUNDP			;MARK POINT
	IORM TT,1(T)
	AOS FIND		;COUNT ANOTHER FOUND
	JRST NODEL

NOASK:	MOVE A,(P)			;SETUP LAST POINTER
	PUSHJ P,DELPNT
	AOS COUNT
	POP P,B
	JRST DNULL

NODEL:	POP P,B
	HRRZ B,(B)			;ADVANCE POINTER
DNULL:	MOVE A,B
	HRRZ B,(B)
	JUMPN B,DNULLA
	POPJ P,

DELALL:	MOVEI T,1
	LSH T,@MODE
	TDNE T,[1ALTM]
	JRST PERRET
	TLZ ASK
	MOVEI B,PONPNT
	PUSHJ P,DNULL
MPC,<	MOVEI B,PONPN2
	PUSHJ P,DNULL
>;MPC
CNTOUT:	TRO NEEDCL
	TLNE M,DSKACT!MACACT
	POPJ P,
	OUTSTR[ASCIZ/
/]
	MOVE T,COUNT
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ NULL POINTS DELETED!/]
	POPJ P,

DANGLE:	TRZE INLIN!INMOV
	TRO NEEDCL
	SETZM COUNT
	SETZM FIND
	SKIPE E,PONPNT
	PUSHJ P,DODANG
MPC,<	SKIPE E,PONPN2
	PUSHJ P,DODANG
>;MPC
	TLNN M,DSKACT!MACACT
	SKIPN T,COUNT
	JRST FNDCNT
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ COINCIDENT POINTS OUT OF /]
	JRST FNDCNT

DODANG:	PUSH P,E
	PUSHJ P,ACLRP		;CLEAR MARK BITS
	POP P,E
DANGA:	SETO TTT,		;PREPARE COUNT
	HLRZ A,(E)
	HRRZ B,1(A)
	MOVE T,1(B)
	TDNE T,[MPC,<PLANES!CPIN!>ISPIN,,MPC,<-1>]
	JRST COINA
	TLNE T,MPC,<FEEDTH!>CPIN
	AOJG TTT,COINA
MD,<	HLRZ T,1(A)
	SKIPE (T)		;ONLY COUNT EACH DEMENSION AS ONE
	AOJG TTT,COINA
	SKIPE 1(T)
	AOJG TTT,COINA
	HLRZ T,(B)
	JUMPE T,DANGST
	AOJLE TTT,DANGST
>;MD
MPC,<	HLRZ T,(B)
	JUMPN T,COINA
	HLRZ T,1(A)
	JUMPE T,DANG1
DANG0:	MOVE TT,1(T)
	TLNE TT,-1
	AOJG TTT,COINA
	TRNE TT,-1
	AOJG TTT,COINA
	MOVE T,(T)
	TLNE T,-1
	AOJG TTT,COINA
	TRNE T,-1
	JRST DANG0
DANG1:
>;MPC
COINA:	MOVE T,1(E)
	MOVE TT,E
	JRST COINB

COINC:	CAMN T,1(TT)
	JRST DANGSC
COINB:	HRRZ TT,(TT)
	JUMPN TT,COINC
DANGB:	HRRZ E,(E)
	JUMPN E,DANGA
	POPJ P,

DANGSC:	AOS COUNT
DANGST:	AOS FIND
	MOVSI T,FOUNDP
	IORM T,1(B)
	JRST DANGB
;CHANGE PAD TYPES
MPC,<
CPADS:	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/TYPE PAD NUMBER TO CHANGE.
/]
	PUSHJ P,READNC
	MOVEM T,COUNT
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/TYPE NEW PAD NUMBER.
/]
	PUSHJ P,READNC
	MOVEM T,COUNT2
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/TYPE Y TO BE ASKED ABOUT EACH ONE/]
	PUSHJ P,YORN
	POPJ P,
	TLZA ASK
	TLO ASK
	MOVEI A,PONPNT
	PUSHJ P,CPADSD
	POPJ P,
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/DO OTHER SIDE/]
	PUSHJ P,YORN
	POPJ P,
	POPJ P,
	SWITCH
	MOVEI A,PONPNT
	PUSHJ P,CPADSD
	JFCL
	SWITCH
	POPJ P,

CPADS1:	HLRZ B,(A)
	HRRZ B,1(B)
	HRRZ T,1(B)
	CAME T,COUNT		;IS THIS ONE TO CHANGE?
	JRST CPADSD		;NO
	MOVE T,1(B)
	TLNN T,FEEDTH		;IF DRILL HOLE
	SKIPN COUNT		;OR FINDING OTHER THAN TYPE 0
	CAIA			;GO AHEAD
	JRST CPADSD
	TLNN ASK
	JRST CPADS2		;DON'T ASK
	MOVE T,1(A)
	PUSHJ P,ONSCR			;ON SCREEN
	PUSHJ P,PICSET			;NO, GET IT ON
	MOVE T,1(A)
	MOVEM T,STARLOC				;LOC TO DISPLAY
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/THIS ONE/]
	MOVEI T,UPSTAR
	MOVEM T,SPDISP
	MOVE T,[ASCID/CP/]
	MOVEM T,SPMODT
	MOVEI T,SPM				;SPECIAL POINTER MODE
	PUSHJ P,TCHNGM				;TEMPORARY CHANGE
	PUSHJ P,YORN
	JFCL
	JFCL			;IGNORE RETURN, WILL CHECK C AGAIN
	PUSHJ P,RCHNGM				;RESTORE MODE
	CAIE C,"Y"
	CAIN C,"y"
	JRST CPADS2
	CAIE C,ALTMOD
	JRST CPADSD		;JUST SKIP THIS ONE
	POPJ P,			;GIVE QUIT RETURN

CPADS2:	MOVE T,COUNT2
	HRRM T,1(B)		;STORE NEW PAD TYPE
	TRO MCHG
CPADSD:	HRRZ A,(A)
	JUMPN A,CPADS1
	JRST CPOPJ1
>;MPC
;MAKE AND BREAK INNER PLANE CONNEX (PC)
MPC,<
PLANE:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ A,(A)
	HLRZ B,(A)
	HRRZ A,1(A)
	HLL B,1(A)
	TLNN B,FEEDTH!ISPIN
	JRST PERRET
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/ PLANE NUMBER?/]
	PUSHJ P,READNC
	ADDI T,1
	CAILE T,7
	JRST PERRET	;LOSE
UNPLN1:	TRO MCHG!NEEDCL
	DPB T,[POINT 3,1(A),6]
	TLNN B,ISPIN
	JRST CHKFED
	HRRZ TTT,(A)
	HLRZ TTT,(TTT)
	HLRZ B,(B)
	JRST PLOOP1
PLOOP2:	HLRZ B,(B)
	HRRZ TT,1(B)
	HRRZ C,(TT)
	HLRZ C,(C)
	CAMN C,TTT	;SAME PIN NUMBER?
	DPB T,[POINT 3,1(TT),6]	;YES, SET PLANE NUMBER
PLOOP1:	HRRZ B,(B)
	JUMPN B,PLOOP2
	POPJ P,

CHKFED:	TLNN B,FEEDTH
	POPJ P,
	HLRZ TT,(B)
	HRRZ TT,1(TT)
	DPB T,[POINT 3,1(TT),6]
	POPJ P,

UNPLAN:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ A,(A)
	HLRZ B,(A)
	HRRZ A,1(A)
	HLL B,1(A)	;PICK UP BITS
	TLNN B,ISPIN!FEEDTH
	JRST PERRET
	MOVEI T,0	;NO PLANE
	JRST UNPLN1
;SET PAD TYPE, MAKE AND BREAK FEEDTHROUGHS (PC)
NPFEED:	PUSHJ P,GETCLS
	JRST PERRET
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/PAD TYPE NUMBER?/]
	PUSHJ P,READNC
	HLRZ A,(A)
	HRRZ A,1(A)
	HRRM T,1(A)		;SET NEW PAD TYPE
	TRO MCHG
	POPJ P,

FEED:	PUSHJ P,GETCLS
	JRST PERRET
	MOVE G,A
	PUSHJ P,RDFEED
	JRST PERRET
	POPJ P,

RDFEED:	HLRZ H,(G)
	HRRZ H,1(H)
	MOVE A,1(H)
	TLNE A,FEEDTH!ISPIN!CPIN
	POPJ P,
	SWITCH
	MOVE T,1(G)
	PUSHJ P,PNTPUT
	MOVE A,T
	SWITCH
	MOVSI T,FEEDTH
	IORM T,1(A)
	IORM T,1(H)
	HRRZ T,1(A)
	JUMPN T,.+3
	MOVEI T,1		;DEFAULT PAD TYPE 1
	HRRM T,1(A)
	HRRZ T,1(H)
	JUMPN T,.+3
	MOVEI T,1
	HRRM T,1(H)
	HLRZ T,(G)
	HRLM D,(T)
	HLRZ T,(D)
	HRLM G,(T)
	TRO MCHG
	JRST CPOPJ1

UNFEED:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ C,(A)
	HRRZ A,1(C)
	MOVE B,1(A)
	TLNN B,FEEDTH
	JRST PERRET
	HLR B,(C)
	HRRZS (C)
	TLZ B,FEEDTH!PLANES
	HLLZM B,1(A)
	HLRZ B,(B)
	HRRZS (B)
	HRRZ B,1(B)
	MOVE A,1(B)
	TLZ A,FEEDTH!PLANES
	HLLZM A,1(B)
	TRO MCHG!NEEDCL
	POPJ P,
>;MPC
;PIN #'S, CONNECTOR AND BODY (D)
MD,<SETCPN:
	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ D,(A)
	HLRZ B,(D)
	HRRZ D,1(D)
	HLL B,1(D)
	TLNE B,ISPIN
	JRST STPINN
	MOVE T,[PUSHJ P,GETLCH]
	MOVEM T,GTCHRX
CAGAIN:	TLNN M,DSKACT!MACACT
	OUTSTR @CPCUE
	PUSHJ P,GTCONP
	JRST INNERR
	JRST [
LAY,<		CAIN C,TEXIST
		JRST [	PUSHJ P,GETLIN		;SNARF LF
			CAIE C,12
			JRST INNERR
			SKIPG T,LAYLOC		;PICK UP CLOC PASSED FROM PC PROG
			JRST [	SKIPN T
				OUTSTR[ASCIZ/NO CONNECTOR LOC PASSED FROM PC PROG!
/]
				SKIPE T
				OUTSTR[ASCIZ/TOO MANY CONNECTOR LOC'S FOUND IN PC PROG!
/]
				JRST CAGAIN]
			HRRZM T,LETTER
			JRST LNNLY]
>;LAY
		CAIE C,12
		JRST INNERR
		HRRZ B,(D)		;GET CPIN POINTER
		JUMPE B,CPOPJ
		HLLZS (D)
		FSTRET (B)
		HRLOI T,CPIN!FIXCON!CPNBTS
		ANDCAM T,1(D)			;CLEAR BITS AND BACKUP PIN NAME
		SETOM CLOSUP
		TRO MCHG
		TRNE LMOVE
		TRZN INMOV
		POPJ P,
		TRO NEEDCL
		POPJ P,]
MD,<	JFCL	>	;DON'T CARE ABOUT BRS
	CAIE C,12
	JRST INNERR
SETLET:	;ENTRY POINT TO SET LOC IN LETTER ON POINT IN A
	HLRZ D,(A)
	HRRZ D,1(D)
	MOVE TT,LETTER
	TLNE TT,-1
	SKIPN T,CRDLOC
	JRST NOGLBC
	XOR T,TT
	TLNE T,-1		;SAME CARD LOC OR NO GLOBAL?
	JRST [	OUTSTR[ASCIZ/SORRY, CANNOT CHANGE CARD LOCATION WHILE GLOBAL CARD LOC IS IN FORCE!
/]
		POPJ P,]
	HRRZS LETTER
NOGLBC:	HRRZ B,(D)		;GET OLD CPIN POINTER
	JUMPN B,GOTFST
	MOVSI B,CPNBTS
	ANDCAM B,1(D)
	MOVSI B,FIXCON!CPIN
	IORM B,1(D)		;MAKE IT GET FIXED INTIALLY
	HLLZS 1(D)		;CLEAR BACKUP PIN NAME
	GETFS(B)
	HRRM B,(D)
	SETZM 1(B)		;CLEAR OFFSET
	SETOM CLOSUP
GOTFST:	PUSHJ P,UBACK
	MOVE T,LETTER
	MOVEM T,(B)
	MOVE C,D
	PUSHJ P,CPNBCK		;CHECK AND SET BITS
	MOVE T,1(D)
	TRO MCHG!NEEDCL
	TLNN T,FIXCON		;CON NEED FIXING?
	POPJ P,
	JRST OFFCON

UBACK:	PUSH P,A
	MOVE A,LETTER
	PUSHJ P,QUPIN		;IS NEW PIN NAME WILD?
	JRST UBACK0
	MOVE A,(B)
	PUSHJ P,QUPIN
	JRST UBACK2
	JRST UBACK1

UBACK0:	MOVE A,(B)
	PUSHJ P,QUPIN
	JRST UBACK1		;OLD ONE NOT WILD, NO BACKUP
UBACK2:	MOVE A,(B)
	HRRM A,1(D)
UBACK1:	POP P,A
	POPJ P,

CPNBCK:	PUSH P,A
	MOVE A,T
	PUSHJ P,QUPIN
	JRST NUPIN
	DPB A,[POINT CPNBSZ,1(C),CPNBPS]	;ALWAYS SET RULE FROM LAST U PIN TYPED
NUPIN:	POP P,A
	POPJ P,
STTRUL:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ B,(A)
	HRRZ B,1(B)
	MOVE T,1(B)
	TLNN T,CPIN
	JRST PERRET
	TLNE M,DSKACT!MACACT
	JRST STTRL0
	OUTSTR[ASCIZ/CURRENT RULE NUMBER = /]
	LDB T,[POINT CPNBSZ,1(B),CPNBPS]
	PUSHJ P,DACOUT
	OUTSDRYASCIZ/
/]
STTRL0:	TLNN M,DSKACT!MACACT
	OUTSDRYASCIZ/TYPE RULE NEMBER (0-3)?/]
	PUSHJ P,READN
	CAIN C,12
	JRST STTRL1
	CAIE C,"?"
	JRST INNERR
	PUSHJ P,GETCHR
	CAIE C,12
JRST INNERR
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/0	NO RULE
1	NO TERMINATION (U001-U199)
2	?? (U200-U399)
3	TERMINATED (U400-U599)
/]
	JRST STTRUL

STTRL1:	CAILE T,3
	JRST INNERR
	DPB T,[POINT CPNBSZ,1(B),CPNBPS]
	POPJ P,

CLTRUL:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ B,(A)
	HRRZ B,1(B)
	MOVE T,1(B)
	TLNN T,CPIN
	JRST PERRET
	PUSHJ P,SETTT
	LDB B,[POINT CPNBSZ,1(B),CPNBPS]
	PUSHJ P,PUTTTN
	JRST ITSTUF
;SET BODY PIN #
STPINN:	TLNE M,DSKACT!MACACT
	JRST STPIN0
	OUTSTR[ASCIZ/PIN NAME(/]
	OUTSTR @PINCUE
	OUTSTR[ASCIZ/)?/]
STPIN0:	MOVE T,[PUSHJ P,GETLCH]
	MOVEM T,GTCHRX
	PUSHJ P,RPNAM
	JRST INNERR
	CAIE C,12
	JRST INNERR
STPNN1:	TLNE M,PLOCS
	TRO MCHG
	HRRZ D,(D)
	HLRZ TT,(D)
	HRRZ TT,1(TT)		;GET DEFAULT PIN NAME
	HLRZ B,(B)
	JRST STPIN1
STPIN2:	HLRZ B,(B)
	HRRZ C,1(B)
	HRRZ D,(C)
	HLRZ D,(D)
	HRRZ D,1(D)
	CAMN D,TT		;SAME PIN NAME?
	HRRM T,1(C)		;YES, STORE PIN #
STPIN1:	HRRZ B,(B)
	JUMPN B,STPIN2
	POPJ P,
>;MD

STOCLC:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ D,(A)
	HRRZ B,1(D)
	HLL B,1(B)
	PUSHJ P,SETTT			;SETUP MACRO TEXT POINTER
	PUSHJ P,STFPLC			;STUFF IN CON OR PIN SPEC
	JFCL
	JRST ITSTUF			;IF NOT CPIN, STUFF A NULL MACRO

STFPLC:	TLNE B,CPIN
	JRST STFCLC
	TLNN B,ISPIN
	POPJ P,
	HLRZ D,(D)
	HLRZ D,(D)
	HLRZ D,1(D)
	AOS (P)
	PUSH P,A
MD,<	HRRZ D,(D)
	JUMPE D,NSTFBL
	HLRZ D,(D)
>;MD
MPC,<	HRRZ T,(D)
	JUMPE T,NSTFBL
>;MPC
	MOVS A,(D)
	PUSHJ P,SLTLPN		;STUFF BODY LOCATION
NSTFBL:
MD,<	HRRZ A,1(B)
	JUMPN A,STFPL1
>;MD
	HRRZ A,(B)
	HLRZ A,(A)
MD,<	HRRZ A,1(A)
STFPL1:
>;MD
	PUSHJ P,BPINPN
	POP P,A
	POPJ P,

STFCLC:	AOS (P)
	PUSH P,A		;I AM NOT SURE IF THIS PUSH IS NEEDED!
	HRRZ A,(B)
	MOVS A,(A)
	PUSHJ P,CSLTLT		;PRINT THE BAY/RACK/SLOT/LOC/PIN
	POP P,A
	POPJ P,

BJUMP:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ B,(A)
	HRRZ C,1(B)
	MOVE C,1(C)
	TLNN C,ISPIN
	JRST PERRET
	HLRZ A,(B)
	MOVEI T,BODM
	PUSHJ P,CHNGMD		;CHANGE TO BODY MODE
	MOVE T,1(A)		;GET LOC OF BODY
	JRST CHKON
;MUNGING SUBROUTINES (PC)
MPC,<
MUSH:	SKIPE A,DBODPN	;BODY POINTER
	PUSHJ P,MUSHB
	SKIPE A,PONPNT
	PUSHJ P,MUSHP
	TRO MCHG!NEEDCL
	TRNE BTHSDS	;IF ON BOTH SIDES, MUNG BOTH SIDES
	SKIPN A,PONPN2
	POPJ P,

MUSHP1:	HLRZ T,(A)
	HRRZ T,1(T)
	MOVE T,1(T)
	TLNE T,ISPIN!CPIN
	POPJ P,
	MOVE TTT,1(A)
	PUSHJ P,MUSHIT
	MOVEM T,1(A)
	POPJ P,

MUSHP:	PUSHJ P,MUSHP1
	HRRZ A,(A)
	JUMPN A,MUSHP
	POPJ P,

MUSHB1:	HLRZ B,(A)
	HLRZ F,(B)	;GET ORIENTATION
	HRRZ B,(B)
	JUMPE B,CPOPJ	;NO PINS, NO MUSH
	MOVE TTT,1(B)
	PUSHJ P,MUSHIT	;MUSH THE PIN
	MOVE TTT,T	;SAVE NEW X,Y OF PIN
	HLRZ B,(B)
	HRRZ B,1(B)
	HRRZ B,(B)
	MOVE T,1(B)	;X,Y FROM PIN TYPE BLOCK
	ADDI F,2	;ROTATE BACK TO BODY CENTER
	ANDI F,3	;MAKE SURE WE DON'T OVERFLOW
	PUSHJ P,ORIENT
	ADJUST(ADD,T,TTT)
	MOVEM T,1(A)	;STORE AS NEW BODY X,Y
	PUSH P,A
	PUSHJ P,BODFIX
	POP P,A
	POPJ P,

MUSHB:	PUSHJ P,MUSHB1
	HRRZ A,(A)
	JUMPN A,MUSHB
	POPJ P,

MUSHIT:	HRRE T,TTT
	ASH T,-1
	IDIV T,STPSIZ
	IMUL T,STPSIZ
	ASH T,1
	HLRE TT,TTT
	ASH TT,-1
	IDIV TT,STPSIZ
	IMUL TT,STPSIZ
	ASH TT,1
	HRL T,TT
	POPJ P,

STMUSH:	PUSHJ P,GETCLS
	JRST PERRET
	TRO MCHG!NEEDCL
	MOVE G,A
	HLRZ G,(G)
STMSH1:	HRRZ A,1(G)
	JUMPE A,.+2
	PUSHJ P,MUSHP1
	HLRZ A,1(G)
	JUMPE A,.+2
	PUSHJ P,MUSHB1
	HRRZ G,(G)
	JUMPN G,STMSH1
	POPJ P,
>;MPC
;LINE EDIT TEXT, CLRTHK, SETTHK
STANFO,<
LODED:	JUMPE T,CPOPJ	;DONE WHEN WE GET A ZERO
	SETZ B,
	HLRZ C,(T)	;SIZE
	JUMPE C,LODED2
	CAIN C,1	;SIZE 1?
	JRST LODED2	;YES, NO SPECIAL EFFECT
	PTWR1S	[	0
			"\"]
	JFCL
	TRZE C,400000
	PTWR1S	[	0
			"V"]
	JFCL
	ADDI C,60	;MAKE IT ASCIZ
	PTWR1S	B
	JFCL
LODED2:	ADD T,[POINT 7,1]
LODED1:	ILDB C,T
	PTWR1S B
	JFCL		;IGNORE IF NOT SENT
	TLNE T,760000
	JRST LODED1
	HRR T,-1(T)
	TRNE T,-1
	JRST LODED1
	POPJ P,

LODPNT:	HLRZ T,(A)		;TO DATA BLOCK
	HRRZ T,1(T)		;TO TEXT BLOCK
	HLRZ T,(T)		;TO TEXT
	JUMPE T,CPOPJ		;DON'T LOAD NO TEXT!
	HRRZ T,(T)
	JRST LODED		;LOAD IT

PNTQ:	PUSHJ P,GETCLS		;CURRENT POINT
	JRST PERRET		;NONE
	PUSHJ P,LODPNT		;LOAD IT UP
ZORQ:	PUSHJ P,TXREAD		;READ IT BACK
	CAIN C,ALTMOD		;END WITH ALTMOD?
	JRST PUTFS		;JUST PUT BACK THIS STRING, NO CHANGE
	SKIPG T
	MOVEI T,STDBIG
	HRLM T,(B)
	SKIPN 1(B)
	JRST [	PUSHJ P,PUTFS	;NULL STRING, GIVE IT BACK
		JRST PTKIL1]	;AND KILL ANY EXISTING TEXT
	PUSH P,B		;SAVE STRING POINTER
	HLRZ C,(A)
	HRRZ C,1(C)
	HLRZ D,(C)
	JUMPN D,[HRRZ B,(D)
		PUSHJ P,PUTFS
		JRST GTTBLK]
	GETFS(D)
	SETZM 1(D)		;0 INITIAL OFFSET
	HRLM D,(C)		;LINK IT IN
GTTBLK:	POP P,(D)		;STORE NEW STRING POINTER
	TRO MCHG!NEEDCL
MD,<	JRST FIXEM	>	;FIX OFFSETS IF BITS ON
MPC,<	POPJ P,		>

PNTZ:	PUSHJ P,GETCLS		;CURRENT POINT
	JRST PERRET		;NONO
	PUSHJ P,LODPNT		;LOAD IT UP
	PTWRS9	[	0
			[BYTE(9)271,271,271,377,0]]	;CTRL1 999 BACKSPACE
	JRST ZORQ		;AND READ IT BACK

SETTHK:	SETOM XTHICK
	POPJ P,

CLRTHK:	SETZM XTHICK
	POPJ P,
>;STANFO
;POINT TEXT, POINT TEXT TO MACRO, TEXT AND CONNECTOR OFFSETS (D)
PNTTXT:	PUSHJ P,GETCLS	;GET POINTER TO CLOSEST POINT
	JRST PERRET	;NONE
PNTTX3:	TRNE INLIN	;DRAWING LINE?
	PUSHJ P,[PUSHJ P,PLPNT	;MAKE CORNER
		MOVE T,LINING
		PUSHJ P,PNALT	;STOP LINE
		PUSHJ P,SCLOSP	;AND SET CLOSEST POINT TO LINING
		MOVE A,CLOSES
		POPJ P,]
	TLNN M,DSKACT!MACACT
	OUTSTR	[ASCIZ /TEXT?
/]
	PUSHJ P,TXREAD	;READ IN THE TEXT
	CAIN C,ALTMOD
	JRST PUTFS	;JUST GIVE BACK FREE STORAGE AND LEAVE
	HLRZ C,(A)	;GET DATA BLOCK POINTER
	HRRZ C,1(C)
	HLRZ D,(C)	;GET OLD TEXT POINTER
	SKIPN 1(B)	;NULL TEXT?
	JRST [	PUSHJ P,PUTFS	;GIVE BACK NULL STRING
		JRST PTKIL1]	;JUST KILL ORIGINAL TEXT(IF ANY)
	TRO MCHG!NEEDCL	;THIS CHANGES SCREEN
	JUMPE D,PNTTX1	;CAN'T COPY IF NO OLD
	JUMPGE T,PNTTX1	;DON'T COPY IF EXPLICIT SIZE TYPED
	HRRZ T,(D)
	HLRZ T,(T)	;GET OLD SIZE
PNTTX1:	SKIPG T		;MAKE SURE WE HAVE POSITIVE SIZE
	MOVEI T,STDBIG
	HRLM T,(B)	;STORE SIZE
	GETFS (T)
	HRRZM B,(T)
	SETZM 1(T)	;0 INITIAL OFFSET
	HRLM T,(C)	;DEPOSIT TEXT POINTER
MD,<
DEC,<	PUSH P,D	;FIND DEFAULT POLARITY IF NEEDED
	PUSH P,A
	MOVE A,B
	ADD A,[POINT 7,1]
	PUSHJ P,PERMUT	;PERMUT SIGNAL TO GET H OR L OR !
	SKIPGE POLAR	;GOT H OR L?
	JRST PNTTX4	;YES, DONE
	SKIPG POLAR	;IS IT !
	JRST NOEXCL	;NO
	MOVE A,(P)
	HLRZ A,(A)
	HRRZ A,1(A)
	HLRZ A,(A)
	HRRZ A,(A)
	ADD A,[POINT 7,1]
PNTEX1:	MOVE B,A	;REMEMBER 1 BEFORE START OF WHAT WE WANT
	PUSHJ P,GETITZ
	JRST PNTTX4	;OH WELL, I THOUGHT IT WAS THERE
	CAIE T," "
	JRST PNTEX1
PNTEX3:	PUSHJ P,GETITZ
	JRST PNTTX4
	CAIN T," "
	JRST PNTEX3
	CAIE T,"!"
	JRST PNTEX1	;GO BACK AND TRY AGAIN
	PUSHJ P,GETITZ
	SETZ T,
	JUMPN T,PNTEX1	;SHOULD BE AT END NOW
	CAIA
PNTEX4:	IDPB T,B
	TLNE B,760000
	JRST PNTEX4
	HRRZ TTT,-1(B)
	HLLZS -1(B)
	SKIPE B,TTT
	PUSHJ P,PUTFS	;RETURN REST OF STRING
	JRST PNTTX4

GETITZ:	TLNN A,760000
	JRST [	HRR A,-1(A)
		TRNN A,-1
		POPJ P,
		JRST .+1]
	ILDB T,A
	JUMPE T,GETITZ
	CAIE T,";"			;THIS IS THE COMMENT CHAR
	AOS (P)
	POPJ P,

NOEXCL:	MOVSI C,1	;CLEAR MARKING BITS FOR DEFPOL
	SKIPE A,PONPNT
	PUSHJ P,CLRBTS
	SETZM WDOLST	;CLEAR DO LIST
	MOVE T,(P)
	MOVE H,[1,,DEFPOL]
	PUSHJ P,RECUR0	;INSERT THIS PIN IN LIST
	PUSHJ P,RECCHK	;NOW CHECK IT AND ITS CONNECTIONS FOR DEFAULT POLARITY
	JRST PNTTX4	;NONE FOUND
	MOVE B,(P)	;PTR TO POINT
	HLRZ B,(B)
	HRRZ B,1(B)
	HLRZ B,(B)
PNTTX5:	HRRZ B,(B)	;TEXT PTR
	JUMPE B,PNTTX6	;FOUND LAST BLOCK?
	MOVE C,B
	JRST PNTTX5

PNTTX7:	TLNE C,760000	;AT END OF WORD?
	JRST PNTTX8	;NO
	GETFS(D)	;YES, TACK ON A NEW BLOCK
	SETZM (D)
	SETZM 1(D)
	HRRM D,-1(C)	;LINK
	HRR C,D
PNTTX8:	ILDB D,C	;FIND FIRST NULL
	JUMPN D,PNTTX7
	POPJ P,

PNTTX6:	ADD C,[POINT 7,1]
	PUSHJ P,PNTTX7	;FIND WHERE TO PUT IN POLARITY
	MOVEI D," "
	DPB D,C		;PUT IN SEPERATOR
	PUSHJ P,PNTTX7
	MOVEI D,"H"		;ASSUME H
	TRNN A,ASSH		;H OR L?
	MOVEI D,"L"		;L
	DPB D,C
PNTTX4:	POP P,A
	POP P,D
>;DEC
>;MD
;MAYBE CHECK FOR NULL TEXT AND TEXT WITH TABS HERE
	JUMPE D,CPOPJ
	MOVE B,D	;PUT THE OLD TEXT BACK...
	JRST PUTFS	;... ON FREE STORAGE

STOTXT:	PUSHJ P,GETCLS
	JRST PERRET
	HLRZ T,(A)
	HRRZ T,1(T)
	HLRZ T,(T)
	SKIPE T
	HRRZ T,(T)
STOTXB:	PUSHJ P,SETTT
	JUMPE T,ITSTUF
	HLRZ B,(T)	;GET SIZE
	CAIN B,STDBIG	;OR STANDARD
	JRST STOTX0	;WE DON'T NEED ANYTHING IN FRONT
	PUTBYT "\"
	TRZE B,400000	;IS IT VERTICAL
	PUTBYT "V"
	PUSHJ P,PUTTTN	;AND THE SIZE
STOTX0:	ADD T,[POINT 7,1]
STOTX1:	PUSHJ P,GETTT
	JRST ITSTUF
	PUTBYT (C)
	JRST STOTX1

MD,<
;<META>T
PNTTX2:	PUSHJ P,GETCLS
	JRST PERRET
	PUSHJ P,PNTTX3
	JRST PTTOFF	;NOW GO FIX IT

;Z
PUTOFF:	PUSHJ P,GETCLS
	JRST PERRET
PTTOFF:	PUSHJ P,SETFXT
	JRST FIXEM

;Q
CONOFF:	PUSHJ P,GETCLS
	JRST PERRET
CNCOFF:	PUSHJ P,SETFXC
	JRST OFFCON	;THIS CAN'T AFFECT TEXT

SETFXT:	HLRZ T,(A)
	HRRZ T,1(T)
	HLRZ TT,(T)
	JUMPE TT,CPOPJ	;CAN'T SET IF NO TEXT
	MOVE TT,1(T)
	TLO TT,FIXTXT
	SKIPE MOVFLG
	TLOA TT,FIXRHT
	TLZ TT,FIXRHT
	MOVEM TT,1(T)
	POPJ P,

SETFXC:	HLRZ T,(A)
	HRRZ T,1(T)
	MOVE TT,1(T)
	TLNN TT,CPIN
	POPJ P,
	TLO TT,FIXCON
	MOVEM TT,1(T)
	POPJ P,

;<META>Z
UNOFFT:	PUSHJ P,GETCLS
	JRST PERRET
CLRFXT:	HLRZ T,(A)
	HRRZ T,1(T)
	MOVSI TT,FIXTXT!FIXRHT
	ANDCAM TT,1(T)
	POPJ P,

;<META>Q
UNOFFC:	PUSHJ P,GETCLS
	JRST PERRET
CLRFXC:	HLRZ T,(A)
	HRRZ T,1(T)
	MOVSI TT,FIXCON
	ANDCAM TT,1(T)
	POPJ P,
;OFFALL, OFFTXT, OFFCON (D)
OFFRHT:	SETOM MOVFLG
	POPJ P,

NOFRHT:	SETZM MOVFLG
	POPJ P,

OFFALL:	SKIPN A,PONPNT
	POPJ P,
OFFAL1:	PUSHJ P,SETFXT
	PUSHJ P,SETFXC
	PUSHJ P,FIXEM
	HRRZ A,(A)
	JUMPN A,OFFAL1
	POPJ P,

;ROUTINE TO RE-FIX ALL <C><M>Z POINTS
FIXEM0:	SKIPN A,PONPNT
	POPJ P,
FIXEM1:	PUSHJ P,FIXEM
	HRRZ A,(A)
	JUMPN A,FIXEM1
	POPJ P,

OFFTXT:	HLRZ C,(A)
	HRRZ D,1(C)
	HLRZ B,(D)
	JUMPE B,CPOPJ		;NO TEXT
	HLL D,1(D)		;GET BITS FOR LATER
	HLRZ T,1(C)
	TLNE D,FIXTXT		;FIXING TEXT AT ALL?
	PUSHJ P,LINSET
	POPJ P,			;TOO COMPLEX, DON'T CHANGE IT
	PUSHJ P,OFFCAL
	SKIPE ULNFLG		;POSITION SO IT GETS UNDERLINED?
	TLNE D,ISPIN		;NOT PINS WE DON'T
	JRST NOULN
	ADDI C,HMOVU-HMOVE
NOULN:	TLNE D,ISPIN		;IS THIS A PIN?
	ADDI C,HMOVP-HMOVE
	CAIG C,1		;L OR R?
	MOVE TT,TTT		;MAKE IT LOOK LIKE ONE LINE
STAN,<
	CAIE TTT,1
	JRST NOULN1
	SKIPE XTHICK
	IMULI T,CWIDTH+1
	SKIPN XTHICK
NOULN1:
>;STAN
	IMULI T,CWIDTH
	IMULI TT,CHGHT
	XCT HMOVE(C)
	XCT MOVEV(C)
	HRLM TTT,(P)		;SAVE CHAR SCALE
	IMULI TTT,CHGHT		;MAKE A LF
	SUB TT,TTT		;NORMALIZE VERTICAL
	HLRZ TTT,(P)		;GET BACK CHAR SCALE
STAN,<
	CAIE TTT,1
	JRST NOULN2
	SKIPE XTHICK
	IMULI TTT,CWIDTH+1
	SKIPN XTHICK
NOULN2:
>;STAN
	IMULI TTT,CWIDTH	;WIDTH OF CHAR
	ASH TTT,-1		;NOW 1/2
	XCT HFUDGE(C)		;POSSIBLY FUDGE X PART
	HRL TT,T
	SKIPN ISVERT		;VERTICAL TEXT?
	JRST NOFVRT
	MOVS TT,TT		;YES, MAP TO -Y,X
	TLC TT,-1
	ADD TT,[1,,0]
NOFVRT:	CAMN TT,1(B)
	POPJ P,
	EXCH TT,1(B)
	TRO MCHG
	SKIPE ISVERT
	POPJ P,			;QUIT NOW IF VERT
	TLNE D,FIXRHT		;DOES HE WANT FIX RIGHT?
	CAIE C,1		;WON'T BE 1 IF WAS PIN!!
	POPJ P,			;ALL DONE
	SUB TT,1(B)
	HLRE T,TT
	UNSCAL T
	HRLZ T,T
	ADD T,1(A)
	HLRZ TT,(A)
	HLRZ TT,1(TT)
	HRRZ TT,1(TT)
	MOVE TT,1(TT)			;X,Y OF OTHER END!
	SUB TT,[4,,0]
	CAML T,TT
	MOVE T,TT
	MOVEM T,1(A)
	TRO NEEDCL			;MAYBE CHANGED CLOSEST
	POPJ P,


FIXEM:	PUSHJ P,OFFTXT
OFFCON:	HLRZ C,(A)
	HRRZ D,1(C)
	HLL D,1(D)
	TLNE D,FIXCON			;FIXING CON?
	TLNN D,CPIN			;CON?
	POPJ P,				;NO, QUIT NOW
	HLRZ B,(D)			;SETUP TEXT POINTER FOR LINSET
	HLRZ T,1(C)
	PUSHJ P,LINSET
	POPJ P,				;TOO COMPLEX, LEAVE IT ALONE
	HLRZ T,(D)			;GET TEXT POINTER
	PUSH P,T			;SAVE IT
	HRRZ B,(D)
	XCT CONTAB(C)
	EXCH B,(P)			;SAVE CON POINTER GET TEXT POINTER
	JUMPE B,GOTCOF			;ANY TEXT?
	PUSH P,T			;SAVE CON OFFSET
	PUSHJ P,OFFCAL			;CALC TEXT DELTAS
STAN,<
	CAIE TTT,1
	JRST OFFCN1
	SKIPE XTHICK
	IMUL T,[-CWIDTH-1]
	SKIPN XTHICK
OFFCN1:
>;STAN
	IMUL T,[-CWIDTH]
	IMULI TT,CHGHT
	IMULI TTT,CHGHT
	XCT CTOTAB(C)
	MOVE TT,1(B)
	SKIPN ISVERT
	JRST GOTTXO
	TLC TT,-1
	ADD TT,[1,,0]
	MOVS TT,TT
GOTTXO:	ADD TTT,TT
	ADD TTT,(P)
	HLRE TT,TT
	ADD T,TT
	HLRE TT,(P)
	ADD T,TT
	HRLZ T,T
	HRR T,TTT
	POP P,(P)
	SKIPN ISVERT			;VETICAL TEXT?
	JRST GOTCOF			;NO
	MOVS T,T			;YES, MAP TO -Y,X
	TLC T,-1
	ADD T,[1,,0]
GOTCOF:	POP P,B
	CAMN T,1(B)
	POPJ P,
	MOVEM T,1(B)			;SET OFFSET
	TRO MCHG
	POPJ P,

;THESE 3 TABLES MUST MATCH THE ONES FOR PINS
HMOVE:	SETZ T, 
	JFCL			;1
	ASH T,-1		;1/2
	ASH T,-1		;1/2
	ASH T,-1		;1/2

MOVEV:	ASH TT,-1		;UP 1/2
	ASH TT,-1		;UP 1/2
	JFCL			;UP 1
	SETZ TT,		;NO CHANGE
	ASH TT,-1		;UP 1/2

HFUDGE:	ADD T,TTT		;RIGHT ANOTHER HALF CHAR
	SUB T,TTT		;LEFT ANOTHER HALF CHAR
	JFCL
	JFCL
	JFCL

;THESE 3 TABLES MUST MATCH THE ONES FOR POINTS
HMOVU:	JFCL			;1
	SETZ T,
	ASH T,-1		;1/2
	ASH T,-1		;1/2
	ASH T,-1		;1/2

VMOVU:	JFCL
	JFCL
	JFCL			;UP 1
	SETZ TT,		;NO CHANGE
	ASH TT,-1		;UP 1/2

HFUDGU:	JFCL
	JFCL
	JFCL
	JFCL
	JFCL

;THESE 3 TABLE MUST MATCH THE ONE FOR POINTS
HMOVP:	JFCL			;LEFT 1
	SETZ T,
	SETZ T,
	SETZ T,			;1/2
	ASH T,-1

VMOVP:	JFCL			;UP 1
	JFCL			;UP 1
	SETZ TT,
	JFCL			;UP 1
	ASH TT,-1

HFUDGP:	SUB T,TTT		;LEFT ANOTHER HALF CHAR
	ADD T,TTT		;RIGHT ANOTHER HALF CHAR
	JFCL
	JFCL
	JFCL

CONTAB:	PUSHJ P,CONL
	PUSHJ P,CONR
	PUSHJ P,COND
	PUSHJ P,CONU
	PUSHJ P,COND

;Y/2,,-Y/2
CONL:	MOVE T,CMUL+STDBIG
	IMULI T,CHGHT
	ASH T,-1
	MOVN TTT,T
	HRLZ T,T
	HRR T,TTT
	POPJ P,

;-X-Y/2,,-Y/2
CONR:	PUSHJ P,CONCAL
	IMUL T,CMUL+STDBIG
STAN,<
IFE STDBIG-1,<		;AED	I BELEAVE THIS SHOULD HAVE THE ANGLE BRACKET AS SEEN HERE.
	SKIPE XTHICK
	IMULI T,CWIDTH+1
	SKIPN XTHICK
>
>;STAN
	IMULI T,CWIDTH
	MOVN T,T
	MOVN TT,CMUL+STDBIG
	IMULI TT,CHGHT
	ASH TT,-1
	ADD T,TT
	HRLZ T,T
	HRR T,TT
	POPJ P,

;-X/2,,0
COND:	PUSHJ P,CONCAL
	IMUL T,CMUL+STDBIG
STAN,<
IFE STDBIG-1,<
	SKIPE XTHICK
	IMULI T,CWIDTH+1
	SKIPN XTHICK
>
>;STAN
	IMULI T,CWIDTH
	ASH T,-1
	MOVN T,T
	HRLZ T,T
	POPJ P,

;-X/2,,-Y
CONU:	PUSHJ P,CONCAL
	IMUL T,CMUL+STDBIG
STAN,<
IFE STDBIG-1,<
	SKIPE XTHICK
	IMULI T,CWIDTH+1
	SKIPN XTHICK
>
>;STAN
	IMULI T,CWIDTH
	ASH T,-1
	MOVN T,T
	HRLZ T,T
	MOVN TT,CMUL+STDBIG
	IMULI TT,CHGHT
	HRR T,TT
	POPJ P,

CTOTAB:	PUSHJ P,CTOL
	PUSHJ P,CTOR
	ASH T,-1		;X/2,,1
	PUSHJ P,CTOU
	ASH T,-1		;X/2,,1

;X+1/2,,1/2
CTOL:	MOVE TT,CMUL+STDBIG
STAN,<
IFE STDBIG-1,<
	SKIPE XTHICK
	IMULI TT,CWIDTH+1
	SKIPN XTHICK
>
>;STAN
	IMULI TT,CWIDTH
	ASH TT,-1
	ADD T,TT
	ASH TTT,-1
	POPJ P,

;-1/2,,1/2
CTOR:	ASH TTT,-1
	MOVN T,CMUL+STDBIG
STAN,<
IFE STDBIG-1,<
	SKIPE XTHICK
	IMULI T,CWIDTH+1
	SKIPN XTHICK
>
>;STAN
	IMULI T,CWIDTH
	POPJ P,

;X/2,,-Y
CTOU:	ASH T,-1
	SUB TTT,TT
	POPJ P,
;CALC HEIGHT AND LENGTH OF TEXT IN OFFSET UNITS (D)
OFFCAL:	HRRZ TT,(B)
	ADD TT,[POINT 7,1]
	PUSH P,[0]
	PUSH P,[1]		;AT LEAST ONE LINE
	SETZ T,
OFFCL1:	TLNN TT,760000
	JRST [	HRR TT,-1(TT)
		TRNN TT,-1
		JRST OFFCL2
		JRST .+1]
	ILDB TTT,TT
	JUMPE TTT,OFFCL1
	CAIN TTT,DBLARR		;LINE BREAK?
	JRST [	CAMGE T,-1(P)
		MOVEM T,-1(P)
		SETZ T,
		AOS (P)
		JRST OFFCL1]
	SOJA T,OFFCL1		;COUNT CHARS IN CURRENT LINE

OFFCL2:	CAMGE T,-1(P)
	MOVEM T,-1(P)
	HRRZ TTT,(B)
	HLRZ TTT,(TTT)		;CHAR SIZE
	TRZ TTT,400000		;CLEAR VERT BIT
	MOVE TTT,CMUL(TTT)	;MAKE IT SIZE ONE MULTIPLIER
	POP P,TT
	POP P,T
	IMUL TT,TTT
	IMUL T,TTT
	POPJ P,

CONCAL:	SETZM CHRCNT
	PUSH P,TT
	PUSH P,A
	PUSH P,PUTCHR
	MOVE A,[AOS CHRCNT]
	MOVEM A,PUTCHR
	MOVS A,(B)
	PUSHJ P,CSLTLP
	POP P,PUTCHR
	POP P,A
	POP P,TT
	MOVE T,CHRCNT
	POPJ P,

LINSET:	SETZ C,
	SKIPN TT,1(T)
	JRST NOLROF
	TLNE TT,-1
	TRO C,1
	TRNE TT,-1
	TRO C,2
NOLROF:	SKIPN TT,(T)
	JRST NOUDOF
	TLNE TT,-1
	TRO C,4
	TRNE TT,-1
	TRO C,10
NOUDOF:	XCT SETCTB(C)
	SETZM ISVERT		;ASSUME NO VERT TEXT
	JUMPE B,CPOPJ1		;LEAVE NOW IF NO TEXT
	HRRZ TT,(B)
	SKIPL (TT)		;VERT TEXT?
	JRST CPOPJ1		;NO
	SETOM ISVERT		;IT IS VERTICAL
	CAIN C,4		;NO CHANGE IF NO LINES
	JRST CPOPJ1
	TRCN C,2		;MAP 90 DEGREES CW
	TRC C,1
	JRST CPOPJ1

SETCTB:	MOVEI C,4
	MOVEI C,0
	MOVEI C,1
	POPJ P,
	MOVEI C,2
	POPJ P,
	POPJ P,
	POPJ P,
	MOVEI C,3
	POPJ P,
	POPJ P,
	POPJ P,
	POPJ P,
	POPJ P,
	POPJ P,
	POPJ P,
>;MD
;KILL TEXT (D,PC)
PTKILL:	PUSHJ P,GETCLS	;GET POINTER TO CLOSEST POINT
	JRST PERRET	;NONE
PTKIL1:	TRNE TMOVE	;MOVING TEXT OFFSET?
	PUSHJ P,CLRMOV	;YES, CLEAR MOVING
	MOVE B,A
KILTXT:	PUSH P,B
	HLRZ T,(B)	;GET DATA BLOCK POINTER
	HRRZ T,1(T)
	HLRZ B,(T)	;GET TEXT POINTER
	JUMPE B,NKLTXT	;LEAVE IF NONE
	HRRZS (T)
	MOVSI TT,MD,<FIXTXT!FIXRHT!>FOUNDP
	ANDCAM TT,1(T)	;CLEAR FIX BITS
	TRO MCHG!NEEDCL	;CHANGES SCREEN AND BLINKING LETTER
	PUSHJ P,PUTFS
MD,<	PUSH P,A
	PUSH P,C
	PUSH P,D
	MOVE A,-3(P)
	PUSHJ P,OFFCON	;MAYBE FIX CON
	POP P,D
	POP P,C
	POP P,A
>;MD
NKLTXT:	POP P,B
	POPJ P,
;DELETE LINE (D)
MD,<
LINDEL:	PUSHJ P,GETCLS		;CLOSEST LINE?
	JRST PERRET
	TRO MCHG!NEEDCL
	HLRZ D,(A)		;GET POINTER TO ^_ FOR ONE ENDPOINT
	HLRZ D,1(D)		;	"
	HLRZ B,A		;SECOND POINT
	HLRZ C,(B)		;^_
	HLRZ C,1(C)		;  "
	HRRZ B,(C)		;
	CAIN B,(A)		;THIS ONE?
	JRST [	HLLZS (C)	;CLEAR POINTER
		HRRZS (D)	;	"
		POPJ P,]
	HLRZ B,(C)		;^
	CAIN B,(A)		;THIS ONE?
	JRST [	HRRZS (C)	;CLEAR POINTER
		HLLZS (D)	;	"
		POPJ P,]
	HRRZ B,1(C)		;
	CAIN B,(A)		;THIS ONE?
	JRST [	HLLZS 1(C)	;CLEAR POINTER
		HRRZS 1(D)	;	"
		POPJ P,]
	HLRZ B,1(C)		;_
	CAIE B,(A)		;THIS ONE?
	POPJ P,
	HRRZS 1(C)		;CLEAR POINTER
	HLLZS 1(D)		;	"
	POPJ P,
;LINES, SET MIDPOINT, MAKE JOG, ATTACH POINT (D)
DEFINE BENDIT # (CBIT)
<
BENDL#CBIT:
	PUSHJ P,GETCLS
	JRST PERRET		;NO CLOSEST LINE.
	MOVE T,CURSE		;USE CURSOR POS FOR MIDPOINT CALC
;ENTRY POINT FOR <META>A IN LINE MODE
LATTP#CBIT:
	MOVEM T,DX3		;SAVE POS TO USE
	TRO MCHG
	HLRZ C,A
	HLRZ B,(A)
	HLRZ B,1(B)
	HLRZ D,(C)
	HLRZ D,1(D)
	HRRZ E,(B)
	CAIN E,(C)
	JRST BENDY#CBIT
	HRRZ E,1(B)
	CAIN E,(C)
	JRST BENDX#CBIT
	EXCH A,C
	EXCH B,D
	HRRZ E,(B)
	CAIN E,(C)
	JRST BENDY#CBIT
	HRRZ E,1(B)
	CAIN E,(C)
	JRST BENDX#CBIT
	POPJ P,

DEFINE GARPLY $ (H1,XY,YX)
<	PUSH P,A
	PUSH P,B
	PUSH P,C
	PUSH P,D
	MOVE T,1(A)
	H$H1$H1 T,DX3
	PUSHJ P,PNTPUT
IFE CBIT-2,<MOVEM D,SAVP>		;REMEMBER POINT FOR HIGHER UPS!
	PUSH P,D
	MOVE T,1(D)
	HLRZ D,(D)
	HLRZ D,1(D)
	PUSH P,D
IFE CBIT-1,<
	PUSHJ P,PNTPUT
	MOVE T,D
	HLRZ TT,(T)
	HLRZ TT,1(TT)
>
	POP P,F
	POP P,E
IFN CBIT-1,<
	MOVE T,E
	MOVE TT,F
>
	POP P,D
	POP P,C
	POP P,B
	POP P,A
	HRRM T,XY(B)
	HRLM A,XY(TT)
IFE CBIT-1,<
	HRRM E,YX(TT)
>
	HRRM C,XY(F)
IFE CBIT-1,<
	HRLM T,YX(F)
>

	HRLM E,XY(D)
	POPJ P,
>

BENDX#CBIT:
	GARPLY(L,1,0)
BENDY#CBIT:
	GARPLY(R,0,1)
>

BENDIT(1)	;MAKE DOUBLE MIDPOINT
BENDIT(2)	;MAKE SINGLE MIDPOINT
;ATTACH POINT TO LINE (D)
LATT:	MOVE A,CLOSES	;IF MOVING
	TRZE INMOV	;STOP MOVING
	JRST INATT	;BUT USE THE ONE WE WERE MOVING
	SETZ A,		;FOR INLIN
	TRNE INLIN
	JRST INATT
	PUSHJ P,GETCLS
	JRST PERRET
INATT:	MOVEM A,SAVP
	MOVEI T,LINM
	PUSHJ P,TCHNGM
	PUSHJ P,GETCLS		;FIND CLOSEST LINE
	JRST [	PUSHJ P,RCHNGM
		SKIPN SAVP
		TRO INLIN!NEEDCL
		JRST PERRET]
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/THIS ONE/]
	MOVEI T,UPSTAR
	MOVEM T,SPDISP
	MOVE T,[ASCID/AL/]
	MOVEM T,SPMODT
	MOVEI T,SPM		;SPECIAL POINTER MODE
	PUSHJ P,TCHNGM
	MOVE T,IPOINT		;GET INTERSECTION POINT
	MOVEM T,STARLOC		;THIS IS LOC OF STAR
	PUSHJ P,YORN
	JFCL
	JFCL
	PUSHJ P,RCHNGM		;GET BACK OLD MODE
	CAIE C,"Y"
	CAIN C,"y"
	CAIA
	JRST [	SKIPN SAVP	;WERE WE INLIN?
		TRO INLIN!NEEDCL;YES, STAY THERE
		POPJ P,]
	SKIPE T,SAVP		;IS THIS THE INLIN GUY
	JRST GOTINT		;ALREADY GOT INTERSECTION POINT
	MOVE T,IPOINT		;PUT POINT AT PERPENDICULAR INTERSECTION POINT
	PUSHJ P,LATTP2		;MAKE MIDPOINT
	TRO INLIN		;TELL HIM ITS OK
	MOVE A,SAVP		;SETUP A FOR LINE CALLS
	PUSHJ P,PNMNS1		;TRY -
	CAIA			;LOSE
	JRST ATTDON		;THEN IT WORKED
	TRC ZIGZAG		;ELSE TRY THE OTHER WAY
	MOVE A,SAVP
	PUSHJ P,PNMNS1
	CAIA			;LOSE
	JRST ATTDON		;YES
	MOVE A,SAVP
	PUSHJ P,PNOT1		;TRY A STRAIGHT (SLANTED) LINE!
	CAIA
	JRST ATTDON
	OUTSTR[ASCIZ/SORRY, YOU'LL HAVE TO HAVE ANOTHER
TICKET TO MAKE THIS CONNECTION.
/]
	TRO INLIN!NEEDCL
	POPJ P,

ATTDON:	TRO NEEDCL!MCHG
	TRZ INMOV!INLIN
	POPJ P,

GOTINT:	MOVEM T,LINING		;SAVE ORIGINAL POINT HERE
	MOVE T,1(T)		;USE THIS AS PLACE TO MAKE NEW POINT
	PUSHJ P,LATTP2		;MAKE A MIDPOINT
	MOVE A,SAVP
	MOVE T,LINING
	HLRZ T,(T)
	HRRZ T,1(T)
	MOVE T,1(T)		;GET POINT BITS
	TLNN T,ISPIN		;CAN'T REVERSE IF LINING IS ALREADY PIN
	EXCH A,LINING		;MOVE TO LINE!
	JRST LATTP		;ATTACH TO POINT WILL DO THE REST
;ATTACH POINT TO POINT (D)
PATT:	TRZE INMOV
	JRST [	MOVE A,CLOSES	;USE THE ONE WE WERE MOVING
		JRST PATT1]
	TRNN INLIN
	PUSHJ P,GETCLS
	JRST PERRET
PATT1:	MOVEM A,LINING
	TRO INLIN!NEEDCL
	PUSHJ P,GETCLS		;FIND CLOSEST(NOT INCLUDING CURRENT CLOSEST)
	JRST [	TRZ INLIN
		TRO NEEDCL
		JRST PERRET]	;NO, JUST ONE POINT ON SCREEN
	MOVE T,1(A)
	HLRZ TT,(A)
	HRRZ TT,1(TT)
	MOVE TT,1(TT)
	TLNE TT,ISPIN
	JRST [	EXCH A,LINING	;TRY IT THE OTHER WAY
		HLRZ TT,(A)
		HRRZ TT,1(TT)
		MOVE TT,1(TT)
		TLNN TT,ISPIN
		JRST .+1
		OUTSTR[ASCIZ/SORRY, BOTH ARE PINS!
/]
		TRZ INLIN
		TRO NEEDCL
		JRST PERRET]
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/THIS ONE/]
	TRZ INLIN
	MOVEM T,STARLOC
	MOVEI T,UPSTAR
	MOVEM T,SPDISP
	MOVE T,[ASCID/AP/]
	MOVEM T,SPMODT
	MOVEI T,SPM
	PUSHJ P,TCHNGM
	PUSHJ P,YORN
	JFCL
	JFCL
	TRO NEEDCL
	PUSHJ P,RCHNGM
	CAIE C,"Y"
	CAIN C,"y"
	CAIA
	POPJ P,
	TRO MCHG
LATTP:	MOVEM A,DX1
	HLRZ A,(A)
	HLRZ A,1(A)
	MOVE B,LINING
	HLRZ B,(B)
	HLRZ B,1(B)
;LEFT
	HLRZ C,(B)
	CAMN C,DX1		;POINT TO POINT WE ARE ATTACHING?
	SETZ C,			;YES, COPY POINTER ANYWAY
	JUMPE C,[HLRZ C,(A)	;COPY POINTER
		HRRZS (A)	;AND CLEAR IT
		CAMN C,LINING
		SETZ C,		;DON'T POINT HIM TO HIMSELF
		JRST .+1]
	HRLM C,(B)
	JUMPN C,[HLRZ C,(C)
		HLRZ C,1(C)
		MOVE D,LINING
		HRRM D,(C)
		JRST .+1]
;RIGHT
	HRRZ C,(B)
	CAMN C,DX1
	SETZ C,
	JUMPE C,[HRRZ C,(A)
		HLLZS (A)
		CAMN C,LINING
		SETZ C,
		JRST .+1]
	HRRM C,(B)
	JUMPN C,[HLRZ C,(C)
		HLRZ C,1(C)
		MOVE D,LINING
		HRLM D,(C)
		JRST .+1]
;DOWN
	HLRZ C,1(B)
	CAMN C,DX1
	SETZ C,
	JUMPE C,[HLRZ C,1(A)
		HRRZS 1(A)
		CAMN C,LINING
		SETZ C,
		JRST .+1]
	HRLM C,1(B)
	JUMPN C,[HLRZ C,(C)
		HLRZ C,1(C)
		MOVE D,LINING
		HRRM D,1(C)
		JRST .+1]
;UP
	HRRZ C,1(B)
	CAMN C,DX1
	SETZ C,
	JUMPE C,[HRRZ C,1(A)
		HLLZS 1(A)
		CAMN C,LINING
		SETZ C,
		JRST .+1]
	HRRM C,1(B)
	JUMPN C,[HLRZ C,(C)
		HLRZ C,1(C)
		MOVE D,LINING
		HRLM D,1(C)
		JRST .+1]
;TEXT
	MOVE B,DX1
	MOVE A,LINING
	HLRZ A,(A)
	HRRZ A,1(A)
	MOVE T,(A)
	HLRZ TT,(B)
	HRRZ TT,1(TT)
	TLNE T,-1			;ANY TEXT ON NEW?
	JRST LGTXT1
	HLRZ TTT,(TT)
	HRLM TTT,(A)			;COPY TEXT TO NEW
	HRRZS (TT)			;CLEAR FROM OLD
	MOVSI TTT,FIXTXT!FIXRHT
	ANDCAM TTT,1(A)
	AND TTT,1(TT)
	IORM TTT,1(A)
LGTXT1:	TRNE T,-1			;ANY CON OR PIN ON NEW?
	JRST LGTXT2			;YES
	MOVSI TTT,CPIN
	TDNN TTT,1(TT)			;CPIN ON OLD?
	JRST LGTXT2			;NO
	ANDCAM TTT,1(TT)		;YES, TURN OFF
	IORM TTT,1(A)			;AND TURN ON IN NEW
	HRRZ TTT,(TT)			;GET POINTER
	HRRM TTT,(A)			;STORE IN NEW
	HLLZS (TT)			;CLEAR FROM OLD
	MOVSI TTT,FIXCON!CPNBTS
	ANDCAM TTT,1(A)
	AND TTT,1(TT)
	IORM TTT,1(A)
LGTXT2:	PUSHJ P,DELPNL
	MOVE A,LINING
	SETZM LINING
	TRO NEEDCL!MCHG
	TRZ INLIN!INMOV
	MOVE TT,1(A)
	PUSHJ P,PMOVX
	JRST PMOVY
;BREAK JUNCTION OF 3 OR 4 LINES (D)
BREAKH:	TRZA TFLG		;ZERO INDEX FOR HORZ
BREAKV:	TRO TFLG		;20 INDEX FOR VERT
	TRNN INLIN		;CAN'T BE INLIN
	PUSHJ P,GETCLS
	JRST PERRET
	MOVE B,A
	PUSHJ P,SETBTO
	HLRZ F,F		;GET BITS
	ANDI F,17		;JUST LINE BITS
	MOVE H,D		;SAVE NEIGHBOR POINTER
	MOVE T,1(B)		;SETUP FOR LIKELY CALL ON PNTPUT
	XCT PERMIT(F)		;CHECK OK AND WHERE TO GO
	TRZE INMOV
	TRO NEEDCL
	TRO MCHG
	PUSHJ P,PNTPUT
	XCT (F)[HRRZ T,1(H)	;PICKUP RIGHT
		HRRZ T,1(H)	;PICKUP RIGHT
		HRRZ T,(H)	;PICKUP UP
		HRRZ T,(H)]	;PICKUP UP
	XCT (F)[HLLZS 1(H)	;CLEAR IT
		HLLZS 1(H)
		HLLZS (H)
		HLLZS (H)]
	XCT (F)[HRRM T,1(E)	;MAKE IT RIGHT OF NEW POINT
		HRRM T,1(E)	;	"
		HRRM T,(E)	;    "	 LEFT	   "
		HRRM T,(E)]	;	"
	HLRZ T,(T)
	HLRZ T,1(T)
	XCT (F)[HRLM D,1(T)	;MAKE NEW POINT HIS LEFT
		HRLM D,1(T)	;	"
		HRLM D,(T)	;	"	    DOWN
		HRLM D,(T)]	;	"
	XCT (F)[HRRM D,(H)	;MAKE NEW UP OF OLD
		HRLM D,(H)	;    "   DOWN   "
		HRRM D,1(H)	;    "   RIGHT  "
		HRLM D,1(H)]	;    "   LEFT	"
	XCT (F)[HRLM B,(E)	;MAKE OLD DOWN OF NEW
		HRRM B,(E)	;    "	  UP	"
		HRLM B,1(E)	;    "	  LEFT	"
		HRRM B,1(E)]	;    "	  RIGHT	"
	POPJ P,

WAY4:	TRZE INMOV		;FLAGS
	TRO NEEDCL
	TRO MCHG
	PUSHJ P,PNTPUT		;MAKE ANOTHER POINT THERE
	HRRZ T,(H)		;GET OUR RIGHT
	HRRM T,(E)		;MAKE IT NEW POINT'S RIGHT
	HRRZ TT,1(H)		;SAME WITH U
	HRRM TT,1(E)
	HLRZ T,(T)
	HLRZ T,1(T)
	HRLM D,(T)		;MAKE RIGHT POINT TO NEW POINT
	HLRZ TT,(TT)
	HLRZ TT,1(TT)
	HRLM D,1(TT)		;MAKE UP POINT TO NEW POINT
	TRNN TFLG		;NOW, CONNECT VERT OR HORZ
	JRST HRZWAY		;HORZ
	HRLM B,(E)		;VERT, STORE ORIG POINT AS NEW ONE'S DOWN
	HRRM D,(H)		;AND HIM AS OUR UP
	HLLZS 1(H)		;AND CLEAR OTHER CRUFTY POINTER
	POPJ P,

HRZWAY:	HRLM B,1(E)		;ORIG AS LEFT
	HRRM D,1(H)		;NEW AS RIGHT
	HLLZS (H)		;CLEAR UP
	POPJ P,

PERMIT:	JRST WAY4		;_   ^	CAN'T CALL IT 4WAY
	MOVEI F,0		;_  		NO UP
	MOVEI F,1		;_    ^	NO DOWN
	MOVEI F,0		;_ 		DO LIKE NO UP
	MOVEI F,2		;_    ^	NO RIGHT
	JRST PERRET		;_   
	JRST PERRET		;_     ^
	JRST PERRET		;_
	MOVEI F,3		;    ^	NO LEFT
	JRST PERRET		;   
	JRST PERRET		;     ^
	JRST PERRET		;  
	MOVEI F,2		;     ^	DO LIKE NO RIGHT
	JRST PERRET		;    
	JRST PERRET		;      ^
	JRST PERRET

>;MD
;JUMP LINE TO OTHER SIDE OF CARD (PC)
MPC,<
LJUMP1:	TLZA WFLAG		;USE WIRE LIST FLAG HERE
LJUMP2:	TLO WFLAG		;AND HERE (WHOLE LINE)
	TRZE INLIN!INMOV
	TRO NEEDCL
	PUSHJ P,GETCLS
	JRST PERRET
	PUSH P,A
	HLRZ B,A
	HRRZS A
	TRZ TYPNEG
	PUSHJ P,LSWITCH		;SWITCH THIS LINE AND IN ONE DIRECTION
	POP P,A
	TRZ TFLG
	TRNE TYPNEG
	TRO TFLG		;USE FEED THROUGH IF THERE
	PUSHJ P,LSWA
	TRO MCHG!NEEDCL
	POPJ P,

LSWA:	TLNN WFLAG		;ARE WE DOING WHOLE LINE
	POPJ P,
	HLRZ C,(A)
	HRRZ T,1(C)
	MOVE T,1(T)
	TLNE T,ISPIN!CPIN
	POPJ P,			;IMPOSSIBLE
	TRNN TFLG
	TLNN T,FEEDTH
	CAIA
	POPJ P,
	HLRZ C,1(C)
	SETZ B,			;NOW COUNT SEGMENTS FROM THIS POINT
LSWA1:	MOVEI T,2
LSWA2:	XCT (T)[HLRZ TT,(C)
		HLRZ TT,1(C)
		HRRZ TT,1(C)]
	JUMPE TT,LSWA3
	JUMPN B,CPOPJ
	MOVE B,TT
LSWA3:	SOJGE T,LSWA2
	HRRZ C,(C)
	JUMPN C,LSWA1
	JUMPE B,CPOPJ		;NO MORE SEGMENTS?
LSWITCH:PUSH P,A
	PUSH P,B
	PUSHJ P,KILSEG		;KILL SEGMENT ON THIS SIDE
	MOVE A,(P)
	MOVE B,-1(P)
	PUSHJ P,KILSEG		;BOTH DIRECTIONS
	MOVE A,-1(P)
	TRZ TFLG
	PUSHJ P,OPNT		;MAKE SURE OF POINT ON OTHER SIDE
	SETZM -1(P)		;THIS POINT WAS DELETED
	PUSH P,B		;SAVE ITS POINTER
	MOVE A,-1(P)		;AND OTHER END
	TRZE TFLG
	TRO TYPNEG
	PUSHJ P,OPNT
	SETZM -1(P)		;THIS POINT WAS DELETED
	PUSH P,B
	MOVE D,-1(P)
	PUSHJ P,MAKSEG		;NOW MAKE SEGMENT ON NEW SIDE
	POP P,D
	POP P,B
	PUSHJ P,MAKSEG		;BOTH DIRECTIONS
	POP P,A
	POP P,(P)
	JUMPN A,LSWA		;LOOP TO NEXT SEGMENT
	POPJ P,			;POINT WAS FEED THROUGH, AND WAS DELETED
;LJUMP SUBRS (PC)
;CLEAR POINTER TO A FROM LIST B
KILSEG:	HLRZ B,(B)
	HLRZ B,1(B)
	PUSHJ P,FNDLNK
	JRST KILLOS
	XCT (T)[HRRZS (B)
		HLLZS 1(B)
		HRRZS 1(B)]
	POPJ P,

KILLOS:	PUSHJ P,FUCKUP
	POPJ P,

;ADD POINTER TO A TO LIST B
MAKSEG:	HLRZ T,(B)
	PUSHJ P,FRELNK
	XCT (T)PUTAB
	POPJ P,

;FIND POINT ON OTHER SIDE, OR MAKE ONE, AND POSSIBLY DELETE ONE ONE THIS SIDE
OPNT:	HLRZ TT,(A)
	HRRZ B,TT		;SAVE POINTER TO DATA BLOCK
	HRRZ T,1(TT)
	HLL B,1(T)
	TLNN B,FEEDTH
	JRST OPNT1
	PUSH P,(B)		;SAVE POINTER TO POINT ON OTHER SIDE
	HLRZ TT,1(TT)
	TLNN B,PLANES		;DON'T DELETE IF CONNECTED TO INNER PLANES
OPNTB:	SKIPE 1(TT)		;DON'T DELETE IF STILL HAS LINES ON IT
	JRST OPNTA
	SKIPN TT,(TT)
	JRST OPNTC
	TLNE TT,-1
	JRST OPNTA
	JRST OPNTB
OPNTC:	TLZ B,FEEDTH
	HRRZS (B)		;CLEAR POINTER TO OTHER SIDE
	HLLZM B,1(T)		;CLEAR PAD TYPE
	HLRZ T,(P)		;GET OTHER SIDE POINTER
	HLRZ T,(T)
	HRRZS (T)		;CLEAR POINTER BACK
	HRRZ T,1(T)
	MOVE TT,1(T)
	TLZ TT,FEEDTH
	HLLZM TT,1(T)		;AND PAD TYPE AND BIT
	HRRZ B,A
	PUSHJ P,DELPNL		;DELETE ONE ON THIS SIDE
OPNTA:	POP P,B
	HLRZS B			;AND RETURN POINTER TO ONE ON OTHER SIDE
	POPJ P,

OPNT1:	TLNN B,ISPIN
	JRST OPNT2		;GUESS WE HAVE TO MAKE ONE
	HRRZ T,(T)		;HERE WE TRY TO FIND THE PIN ON THE OTHER SIDE
	HLRZ B,(B)
	HLRZ B,(B)
	HRRZ B,(B)
OPNT3:	HLRZ TT,(B)
	CAIN B,(A)
	JRST OPNT4
	HRRZ TTT,1(TT)
	HRRZ TTT,(TTT)
	CAIN TTT,(T)
	JRST CPOPJ1
OPNT4:	HRRZ B,(TT)
	JUMPN B,OPNT3
	PUSHJ P,FUCKUP
	POPJ P,

OPNT2:	TLNN B,CPIN
	JRST OPNT5
	SWITCH
	MOVE TTT,1(A)
	PUSHJ P,FIND.P		;TRY TO FIND CONNECTOR PIN ON OTHER SIDE
	SWITCH
	HRRZ B,D
	JRST CPOPJ1

OPNT5:	MOVE G,A
	PUSHJ P,RDFEED		;MAKE FEED THROUGH
	PUSHJ P,FUCKUP		;CAN'T BE IMPOSSIBLE
	HRRZ B,D
	TRO TFLG		;TELL THEM WE MADE THIS FEED THROUGH
	JRST CPOPJ1
;DELETE LINE, DELETE WIRE
LINDEL:	PUSHJ P,GETCLS		;CLOSEST LINE?
	JRST PERRET
	TRO MCHG!NEEDCL
FLSHLN:	HLRZ B,A
	HLRZ B,(B)
	HLRZ B,1(B)
	PUSHJ P,FNDLNK
	POPJ P,
	XCT (T)[CLRTAB:HRRZS (B)
		HLLZS 1(B)
		HRRZS 1(B)]
	MOVS A,A
	HLRZ B,A
	HLRZ B,(B)
	HLRZ B,1(B)
	PUSHJ P,FNDLNK
	POPJ P,
	XCT (T)CLRTAB
	POPJ P,

;DELETE WHOLE WIRE
LINDL2:	PUSHJ P,GETCLS
	JRST PERRET
	TRO MCHG!NEEDCL
	PUSHJ P,FLSHLN		;FLUSH LINE
	HLRZM A,LINING		;SAVE ONE END HERE
	HLLI A,			;CLEAR LEFT HALF
	PUSHJ P,DELWIR		;DELETE THE WIRE
	SKIPN A,LINING		;NOW THIS ONE
	POPJ P,
DELWIR:	HLRZ B,(A)
	HLRZ C,1(B)		;NEIGHBORS
	JUMPE C,DELWR1
	SETZ TTT,
DELWRA:	MOVEI T,2
DELWRB:	XCT (T)[HLRZ TT,(C)
		HRRZ TT,1(C)
		HLRZ TT,1(C)]
	JUMPE TT,DELWRC
	JUMPN TTT,CPOPJ		;LEAVE IF SECOND
	MOVE TTT,TT
DELWRC:	SOJGE T,DELWRB
	HRRZ C,(C)
	JUMPN C,DELWRA
	MOVE C,TTT
DELWR1:	HRRZ T,1(B)
	MOVE TT,1(T)
	TLNN TT,FEEDTH		;FEED THROUGH?
	JRST DELWR2
	JUMPN C,CPOPJ		;2 THINGS, QUIT HERE
	HLRZ C,(B)		;FEED THROUGH POINTER
	HRRZS (B)		;UNFEED THROUGH SO WE CAN FOLLOW AFTERWARDS
	TLZ TT,FEEDTH
	MOVEM TT,1(T)
	HLRZ T,(C)
	HRRZS (T)
	HRRZ T,1(T)
	MOVSI TT,FEEDTH
	ANDCAM TT,1(T)
DELWR2:	CAMN A,LINING
	SETZM LINING		;NOTE WE DELETED THIS ONE
	PUSH P,C
	TRZ TFLG
	MOVE B,A
	PUSHJ P,DELPNL
	POP P,A
	JUMPN A,DELWIR
	POPJ P,
;PUT MIDPOINT IN LINE (PC)
BENDL:	PUSHJ P,GETCLS
	JRST PERRET
	MOVE T,CURSE		;WHERE TO PUT MIDPOINT
	PUSHJ P,BENDLP
	JFCL
	POPJ P,

;ENTER HERE WITH LOCATION YOU WISH MIDPOINT TO BE PLACED IN T
BENDLP:	PUSH P,A
	PUSHJ P,PNTPUT
	GETFS(E)
	SETZM (E)
	SETZM 1(E)
	HRLM E,1(TTT)
	PUSH P,D
	PUSH P,E
	HLRZ A,-2(P)
	HRRZ B,-2(P)
	HLRZ B,(B)
	HLRZ B,1(B)
	PUSHJ P,FNDLNK
	JRST [	OUTSTR[ASCIZ/MOBY LOSSAGE AT BENDL!
/]
		POP P,(P)
		POP P,(P)
		POP P,(P)
		POPJ P,]
	TRO MCHG
	MOVE D,-1(P)
	XCT (T)PUTAB
	HLRZ B,(A)
	HLRZ B,1(B)
	HRRZ A,-2(P)
	PUSHJ P,FNDLNK
	PUSHJ P,FUCKUP		;LOSE BIG IF NOT FOUND
	MOVE D,-1(P)
	XCT (T)PUTAB
	POP P,B
	MOVE A,-1(P)
	MOVEM A,1(B)
	POP P,(P)
	MOVE T,LSTPNT
	PUSHJ P,SCLOSE
	POP P,(P)		;LOSE OLD CLOSEST
	MOVEI T,PNTM		;MUST BE IN POINT MODE FOR THIS
	PUSHJ P,CHNGMD
	PUSHJ P,DOPMOV		;START MOVING MID-POINT
	MOVEI T,BIGPG
	AOS (P)			;INDICATE SUCCESS
	JRST HYDPOG
;ATTACH POINT TO POINT (PC)
PATT:	TRZE INMOV
	JRST [	MOVE A,CLOSES	;USE THE ONE WE WERE MOVING
		JRST PATT1]
	TRNN INLIN
	PUSHJ P,GETCLS
	JRST PERRET
PATT1:	MOVEM A,LINING
	TRO INLIN!NEEDCL
	PUSHJ P,GETCLS
	JRST [	TRZ INLIN
		TRO NEEDCL
		JRST PERRET]
	MOVE T,1(A)
	HLRZ TT,(A)
	HRRZ TT,1(TT)
	MOVE TT,1(TT)
	TLNE TT,ISPIN!CPIN!FEEDTH
	JRST [	EXCH A,LINING	;TRY IT THE OTHER WAY
		HLRZ TT,(A)
		HRRZ TT,1(TT)
		MOVE TT,1(TT)
		TLNN TT,ISPIN!CPIN!FEEDTH
		JRST .+1
		OUTSTR[ASCIZ/SORRY, BOTH ARE PINS OR FEEDTHROUGHS!
/]
		TRZ INLIN
		TRO NEEDCL
		POPJ P,]
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/
THIS ONE?/]
	TRZ INLIN
	MOVEM T,STARLOC
	MOVEI T,UPSTAR
	MOVEM T,SPDISP
	MOVE T,[ASCID/AP/]
	MOVEM T,SPMODT
	MOVEI T,SPM
	PUSHJ P,TCHNGM
	PUSHJ P,YORN
	JFCL
	JFCL
	TRO NEEDCL
	PUSHJ P,RCHNGM
	CAIE C,"Y"
	CAIN C,"y"
	CAIA
	POPJ P,
PATTL:	HRLM A,LINING
	HRRZ A,LINING
	HLRZ A,(A)
	HRRZ B,1(A)
	HLRZ C,LINING
	HLRZ C,(C)
	HLRZ D,1(C)
	JUMPE D,NOMOVL
	MOVE T,D
TLOOPS:	SKIPE 1(T)		;CHECK FOR ANY NEIGHBORS TO COPY
	JRST TLOOP0
	SKIPN T,(T)
	JRST NOMOVL
	TLNN T,-1
	JRST TLOOPS
TLOOP0:	HRRZS 1(C)		;CLEAR POINTER TO LIST FROM OLD POINT
	HLRZ T,1(A)
	JUMPE T,[HRLM D,1(A)
		JRST TLOOP9]
	MOVE A,T
	HRRZ T,(T)
	JUMPN T,.-2
	HRRM D,(A)
TLOOP9:	PUSH P,B
	PUSH P,C
	MOVE C,D
	HRRZ D,LINING
	HLRZ A,LINING
TLOOP:	MOVEI TTT,2
TLOOP1:	XCT (TTT)[HLRZ B,(C)
		HRRZ B,1(C)
		HLRZ B,1(C)]
	JUMPE B,TLOOPE
	CAMN D,B			;DID THESE 2 POINT TO EACH OTHER?
	JRST [	XCT (TTT)[HRRZS (C)	;YES, FLUSH THAT SEGMENT
			HLLZS 1(C)
			HRRZS 1(C)]
		HLRZ B,(B)
		HLRZ B,1(B)
		PUSHJ P,FNDLNK
		JRST TLOOPE
		XCT (T)[HRRZS (B)
			HLLZS 1(B)
			HRRZS 1(B)]
		JRST TLOOPE]
	HLRZ B,(B)
	HLRZ B,1(B)
	PUSHJ P,FNDLNK
	CAIA
	XCT (T)PUTAB
TLOOPE:	SOJGE TTT,TLOOP1
	HRRZ C,(C)
	JUMPN C,TLOOP
	POP P,C
	POP P,B
NOMOVL:	HLRZ T,(B)
	JUMPN T,LOSTXT
	HRRZ C,1(C)
	HLRZ D,(C)
	HRRZS (C)
	HRLM D,(B)
LOSTXT:	HLRZ B,LINING
	PUSHJ P,DELPNL
	SETZM LINING
	TRO MCHG!NEEDCL
	TRZ INLIN!INMOV
	POPJ P,
;ATTACH POINT TO LINE (PC)
LATT:	MOVE A,CLOSES
	TRZE INMOV		;STOP MOVING
	JRST INATT
	SETZM SAVP
	TRNE INLIN
	JRST INATT0
	PUSHJ P,GETCLS
	JRST PERRET
INATT:	MOVEM A,SAVP		;THIS IS POINT WE WILL ATTACH TO
	JUMPE A,INATT0
	HLRZ T,(A)
	HRRZ T,1(T)
	MOVE T,1(T)
	TLNE T,ISPIN!CPIN	;NOT THESE PLEASE!
	JRST PERRET
INATT0:	MOVEI T,LINM
	PUSHJ P,TCHNGM
	TRO NEEDCL
	PUSHJ P,GETCLS
	JRST [	PUSHJ P,RCHNGM
		JRST ATTERR]
	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/THIS ONE/]
	MOVEI T,UPSTAR
	MOVEM T,SPDISP
	MOVE T,[ASCID/AL/]
	MOVEM T,SPMODT
	MOVEI T,SPM		;SPECIAL POINTER MODE
	PUSHJ P,TCHNGM
	MOVE T,IPOINT
	MOVEM T,STARLOC		;THIS IS LOC OF STAR
	PUSHJ P,YORN
	JFCL
	JFCL
	PUSHJ P,RCHNGM		;GET BACK OLD MODE
	SKIPN T,SAVP
	SKIPA T,IPOINT
	MOVE T,1(T)
	CAIE C,"y"
	CAIN C,"Y"
	PUSHJ P,BENDLP
	JRST ATTERR
	TRZ INMOV
	SKIPN A,SAVP
	JRST LATTL
	MOVEM A,LINING
	MOVE A,CLOSES
	EXCH A,LINING		;MOVE POINT TO LINE!
	JRST PATTL		;PATT DOES THE REST

LATTL:	MOVE A,CLOSES
	TRZ INLIN
	TRO NEEDCL
	JRST PNMNS1		;MINUS TO MIDPOINT

ATTERR:	SKIPN SAVP
	TRO INLIN!NEEDCL
	TRZ INMOV
	JRST PERRET
>;MPC
    