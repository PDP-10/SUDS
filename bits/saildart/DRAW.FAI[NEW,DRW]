;<DRAW>DRAW.FAI.75, 15-NOV-75 18:03:51, EDIT BY HELLIWELL
VERSION(DRAW,12)
DISP:	TLNN DSPACT
	POPJ P,
	MOVE T,MODE	;GET MODE
MPC,<	CAIE T,MALTM
	CAIN T,ALTM
	JRST TXTDIS	;THIS IS SPECIAL
>;MPC
MD,<
	JRST @MTAB(T)	;DISPATCH

MTAB:	DP2	;S
	DP2	;B
	DP2	;P
	DP2	;L
	DP2	;T
	TXTDIS	;A
	TXTDIS	;MA
	DP2	;SP
	DP2	;BT
	TXTDIS	;BTA
	DPED	;E
	DPEDI	;EI
	DPED	;ET
	DPED	;EP
	DPEDGT	;EG
	TXTDIS	;EA
REPEAT NUMODES+<MTAB-.>,<CPOPJ
>
;MAIN DISPLAY, CARD STUFF
DP2:	PUSHJ P,CLEAR1
	PUSHJ P,CLEAR2
>;MD
	TRZN MCHG
	JRST @DSPDSP
	SOFAR
	PUSHJ P,BLDISP
	SOFAR
	MOVEI T,MAINPG
	MOVEM T,PGLASS
	PUSHJ P,DPYSET
	PUSHJ P,UPSET		;UPDATE CURRENT SET!
MD,<	PUSHJ P,UPLOC		;UPDATE GLOBAL CARD LOC
	SKIPN SWIDTH		;ANY BOX TO SHOW?
	JRST NOSBOX		;NO
	PUSH P,M
	TLO M,LWINDOW		;ALWAYS LWINDOW THIS BOX
	MOVE T,SWIDTH
	HRR T,SHEIGHT
	PUSHJ P,AIVECT
	MOVS T,SWIDTH
	HRR T,SHEIGHT
	PUSHJ P,AVECT
	MOVS T,SWIDTH
	HLR T,SHEIGHT
	PUSHJ P,AVECT
	MOVE T,SWIDTH
	HLR T,SHEIGHT
	PUSHJ P,AVECT
	MOVE T,SWIDTH
	HRR T,SHEIGHT
	PUSHJ P,AVECT
	POP P,T
	TLNN T,LWINDOW
	TLZ M,LWINDOW
NOSBOX:
>;MD
MPC,<
ROUTE,<	PUSHJ P,PDISP	>
	PUSHJ P,UPSIDE		;SOLDER-COMPONENT STUFF
	TLNN M,CRDISP
	JRST CRDDON
	PUSHJ P,SETDEF
	MOVEI A,CRDLST
	JRST CRDLIP
CRDLOP:	MOVE T,1(A)
	TRZE T,1
	JRST [	PUSHJ P,AIVECT
		JRST CRDLIP]
	PUSHJ P,AVECT
CRDLIP:	HRRZ A,(A)
	JUMPN A,CRDLOP
	TRNE M,XFINGER
	JRST NOTARG		;SKIP TARGETS IF NO FINGERS
	HLRZ A,CRDLST
	JUMPE A,NOTARG
DOTARG:	MOVE T,1(A)
	PUSHJ P,BIGAIV
nodec,<	MOVEI T,""+""+1	>
dec,<	movei t,""+""+1	>
	PUSHJ P,TXTDPB
NTARG:	HRRZ A,(A)
	JUMPN A,DOTARG
NOTARG:	MOVE T,DEFBRT
	PUSHJ P,DPYBRT		;BRIGHT IN BOTH SIDES MODE
	PUSHJ P,FNGBAR		;DO FINGERS AND BARS
	TRNN BTHSDS
	JRST CRDDON		;ONLY ONE SIDE
	SWITCH
	PUSHJ P,FNGBAR
	SWITCH
CRDDON:	CHECKIN
>;MPC
;MAIN DISPLAY, BODIES AND POINTS
	MOVE T,DEFBRT
	PUSHJ P,DPYBRT
	SKIPE E,DBODPN
	PUSHJ P,BODYS
	CHECKIN
MPC,<	MOVE T,BTHBRT
	TRNE BTHSDS
	PUSHJ P,DPYBRT
>;MPC
	SKIPE E,PONPNT
	PUSHJ P,POINTS
MPC,<	TRNN BTHSDS
	JRST NOBOTH
	CHECKIN
	SWITCH
	MOVE T,DEFBRT
	PUSHJ P,DPYBRT
	PUSH P,M
	TLZ M,CLOCS
	TRO M,NDIPS
	SKIPE E,PONPNT
	PUSHJ P,POINTS
	POP P,M			;RESTORE FLAGS
	SWITCH
NOBOTH:
>;MPC
	PUSHJ P,MAINOU		;ALL DONE, DISPLAY IT!
	SOFAR			;FINISHED, MAKE US A NOOP
	POPJ P,
;BODIES
BODYS:
	MOVE D,1(E)	;GET THE LOCATION OF THE CENTER OF THE BODY
	HLRZ T,(E)	;GET POINTER TO DATA BLOCK
	HRRZ A,1(T)	;GET POINTER TO BODY DEFINITION
	HLRZ F,(T)	;GET ORIENTATION
	TLNN M,BLOCS
	JRST NONUM
	HLRZ B,1(T)	;POINTER TO LOC BLOCK
MD,<	HLRZ T,1(B)	;GET BODY BITS
	TLNN M,UNHIDE	;IF UNHIDING, ALWAYS DISPLAY
	TRNN T,FIXLOC	;ARE WE TRACKING DEFINITION?
	JRST DISLC1	;NO, WILL DISPLAY
	HLRZ T,1(A)
	HLRZ T,(T)
	HLRZ T,(T)	;TYPE BITS
	TRNE T,XDISLOC	;SUPPRESSING DISPLAY OF LOC?
	JRST NONUM	;YES
DISLC1:	HRRZ B,(B)	;REAL POINTER
	JUMPE B,NONUM	;IS THERE ANY?
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	PUSH P,A
	MOVE A,1(E)
	ADJUST(ADD,A,<1(B)>)
	HLRZ B,(B)
	PUSH P,B
	MOVE B,1(B)
	PUSHJ P,ABCALC
	POP P,B
	POP P,A
>;MD
MPC,<
	HRRZ T,(B)
	JUMPE T,NONUM	;NO NUMBER
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	MOVE T,1(E)		;GET PIC OFFSET
	PUSHJ P,PINPOS
>;MPC
	PUSHJ P,BODNUM
NONUM:
MPC,<	TLNN M,%IDENT
	JRST NDIPID
	HLRZ B,(E)
	HLRZ B,1(B)
	HRRZ B,1(B)
	JUMPE B,NDIPID
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	MOVE T,1(E)
	PUSHJ P,AIVECT
	MOVEI T,25	;ASCID/LF/
	PUSHJ P,TXTDPB
	PUSHJ P,PLUNK	;AND STRING
NDIPID:
>;MPC
MD,<	HLRZ T,(E)
	HLRZ T,1(T)
	HRRZ T,1(T)
	MOVEM T,BTXLST
>;MD
	PUSHJ P,OUTBOD	;OUTPUT THE BODY
ARN1:	HRRZ E,(E)	;GET NEXT BODY
	JUMPN E,BODYS	;LOOP IF ANY LEFT
	POPJ P,

PLUNK:	MOVE T,1(B)
	TRO T,1
	PUSHJ P,TXTDPB
	HRRZ B,(B)
	JUMPN B,PLUNK
	POPJ P,
;POINTS
POINTS:	PUSHJ P,DLOP3
	HRRZ E,(E)
	JUMPN E,POINTS
	POPJ P,

;DLOP3 CALLED FROM LAYOUT STUFF TO BLINK WIRE
DLOP3:	HLRZ D,(E)
	MOVE T,1(E)
	PUSHJ P,ONSCR
	JRST [	TLNE M,LWINDOW
		PUSHJ P,DLOP5		;OFF SCREEN, DO LINES IF WINDOWING
		POPJ P,]		;THEN LEAVE
	PUSHJ P,DLOP5			;DO LINES, THEN GO ON
	HLRZ D,(E)
	HRRZ D,1(D)
	HLL D,1(D)
;MORE POINTS, SHOW PAD, DRILL HOLE, PLANE CONNECTIONS (PC)
MPC,<	HRRZ T,1(D)
	TLNE D,ISPIN	;HANDLE PIN SEPERATELY
	JRST [	TRNE M,NDIPS	;SUPPRESSING DIP PINS?
		JRST NOPLAN	;YES
;		CAIE T,1	;LET 1 GO BY
;		JRST SHWPAD
		MOVE T,NSCALE
		CAIL T,5
		JRST SHWPAD
		JRST NOPLAN]
	TRNE M,XFEED		;SUPPRESSING FEED THROUGHS?
	JRST NOFEED
	TLNN D,FEEDTH
	JUMPE T,NOFEED
SHWPAD:	MOVE T,1(E)	;X,Y
	HRRZ TT,1(D)
	CAIN TT,2		;2 (CLEARANCE) SHOULD BE BIGGER
	JRST [	PUSHJ P,SM2AIV
		JRST .+2]
	PUSHJ P,SMLAIV
	TLNE D,ISPIN!FEEDTH
nodec,<	SKIPA T,[""+""+1]	>
dec,<	skipa t,[""+""+1]	>
	MOVEI T,"O"+"O"+1
	HRRZ TT,1(D)
	JUMPN TT,.+2
	MOVEI T,"X"+"X"+1
	CAILE TT,2
	JRST [	CAILE TT,=9
		MOVEI TT,"??"-60		;FLAG AS ERROR
		MOVEI T,60(TT)
		LSH T,1
		TRO T,1
		JRST .+1]
	PUSHJ P,TXTDPB
NOFEED:	TLNN D,PLANES
	JRST NOPLAN
	MOVE T,1(E)
	PUSHJ P,SMGAIV
	LDB T,[POINT 3,1(D),6]
	MOVE T,(T)[	1
			ASCID/\/
			ASCID//
			ASCID/=/
			ASCID//
			1
			1
			1	]
	PUSHJ P,TXTDPB
NOPLAN:
>;MPC
;MORE POINTS, PIN NUMBERS, TEXT.
	TLNE M,CLOCS
	TLNN D,CPIN	;DOING PINS, IS THIS A CONNECTOR PIN?
	JRST NOCONP	;DON'T HAVE TO FOOL AROUND HERE
	HRRZ B,(D)
MD,<
	TRNN M,NOCBOX	;SKIPPING CBOX FOR NOW?
	PUSHJ P,CONBOX	;PUT BOX FOR CONNECTOR ID
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	PUSHJ P,CALCOF
>;MD
MPC,<	MOVE T,1(E)
	PUSHJ P,SMLAIV	;VECTOR TO THERE
>;MPC
	PUSHJ P,CONNUM	;WILL DO RIGHT THING
MD,<	JRST NONUMP	;CHECK IF MUST FOOL

NOCONP:	TLNN D,ISPIN	;YES, IS THIS A PIN?
	JRST NONUMP
	TLNN M,RPINID
	JRST NORID
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	MOVE T,1(E)
	PUSHJ P,PINPOS
	HLRZ TTT,(E)
	HLRZ TTT,(TTT)
	HLRZ TTT,(TTT)
	HLRZ TTT,(TTT)		;GET ORIENTATION
	HRRZ T,(D)
	HLRZ T,(T)
	PUSHJ P,DISRID
	JRST NONUMP

NORID:	TLNN M,PLOCS	;DOING PINS?
	JRST CKPNID	;NO, CHECK ID'S
	HRRZ TT,(D)
	HLRZ TT,(TT)
	HLRZ T,(TT)	;PIN DEF BITS
	TRNE T,BUSSED	;BUSSED THROUGH?
	TLNE M,UNHIDE	;YES, ARE WE UNHIDING THEM?
	CAIA		;NOT BUSSED OR UNHIDING
	JRST NONUMP	;BUSSED AND NOT UNHIDING
	HRRZ T,1(D)	;GET PIN NUMBER
	JUMPN T,ISNUMP
	TLNN M,PINIDS
	JRST NONUMP
	HRRZ T,1(TT)
ISNUMP:	PUSH P,T
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	MOVE T,1(E)
	PUSHJ P,PINPOS	;THIS WILL GET FUDGED PROPERLY
	POP P,T
	HLRZ TTT,(E)
	HLRZ TTT,(TTT)
	HLRZ TTT,(TTT)
	HLRZ A,1(TTT)
	HLRZ A,1(A)
	HRL A,T
	HLRZ TTT,(TTT)
	PUSHJ P,DISPIN	;DISPLAY IT
	JRST NONUMP

CKPNID:	TLNN M,PINIDS
	JRST NONUMP
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	MOVE T,1(E)
	PUSHJ P,PINPOS
	HLRZ TTT,(E)
	HLRZ TTT,(TTT)
	HLRZ TTT,(TTT)
	HLRZ TTT,(TTT)	;ORIENTATION
	HRRZ T,(D)
	HLRZ T,(T)
	PUSHJ P,DISDEF
>;MD
MPC,<NOCONP:>
NONUMP:	HLRZ B,(D)	;GET TEXT POINTER
	JUMPE B,DLOP4	;ANY AT ALL?
	TRNE M,NPTEXT
	JRST DLOP4
	HRRZ T,(B)
	HLRZ T,(T)	;GET SIZE
	ANDI T,377777
	PUSHJ P,DPYBIG	;SET SIZE
	PUSHJ P,CALCOF
	HRRZ B,(B)
	PUSHJ P,DTXT	;DISPLAY TEXT
DLOP4:	POPJ P,
;POINT SUBR, DRAW LINES
LINOUT:	MOVE T,1(E)
MPC,<	CAMGE T,1(A)
	POPJ P,
>;MPC
	PUSHJ P,AIVECT	;DRAW INVIS. TO IT
	MOVE T,1(A)	;GET X,Y FOR TARGET POINT
	JRST AVECT	;DRAW VIS. TO IT & LEAVE

;SUBR TO DRAW LINES
DLOP5:	TRNE M,NLINES
	POPJ P,		;NOT DOING LINES!
MD,<
	HLRZ D,1(D)	;GET POINTER TO ^_ BLOCK

	DEFINE FOO (Q,Z)
<	Q   A,Z(D)
	JUMPE A,.+2
	PUSHJ P,LINOUT>

	FOO(HRRZ)
	FOO(HRRZ,1)
	POPJ P,
>;MD
MPC,<
	HLRZ D,1(D)	;GET POINTER TO ^_ BLOCK
	JUMPE D,CPOPJ
DLOP7:	MOVEI B,2
DLOP8:	XCT (B)[	HLRZ A,(D)
			HRRZ A,1(D)
			HLRZ A,1(D)]
	JUMPE A,.+2
	PUSHJ P,LINOUT
	SOJGE B,DLOP8
	HRRZ D,(D)
	JUMPN D,DLOP7
	POPJ P,
>;MPC
;EDIT DISPLAY (D)
MD,<
EDDISR:	TRZN MCHG
	TRNE INMOV
	JRST EDDIS1
	POP P,(P)
	POPJ P,

EDDIS1:	PUSHJ P,CLEAR1
	PUSHJ P,CLEAR2
	MOVEI T,MAINPG
	MOVEM T,PGLASS	;USE PIECE OF (GL)ASS NUMBER 3 (FOR EDITING BODY)
	PUSHJ P,DPYSET
	SETZ T,
	MOVEI TT,TITBIG
	MOVE TTT,[%LEFT,,SCRTOP-CHGHT*TITBIG*3]
	PUSHJ P,TITVCT
	MOVE T,[ASCID/BODYN/]
	PUSHJ P,TXTDPB
	MOVE T,[ASCID/AME: /]
	PUSHJ P,TXTDPB
	MOVE B,CURBOD
	HRRZ B,(B)
	JRST PLUNK

DPEDGT:	MOVE A,GETBOD	;BODY WE ARE GETTING
	MOVE D,CURSE	;PUT IT AT CURSOR
	MOVE F,GETORT
	MOVEI T,ANGLPG	;USE ANGLE PAGE
	MOVEM T,PGLASS
	PUSHJ P,DPYSET
	PUSH P,M
	TRZ M,NBTEXT
	PUSHJ P,PUTBOD	;DRAW BODY
	POP P,M
	PUSHJ P,BLINKO
DPED:	PUSHJ P,EDDISR
DPEDR:	MOVE A,CURBOD	;GET POINTER TO BODY
	SETZB D,F	;CLEAR OFFSET AND ORIENTATION
	PUSHJ P,PUTBDL	;OUTPUT IT
	JRST MAINOU

DPEDI:	PUSHJ P,EDDISR
	MOVE A,CLSTPN	;GET PRECEDING ("LAST") POINT
	SKIPN B,CRPPNT	;GET CURRENT POINT OF BODY
	JRST DPEDQ
	HRRZ D,(B)	;REMOVE LINK TO CURRENT POINT
	HRRM D,(A)	;...
	PUSH P,1(D)	;SAVE NEXT X,Y
	PUSH P,D	;SAVE D
	JUMPE D,DARN	;NO NEXT POINT?
	MOVEI T,1
	ORB T,1(D)	;MAKE INVISIBLE VECTOR AROUND CURRENT POINT
	MOVE T,-1(P)	;GET FOLLOW2 POINT
	TRNN T,1	;VISIBLE?
	PUSHJ P,FOLOW1	;YES, FOLLOW IT
DARN:	TRNE ATFP	;AT FIRST POINT?
	JRST FARN	;YES, DON'T FOLLOW
	MOVE T,1(A)	;NO, GET X,Y
	TRZ T,1		;SHUT OFF VIS/INVIS BIT
	TRNN TYPNEG	;NEGATIVE VECT FOLLOWING US?
	PUSHJ P,FOLOW2	;NO, FOLLOW IT
FARN:	MOVE A,CURBOD	;GET POINTER TO BODY
	SETZB D,F	;CLEAR OFFSET AND ORIENTATION
	PUSHJ P,PUTBDL	;PUT IT OUT
	POP P,D		;RESTORE D
	JUMPE D,[POP P,(P)
		JRST .+2]
	POP P,1(D)	;RESTORE X,Y FOR FOLLOWING POINT
	MOVE B,CRPPNT
	MOVE A,CLSTPN
	HRRM B,(A)	;RESTORE LINKAGE
	JRST MAINOU

DPEDQ:	MOVE T,1(A)
	TRZ T,1
	TRNN ATFP
	PUSHJ P,FOLOW1
	JRST DPEDR
>;MD
;OUTBOD:(PC)
;	CALL WITH
;	A=POINTER TO TYPE DEFFINITION
;	D=X,Y OFFSET
;	F=ORIENTATION
MPC,<
PUTBDL:	HRRZ B,1(A)
	JUMPE B,OUTBD1
PUTBD1:	MOVE T,1(B)
	PUSHJ P,ORIENT
	ADJUST(ADD,T,D)
	PUSHJ P,SMLAIV
nodec,<	MOVEI T,""+""+1	>
dec,<	movei t,""+""+1	>
	PUSHJ P,TXTDPB
	HRRZ B,(B)
	JUMPN B,PUTBD1
	JRST OUTBD1

OUTBOD:	MOVE T,NSCALE
	CAIGE T,5		;OR TOO SMALL TO DO ALL POINTS?
	JRST JSTBOX		;YES, SIMULATE WITH BOX
OUTBD1:	MOVEI T,STDBIG
	PUSHJ P,DPYBIG		;EVERYTHING HERE IS SIZE ONE
	TLNN M,PLOCS		;SHALL WE DO PINS
	JRST NONUMS
	MOVEI B,1(A)
	JRST NXTNUM
DONUM:	MOVE T,1(B)		;X,Y OF PIN
	PUSHJ P,ORIENT
	ADJUST(ADD,T,D)		;OFFSET IT
	PUSHJ P,AIVECT
	HLRZ T,(B)
	PUSHJ P,DISNUM
NXTNUM:	HRRZ B,(B)
	JUMPN B,DONUM
NONUMS:	HRRZ B,1(A)
	JUMPE B,NONMS1
FNPIN1:	HLRZ T,(B)
	CAIN T,1
	JRST ISPIN1
	HRRZ B,(B)
	JUMPN B,FNPIN1
	JRST NONMS1

ISPIN1:	MOVE T,1(B)
	PUSHJ P,ORIENT
	ADJUST(ADD,T,D)
	PUSHJ P,SM1AIV
	MOVEI T,76*2+1
	PUSHJ P,TXTDPB
NONMS1:	TRNN M,NDIPS		;IF NO PINS BEING SHOWN, DRAW BOX
	POPJ P,
JSTBOX:	HLRO B,1(A)		;GET POINTER TO LINE LIST
	TRNE B,-1		;IS THERE ONE?
	HRRO B,1(A)		;NO, USE THIS ONE
JSTLOP:	MOVE T,1(B)
	PUSHJ P,ORIENT
	ADJUST(ADD,T,D)
	TLNE B,-1		;FIRST TIME?
	JRST [	PUSHJ P,AIVECT	;YES
		JRST .+2]
	PUSHJ P,AVECT
	HRRZ B,(B)		;GET NEXT AND INDICATE NOT FIRST TIME
	JUMPN B,JSTLOP
	POPJ P,
>;MPC
;OUTBOD:(D)
MD,<
PUTBDL:	TLNN M,BLOCS	;BODY LOCS ENABLED?
	JRST PUTBOD	;NO
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	PUSH P,A
	HLRZ A,1(A)
	HLRZ A,(A)
	HRRZ B,(A)
	MOVE A,1(A)
	ADJUST(ADD,A,D)
	JUMPN B,[MOVE B,1(B)
		JRST NLCFDG]
DEC,<	MOVNI T,CWIDTH*3
	IMUL T,CMUL+STDBIG
	ASH T,-1
	MOVNI B,CHGHT
	IMUL B,CMUL+STDBIG
	ASH B,-1
	HRL B,T
>;DEC
NODEC,<	SETZ B,	>
NLCFDG:	PUSHJ P,ABCALC
	POP P,A
	MOVE T,@PROTOB		;GET PROTOTYPE DIP LOC
	PUSHJ P,TXTDPB
	HLRZ T,1(A)
	HLRZ T,(T)
	HLRZ T,(T)		;TYPE BITS
	TRNN T,XDISLOC		;SUPPRESSING DISPLAY OF LOC FOR BODIES?
	JRST PUTBOD
	MOVE T,[ASCID/(-DIS/]
	PUSHJ P,TXTDPB
	MOVE T,[ASCID/LOC)/]
	PUSHJ P,TXTDPB
PUTBOD:	SETZM BTXLST
	TLNN M,RPINID!PINIDS	;DOING PIN ID'S?
	JRST OUTBOD	;NO
	MOVEI T,STDBIG
	PUSHJ P,DPYBIG
	HLRZ B,1(A)	;GET POINTER TO POINTER BLOCK
	JRST NXTNUM

DONUM:	MOVE T,1(B)	;GET X,Y OF PIN
	PUSHJ P,ORIENT	;ORIENT IT
	ADJUST (ADD,T,D);ADD BODY CENTER
	PUSHJ P,PINPOS
	HLRZ T,(B)	;PIN BITS ETC BLOCK
	MOVE TTT,F	;ORIENTATION
	TLNE M,RPINID
	PUSHJ P,DISRID
	TLNN M,RPINID
	PUSHJ P,DISDEF
NXTNUM:	HRRZ B,(B)
	JUMPN B,DONUM
OUTBOD:	MOVS B,1(A)	;GET POINTER TO POINTER BLOCK
	HRRZ B,1(B)	;GET POINTER TO LINES
	JUMPE B,DBPNT1	;NO MORE LINES?
DLOP1:	MOVE T,1(B)	;GET X,Y
	TRZE T,1	;INVISIBLE?
	TLO B,400000	;FLAG INVISIBLE (WAS CLEARED BY HRRZ)
	PUSHJ P,ORIENT
	ADJUST(ADD,T,D)	;OFFSET IT
	TLNE B,400000	;INVISIBLE?
	JRST [	PUSHJ P,AIVECT ;YES
		JRST .+2]
	PUSHJ P,AVECT	;NO
	HRRZ B,(B)	;GET NEXT LINE
	JUMPN B,DLOP1
DBPNT1:	TRNE M,NBTEXT
	POPJ P,
	SKIPN B,BTXLST
	JRST DLOPDF
BDLOP1:	HLRZ T,(B)
	JUMPN T,BDLOP2
	PUSH P,B
	HRRZ B,1(B)
	PUSHJ P,BTXDSP
	POP P,B
	JRST BDLOP3

BDLOP2:	PUSHJ P,BTXDSP
BDLOP3:	HRRZ B,(B)
	JUMPN B,BDLOP1
	POPJ P,

DLOPDF:	MOVS B,1(A)	;GET POINTER TO POINTER BLOCK
	HLRZ B,1(B)	;GET POINTER TO TEXT
	JUMPE B,CPOPJ 	;NONE?
DLOP7:	PUSHJ P,BTXDSP
	HRRZ B,(B)	;GET POINTER TO NEXT ONE
	JUMPN B,DLOP7	;LOOP
	POPJ P,

BTXDSP:	HLRZ T,(B)
	HRRZ T,(T)
	HLRZ T,(T)
	TLNN M,%IDENT
	JUMPE T,CPOPJ
	MOVE T,1(B)	;GET X,Y
	TDZ T,[1,,1]
	PUSHJ P,ORIENT
	PUSH P,B	;SAVE B
	PUSH P,D
	PUSH P,E
	ADD D,T
	TLZ D,1
	HLRZ B,(B)	;GET POINTER TO TEXT DATA BLOCK
	MOVEI E,D-1	;POINT TO IT FOR CALCOF
	HRRZ T,(B)
	HLRZ T,(T)
	SKIPN T
	MOVEI T,STDBIG
	ANDI T,377777
	PUSHJ P,DPYBIG	;LET IT GO INTO VECTOR
	PUSHJ P,CALCOF	;VECTOR TO IT
	HRRZ B,(B)	;GET POINTER TO TEXT
	PUSHJ P,DTXT	;DISPLAY IT
	POP P,E
	POP P,D
	POP P,B		;GET B BACK
	POPJ P,
>;MD
;ALTER MODE DISPLAY
TXTDIS:	TRZN MCHG
	POPJ P,
	MOVEI T,BLPG
	PUSHJ P,HYDPOG
	MOVEI T,MAINPG		;USE MAIN PAGE FOR ALTER STUFF
	MOVEM T,PGLASS
	PUSHJ P,DPYSET
	MOVEI A,1
	LSH A,@MODE
	TDNN A,[MD,<1BTALTM!1EDTAM!>1MALTM]
	JRST NOANAM
	MOVE B,REMMAC
MPC,<	HRRZ B,1(B)	>	;PC ONLY DOES MALTM
MD,<	TDNN A,[1BTALTM!1EDTAM]
	JRST [	HRRZ B,1(B)
		MOVEI A,[ASCID/MACRO NAME: /
				0	]
		JRST DOANAM]
	HLRZ B,(B)
	HLRZ B,(B)
	JUMPE B,NOANAM
	MOVEI A,[ASCID/PROPERTY NAME: /
			0	]
DOANAM:
>;MD
	MOVEI T,0
	MOVEI TT,TITBIG
	MOVE TTT,[%LEFT,,SCRTOP-CHGHT*TITBIG*3]
	PUSHJ P,TITVCT
	HRLI A,(<POINT 36,0>)
ANMLOP:	ILDB T,A
	TRNN T,1
	JRST ANMLP1
	PUSHJ P,TXTDPB
	JRST ANMLOP

ANMLP1:	PUSHJ P,PLUNK
NOANAM:	MOVEI T,0
	MOVEI TT,ACHRSZ
	MOVE TTT,[AXPOS,,AYPOS]
	PUSHJ P,TITVCT
	MOVE B,TXTPNT
	ADD B,[POINT 7,1]
	SKIPG TT,ALTLIN		;GET TO CORRECT START LINE
	JRST ALTLN1
ALTLN2:	TLNN B,760000		;BYTE POINTER OUT?
	JRST [	HRR B,-1(B)
		TRNE B,-1
		JRST .+1
		JRST MAINOU]	;OUTPUT BLANK SCREEN
	ILDB T,B
	CAME T,EOLCHR
	JRST ALTLN2
	SOJG TT,ALTLN2
ALTLN1:	PUSHJ P,ALTTXT		;PUT OUT OUR TEXT
	JRST MAINOU
;ORIENTATION TABLES AND ROUTINES
ORIENT:	TRNE F,777770	;REASONABLE INDEX?
	PUSHJ P,FUCKUP	;NO!
	XCT (F)XTB1
	XCT (F)XTB2
	XCT (F)XTB3
	TDZ T,[1,,1]	;CLEAR OVERFLOW BITS
	POPJ P,

;XCT TABLE FOR 8 STATE ROTATION
;EACH STATE GOES COUNTER CLOCKWISE 90 DEGREES
;UNTIL 4 WHICH IS X,-Y ROTATED

XTB1:	TLZ T,1		;X,Y
	TRC T,-2	;-Y,X
	TDCA T,[-2,,-2]	;-X,-Y
	MOVS T,T	;Y,-X
MD,<
	TRCA T,-2	;X,-Y
	MOVS T,T	;Y,X
	TLCA T,-2	;-X,Y
	MOVS T,T	;-Y,-X
>;MD

XTB2:	CAIA
	ADDI T,2
	0
	TRC T,-2
MD,<
	0
	CAIA
	0
	TDC T,[-2,,-2]
>;MD

XTB3:	0
	MOVS T,T
	ADD T,[2,,2]
	ADDI T,2
MD,<
	ADDI T,2
	0
	ADD T,[2,,0]
	ADD T,[2,,2]
>;MD

;TABLE TO UNROTATE USING ORIENT AND CURRENT ROTATION
UNROT:	0
	3
	2
	1
MD,<	4
	5
	6
	7
>;MD

MD,<
;PIN NUMBER FROTZIS TABLES
PINORI:	PUSH P,T
IFN =17-POSB,<LSH T,POSB-=17>
	ANDI T,(1POSW)-1
	TRNE TTT,777770
	PUSHJ P,FUCKUP
	XCT XPTB1(TTT)
	TRZ T,-(1POSW)		;CLEAR ANY OVERFLOW
	TRNE TTT,4		;GREATER THAN OR EQUAL TO 4?
	HRR T,XPTB2(T)		;YES, PERFORM MAPPING
	DPB T,[POINT POSW,(P),POSB+18]
	POP P,T
	POPJ P,


XPTB1:	JFCL
	ADDI T,2
	ADDI T,4
	ADDI T,6
	JFCL
	SUBI T,2
	SUBI T,4
	SUBI T,6

XPTB2:	6
	5
	4
	3
	2
	1
	0
	7
>;MD
;CARD SUBRS
MPC,<
FNGBAR:	SKIPE A,PONPNT
	PUSHJ P,CRDFNG
	TRNE M,XFINGER
	POPJ P,
	HRRZ A,BARLST
	JUMPE A,CPOPJ
CRDFN2:	MOVE B,1(A)
	HRRZ A,(A)
	JUMPE A,CRDDON
	MOVE C,1(A)
	PUSHJ P,FAKE		;FAKE BOX FOR FINGER
NFAKE:	HRRZ A,(A)
	JUMPN A,CRDFN2
	POPJ P,

CRDFNG:
	HLRZ C,(A)
	HRRZ C,1(C)
	HLL C,1(C)
	TLNN C,CPIN		;IS IT A CONNECTOR PIN?
	JRST CRDFN1		;NO, GET NEXT
	TRNE M,XFINGER		;SKIPING WHOLE FINGER?
	JRST [	TRNE M,XFEED	;THESE ALSO?
		JRST CRDFN1	;YES, DO NOTHING
		MOVE T,1(A)
		PUSHJ P,SMLAIV
		MOVEI T,"O"+"O"+1
		PUSHJ P,TXTDPB
		JRST CRDFN1]
	HRRZ C,(C)
	MOVE C,1(C)
	MOVE B,1(A)
	PUSHJ P,FAKE		;FAKE UP THE BOX!
CRDFN1:	HRRZ A,(A)
	JUMPN A,CRDFNG
	POPJ P,

FAKE:	MOVE T,B
	ADJUST(SUB,T,C)		;DELTA X,Y
	MOVEI E,0
	MOVEI F,2
	TLNE T,400000
	MOVEI E,1
	TRNE T,400000
	MOVEI F,3
	HLRE TT,T
	MOVMS TT
	HRRES T
	MOVMS T
	CAML TT,T
	MOVE F,E
	JRST @(F)[	FRIGHT
			FLEFT
			FUP
			FDOWN]
DEFINE XY(X,Y)
<	RADIX =10
	ADD T,[XWD <X>/5*2,<Y>/5*2]
	TDZ T,[(1)1]
	RADIX =8
>
FRIGHT:	MOVE T,C
	XY	-FWIDTH,FWIDTH
	PUSHJ P,AIVECT
	MOVE T,C
	XY	-FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XY	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XY	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XY	-FWIDTH,FWIDTH
	JRST AVECT
FLEFT:	MOVE T,B
	XY	-FWIDTH,FWIDTH
	PUSHJ P,AIVECT
	MOVE T,B
	XY	-FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XY	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XY	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XY	-FWIDTH,FWIDTH
	JRST AVECT
FUP:	MOVE T,C
	XY	-FWIDTH,-FWIDTH
	PUSHJ P,AIVECT
	MOVE T,C
	XY	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XY	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XY	-FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XY	-FWIDTH,-FWIDTH
	JRST AVECT
FDOWN:	MOVE T,B
	XY	-FWIDTH,-FWIDTH
	PUSHJ P,AIVECT
	MOVE T,B
	XY	FWIDTH,-FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XY	FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,C
	XY	-FWIDTH,FWIDTH
	PUSHJ P,AVECT
	MOVE T,B
	XY	-FWIDTH,-FWIDTH
	JRST AVECT
>;MPC
 