00100		TITLE	SAVJOB - A SUBROUTINE THAT SIMULATES THE ACTION OF THE SAVE COMMAND
00200		SUBTTL	RIC WERME
00300		;HISTORY:
00400		;WRITTEN MARCH 1971
00500		;PROT0 AND NOSVHI ADDED APRIL 1970
00600		;MAKSHR ADDED JANUARY 1972
00700	
00800		;ERROR RETURN CODES
00900				;ALL THOSE POSSIBLE FROM ENTER
01000		DNAEER==11	;DEVICE NOT AVAILABLE
01100		NSDEER==12	;NO SUCH DEVICE
01200		TRNEER==6	;TRANSMISSION ERROR
01300		GETEER==-1	;ERROR ON GETTAB CALL
01400		CHNEER==-2	;RETURNED IF CH IS IN USE
01500	
01600		;DATA ADDRESSES
01700		DEVLOC==0	;LOCATION OF DEVICE
01800		FILLOC==1	;FILENAME
01900		EXTLOC==2	;EXTENSION
02000		ERRLOC==2	;ERROR GOES IN RIGHT HALF OF EXT
02100		CORLOC==3	;USERS CORE ARGUMENT
02200		PRTLOC==4	;PROTECTION AND FLAGS:
02300		PROT0=1000	;IF ON THEN RENAME EVEN IF PROTECTION 0
02400		NOSVHI=2000	;IF ON THEN DON'T SAVE HISEG.
02500		MAKSHR=4000	;IF ON HISEG NAME WILL BE XXX.SHR
02600	
02700		INTERN	SAVJOB,SAVAC,SAVSA
02800		EXTERN	JOBHRL,JOB41,JOBFF,JOBDDT
02900		EXTERN	JOBREL,JOBSA,JOBCOR,JOBVER,JOBREN
03000		JOBSDD=114	;LOADER CAN'T FIND IT, BUT DOES COMPLAIN!
03100		JOBHCR=2	;DITTO
03200		JOBHCU=72	;DITTO
03300		JOBJDA=75	;DITTO
03400		JOBS41=122	;DITTO
03500		CI.DEV=4	;FOR CALLI DEVCHR
03600		DECTAP==100	;TO CHECK FOR A DECTAPE
03700		CI.UWP=36	;TO PLAY WITH THE UWP BIT
03800		CI.GET=41	;FOR CALLI GETTAB
03900		JBTPRG==3	;NAME OF MONITOR TABLE
04000		JBTSGN==14	;NAME OF HISEG TABLE
04100		SHRSEG=200000	;SHRSEG BIT
04200	
04300		IFNDEF CH,<CH==0	;LIKE MONITOR>
04400	
04500		REPEAT 0,<
04600		;SAMPLE CALL
04700		JSR	SAVJOB
04800		ARG
04900		JRST <ERROR ROUTINE>
05000		JRST <OKAY ROUTINE>
05100	ARG:	<DEVICE>
05200		<FILE>
05300		<EXT>
05400		<DESIRED HIGHEST LOCATION ON GET>
05500		<PROTECTION, 0 GIVES SYSTEM DEFAULT UNLESS PROT0 IS ON.>
05600		>
     	00100	SAVJOB:	0			;JSR HERE TO DO A SAVE
00200		MOVEM	17,SAVAC+17	;SAVE ALL THE ACS..SOMETHING SAVGET WOULD NEVER
00300		MOVEI	17,SAVAC	;THINK OF DOING FOR SOMEONE
00400		BLT	17,SAVAC+16
00500		MOVE	7,@SAVJOB	;SAVJOB POINTS TO PARAMETERS
00600		CAIG	7,14		;ARE THE PARAMETERS IN THE ACS?
00700		ADDI	7,SAVAC		;YEP
00800		AOS	SAVJOB		;PREPARE ERROR RETURN NOW FOR READIN
00900	IFN CH,<			;CHECK CHANNEL USAGE DON'T SAVE IF CH IN USE
01000		MOVE	1,JOBHCU	;1_HIGHEST CHANNEL IN USE
01100		CAIL	1,CH		;IS IT LESS THAN CH?
01200		SKIPN	JOBJDA+CH	;NO, DOES JOBJDA SAY CH IS IN USE
01300		JRST	CHANOK		;NOPE LET'S TRY THE SAVE
01400		MOVEI	3,CHNEER	;IN USE, CAN'T SAVE
01500		JRST	ERROR		;COMPLAIN
01600	CHANOK:	>
01700	IFE CH,<			;THINGS ARE EASY FOR CH 0
01800		MOVEI	3,CHNEER	;CHANCE OF ERROR
01900		SKIPE	JOBJDA+0	;CHECK IT
02000		JRST	ERROR		;NO GO >
02100		SKIPN	1,DEVLOC(7)	;GET DEVICE
02200		MOVSI	1,(SIXBIT/DSK/)	;OR DEFAULT
02300		MOVEM	1,DEVICE	;SAVE IT
02400		OPEN	CH,DEVPRM	;GET THE DEVICE
02500		JRST	NODEV		;IN CASE OF ERROR
02600		SKIPE	1,FILLOC(7)	;;GET FILENAME
02700		JRST	SETNAM		;ONE SUPPLIED
02800		HRROI	1,JBTPRG	;DEFAULT-CURRENT PROGRAM NAME
02900		MOVEI	3,GETEER	;JUST IN CASE
03000		CALLI	1,CI.GET	;GET IT
03100		JRST	ERROR		;DIDN'T WORK....IT SHOULD HAVE
03200	SETNAM:	MOVEM	1,FILE		;SAVE NAME
03300		SKIPE	JOBHRL		;IS THERE A HIGHSEG?
03400		JRST	SAVHGH		;YES..BETTER SAVE IT
03500		MOVSI	1,(SIXBIT/SAV/)	;NO HISEG..DEFAULT EXT IS SAV
03600	SAVLOW:	MOVEM	1,EXT		;SAVHGH WILL RETURN /LOW/
03700		HLLZS	EXTLOC(7)	;CLEAR ERROR AREA
03800		SKIPE	1,EXTLOC(7)	;GET EXTENSION
03900		MOVEM	1,EXT		;STORE IT
04000		UGETF	CH,1		;FORCE WRITING ON THE 1ST BLOCK AVAILABLE
     	00100	COPFIL:	MOVE	1,JOBSA		;DIDDLE JOBSA SO A RUN COMMAND RESTORES ACS
00200		HRRI	1,RESTAC	;WHERE WE WANT TO START
00300		EXCH	1,JOBSA		;STORE IT AND GET OLD ONE
00400		MOVEM	1,SAVSA#	;SAVE THE OLD ONE
00500		MOVE	1,JOB41		;SAVE UUO TRANSFER LOCATION
00600		MOVEM	1,JOBS41
00700		MOVE	1,JOBFF		;SAVE UP TO .JOBFF-1 UNLESS
00800		MOVEI	1,-1(1)
00900		SKIPE	JOBDDT		;UNLESS DDT IS IN USE
01000		MOVE	1,JOBREL	;IN WHICH CASE SAVE ALL OF CORE
01100		HRR	2,CORLOC(7)	;FIND OUT WHICH IS BIGGER,
01200		IORI	2,1777		;CORE ARG SUPPLIED BY USER
01300		MOVEI	3,(1)		;OR THAT WHICH IS IN JOBREL
01400		IORI	3,1777		;MAKING SURE EACH GOES TO THE TOP OF A K
01500		CAILE	3,(2)		;CHECK HERE
01600		MOVEI	2,(3)		;JOBREL WINS!
01700		HRLI	2,(1)		;IF SAVGET FINDS A HISEG, IT WILL READ THE LOSEG
01800					;ONLY IF LH(JOBCOR) IS GTR THAN 140
01900		HRRM	2,JOBCOR	;SAVGET WILL GET THIS MUCH CORE WHEN READ IN
02000		SUBI	1,JOBHRL-1	;# OF LOCATIONS TO SAVE
02100		MOVNS	1		;-# OF LOCATIONS
02200		MOVSS	1		;NOW IN LH
02300		HRRI	1,JOBHRL-1	;IOWD TO SAVE
02400		JSP	6,DOENT		;DIDDLE ANYTHING WE HAVE TO AND DO THE ENTER
02500		ADD	2,[2,,2]	;FIX FOR NEXT 2 STORES
02600		MOVE	3,[IOWD 1,JOBSDD]
02700		MOVEM	3,BUFF		;SAVE JOBDDT
02800		MOVE	3,JOBDDT	;MUST DO IT THIS WAY SINCE
02900		MOVEM	3,BUFF+1	;JOBSDD IS IN PROTECTED CORE
03000		SUB	1,[1,,0]	;DIDDLE THE IOWD SO THE AOBJP INSTRUCTIONS
03100					;DON'T MISS THE LAST WORD
03200	LOKNOZ:	AOBJP	1,DOJRST	;OUTPUT THE JRST IF AT END OF CORE
03300					;RH OF 1 HAS NEXT LOC TO LOOK AT OTHERWISE
03400		SKIPN	(1)		;WE'RE IN A LOOP LOOKING FOR THE FIRST
03500					;NONZERO DATA WORD
03600		JRST	LOKNOZ		;THAT WAS A ZERO, TRY NEXT
03700		MOVEI	4,1		;FOUND A NONZERO. AC4 HAS # OF DATA WORDS
03800					;SEEN, WE KNOW OF 1 ALREADY
03900		AOBJP	1,JSPCOP	;OUTPUT THIS MANY IF AT END OF CORE. COPBLK
04000					;RETURNS TO LOKNOZ WHICH WILL GO TO DOJRST
04100		SKIPE	(1)		;IS THIS A DATA WORD?
04200		AOJA	4,.-2		;YES. INCR 4 AND LOOP UNTIL ZERO SEEN
04300	JSPCOP:	JSP	11,COPBLK	;COPY THIS BLOCK
04400		JRST	LOKNOZ		;LOOP
     	00100	COPBLK:	MOVN	5,4		;5_-# DATA WORDS (IN PREPARATION FOR A IOWD
00200		MOVSS	5		;NOW IN LH
00300		HRRI	5,(1)		;RH_1ST ZERO WORD
00400		SUBI	5,1(4)		;RH_1ST DATA WORD-1
00500		MOVEM	5,1(2)		;STORE IN BUFFER. IO ROUTINE GUARANTEES
00600					;AT LEAST 1 FREE WORD IN THE BUFFER
00700		AOBJN	2,.+2		;FIX UP BUFFER IOWD
00800		JSP	6,DOUT		;OUTPUT BUFFER IF FULL
00900	BIGLOP:	MOVSI	3,1(5)		;MAKE A BLT WORD FOR THIS AMOUNT OF CORE
01000		HRRI	3,1(2)		;GOING FROM 1ST DATA WORD TO 1ST FREE BUFFER LOC
01100		HLRE	6,2		;6_-# WORDS LEFT IN BUFFER
01200		ADDI	6,(4)		;6_-# IF BLT IS DONE
01300		JUMPLE	6,OUTALL	;DATA AREA IS SMALL ENOUGH TO DO WITH 1 BLT
01400		BLT	3,(10)		;BLT SOME OF THE DATA
01500		SUBI	4,(10)		;ADJUST 4 SO IT HAS THE RIGHT # OF
01600		ADDI	4,(2)		;WORDS LEFT
01700		ADDI	5,(10)		;CHANGE 5 SO IT POINTS TO 1ST DATA WORD-1
01800		SUBI	5,(2)
01900		JSP	6,DOUT		;OUTPUT AND RESET 2
02000		JRST	BIGLOP		;OUTPUT NEXT BLOCK
02100	
02200	OUTALL:	HRLI	4,(4)		;REPLICATE 4
02300		ADD	2,4		;DIDDLE BUFFER IOWD
02400		BLT	3,(2)		;BLT IT
02500		JUMPL	2,(11)		;CHECK FOR A FULL BUFFER
02600		JSP	6,DOUT		;AND OUTPUT IF FULL
02700		JRST	(11)		;LOOK FOR THE NEXT DATA BLOCK
02800	
02900	DOENT:	SETZM	FILE+2		;CLEAR FILE SPECIFIERS WE DON'T WANT
03000		SETZM	FILE+3		;WE'LL REGRET THIS IF WE HAVE A DECTAPE
03100		MOVEI	3,-200		;ASSUMING DISK AGAIN, 200 WORD BLOCKS
03200		MOVE	5,DEVICE	;WE'D BETTER FIND OUT WHAT DEVICE WE
03300		CALLI	5,CI.DEV	;HAVE FIRST.
03400		TLNN	5,DECTAP	;IS IT A DECTAPE?
03500		JRST	NOTDEC		;NOPE - DISK PARAMETERS WILL DO
03600		UGETF	CH,5		;TELL THE MONITOR WE WANT THE 1ST FREE BLOCK
03700		MOVEM	1,CORE		;DECTAPES USE THIS TO DETERMINE READ-IN SIZE
03800		MOVEI	3,-177		;THEY ALSO USE A WORD FROM EACH BLOCK AS A LINK
03900	NOTDEC:	HRLM	3,PNT		;SET BUFFER SIZE
04000		MOVE	2,PNT		;SET UP OUTPUT IOWD
04100		MOVN	10,3		;LAST LOC IN BUFFER
04200		MOVEI	10,BUFF-1(10)	;FOR USE IN BIGLOOP
04300		ENTER	CH,FILE		;CREATE THE FILE
04400		JRST	ENTERR		;DIDN'T WANT TO!
04500		JRST	(6)		;RETURN
     	00100	SAVHGH:	MOVE	2,PRTLOC(7)	;BITS AND PIECES
00200		TRNE	2,NOSVHI	;SAVE HISEG?
00300		JRST	HISVED		;DIDN'T FEEL LIKE SAVING IT ANYWAY.
00400		MOVSI	1,(SIXBIT/HGH/)	;EXT FOR A HISEG
00500		TRNE	2,MAKSHR	;SHOULD EXT BE .SHR?
00600		MOVSI	1,(SIXBIT/SHR/)	;YES
00700		MOVEM	1,EXT
00800		SKIPE	JOBHCR+400000	;IF THIS CAME FROM A SAVE FILE, IT WILL BE NON-ZERO
00900		JRST	PRESET		;SO WE WON'T HAVE TO CHANGE IT
01000		HRROI	1,JBTSGN	;LET'S SEE WHAT SORT OF HISEG WE HAVE
01100		MOVEI	3,GETEER	;CHANCE OF ERROR
01200		CALLI	1,CI.GET	;WILL RETURN HISEG DATA
01300		JRST	ERROR		;SOMEONE WON'T LET US USE GETTAB!
01400		TLNE	1,SHRSEG	;CHECK FOR A SHRSEG
01500		JRST	PRESET		;IT IS. THIS SHOULD'NT HAPPEN, SINCE
01600					;THE ONLY WAY TO MAKE A SHRSEG IS WITH A SAVE COMMAND
01700		MOVEI	1,0		;LET OURSELVES WRITE INTO THE HISEG
01800		CALLI	1,CI.UWP	;TURN OFF UWP
01900		JRST	PRESET		;WE CAN'T, BUT LET'S NOT WORRY
02000		MOVEI	2,377777	;FUNNY-LOOKING STACK POINTER
02100		PUSH	2,JOBSA		;SET STARTING ADDRESS
02200		PUSH	2,JOB41		;UUO HANDLER
02300		PUSH	2,JOBCOR	;IF LH IS GTR 177, SAVGET WILL READ LOSEG
02400					;WHEN THIS IS RERUN
02500		MOVE	3,JOBREN	;REENTER ADDRESS
02600		HLL	3,JOBHRL	;1ST FREE LOC IN HISEG
02700		PUSH	2,3		;SAVE IT
02800		PUSH	2,JOBVER	;VERSION NUMBER
02900		MOVEI	3,0		;CLEAR THE REST OF HIDAT
03000	REPEAT 3,<	PUSH	2,3		;ZERO THIS LOC>
03100		CALLI	1,CI.UWP
03200		JFCL			;IT REALLY SHOULDN'T GET HERE,SO LET'S NOT WORRY
03300	PRESET:				;WE HAVE TO COPY HISEG WITH BLT SINCE THE
03400					;STUPID MONITOR DOESN'T BELIEVE IN HISEG DUMP I/O
03500		HLRZ	4,JOBHRL	;# OF WORDS TO WRITE
03600		MOVNI	1,(4)		;TURN 1 INTO AN IOWD
03700		HRLO	1,1		;LH_-# OF WORDS, RH_-1,SINCE DTASRN CAN'T HANDLE
03800		JSP	6,DOENT		;HISEGS, AND WILL MUNG THE EXTENSION IF RH WAS 377777
03900		TRZ	1,400000	;NOW WE SET IT TO 377777
04000		MOVEI	5,377777	;FIRST DATA WORD-1
04100		JSP	11,BIGLOP	;WRITE OUT HISEG
04200		JSP	11,OUTLST	;WRITE OUT THE REST OF THE DATA
04300		CLOSE	CH,		;CLOSE THIS FILE
04400		JSP	11,RENFIL	;SET PROTECTION IF NECESSARY
04500	HISVED:	MOVSI	1,(SIXBIT/LOW/)	;DEFAULT EXTENSION NOW LOW
04600		JRST	SAVLOW		;SAVE THE LOSEG
     	00100	DOUT:	MOVE	2,PNT		;RESET 2
00200		OUT	CH,PNT
00300		JRST	(6)		;OK
00400	OUTERR:	MOVEI	3,TRNEER	;ERROR CODE FOR TRANMISSION ERROR
00500		JRST	ERROR
00600	
00700	DOJRST:	MOVE	1,JOBSA		;MAKE JRST WORD FOR TENDMP
00800		HRLI	1,(JRST)
00900		MOVEM	1,1(2)		;STORE IT
01000		AOBJN	2,.+1		;SHOW IT'S IN
01100		JSP	11,OUTLST	;OUTPUT A PROBABLY PARTIAL BLOCK
01200		JSP	11,RENFIL	;RENAME FILE
01300		JRST	DONE		;FINISH UP AND RETURN
01400	
01500	OUTLST:	HLLE	1,PNT		;LH_ -# OF WORDS PER BUFFER, RH_ -1 SO THE
01600					;SUB WILL NOT DRAW A CARRY FROM LH
01700		SUB	1,2		;LH 1_-#WORDS TO OUTPUT
01800		HRRI	1,BUFF-1	;GOOD IOWD
01900		SETZM	2		;TELL IT TO STOP
02000		OUT	CH,1		;OUTPUT IT
02100		JRST	(11)		;IF SUCCESS
02200		JRST	OUTERR		;ON ERROR
02300	
02400	RENFIL:	CLOSE	CH,		;CLOSE OUTPUT FILE
02500		LDB	2,[POINT 10,PRTLOC(7),35] ;GET PROTECTION
02600		JUMPE	2,(11)			;DON'T RENAME IF DEFAULT
02700		DPB	2,[POINT 9,EXT+1,8]	;STORE IT
02800		RENAME	CH,FILE			;TRY IT
02900		JRST	(11)			;IGNORE ERRORS - UNIMPORTANT
03000		JRST	(11)			;RETURN
03100	DONE:	AOSA	SAVJOB		;PREPARE FOR OKAY RETURN. RENFIL HAS DONE CLOSE ALREADY
03200	DONE1:	CLOSE	CH,		;CLOSE AND RELEASE FILE
03300		RELEAS	CH,
03400	RESTAC:	MOVE	1,SAVSA		;RESTORE JOBSA
03500		MOVEM	1,JOBSA		;THAT WAS EASY!
03600		MOVSI	17,SAVAC	;RESTORE ACS
03700		BLT	17,17
03800		JRSTF	@SAVJOB		;AND RETURN
03900	
04000	NODEV:	MOVEI	3,NSDEER	;ASSUME NO SUCH DEVICE
04100		MOVE	1,DEVICE	;NOW WE TAKE A CLOSER LOOK AT THIS DEVICE
04200		CALLI	1,CI.DEV	;THIS WILL RETURN NON ZERO UNLESS
04300		JUMPE	1,ERROR		;UNLESS THE DEVICE DOESN'T EXIST
04400		MOVEI	3,DNAEER	;WE GOT SOMETHING BACK, I GUESS SOMEONE ELSE
04500		JRST	ERROR		;IS USING IT
04600	
04700	ENTERR:	MOVE	3,EXT		;RH OF EXT HAS ERROR CODE
04800	ERROR:	HRRM	3,ERRLOC(7)	;SET ERROR CODE
04900		JRST	DONE1		;RETURN TO USER
     	00100	PNT:	IOWD	0,BUFF		;LH DIDDLED DEPENDING ON TYPE OF DEVICE
00200		0			;THIS WILL STOP DUMP IO
00300	BUFF:	BLOCK	200		;OUTPUT BUFFER
00400	DEVPRM:	16			;LOCATION FOR OPEN TO GO TO
00500	DEVICE:	0
00600		0			;NO BUFFERS
00700	
00800	FILE:	0
00900	EXT:	0
01000		0
01100	CORE:	0			;IOWD FOR DECTAPES, 0 FOR DISK
01200	
01300	SAVAC:	BLOCK	20		;AC SAVE AREA
01400	
01500		LIT
01600	
01700		END
     	    