;HERE RESIDES THE MAGICAL MYSTERY SHORT FINDER
MPC,{
SHORT,{

;MAXIMUM NUMBER OF PAD TYPES
MAXPAD__=20		;THIS SHOULD BE ENOUGH

;SHORTING VALUES IN MILS
STPVAL__=1000/5*2	;APPROX NUMBER OF MILS PER STRIPE FOR 1 INCH SQUARES
FOR I_-=35,0
<	IFE STPVALI<STPXXX__I>
>
STRIPE:		STPXXX&777777	;AMOUNT TO SHIFT BY TO GET STRIPE #

OVRVAL__=50/5*2		;APPROX 1 TWENTIETH INCH OVERLAP
FOR I_=35,0,-1
<	IFE OVRVAL-I<OVRXXX__I>
>
OVERLAP:	-1<STPXXX+=36+OVRXXX>	;ACTUAL BITS FOR TESTING AC+1

;THE FOLLOWING VALUES ARE THE OPTICAL PARAMETERS

MINSEP:		=12		;12 MILS MIN SEPERATION

LINWID:		=13		;ASSUME 13 MILS WIDE FOR NOW

FEDDIA:		=35		;HOLES ARE THIS BIG
		=55		;PAD TYPE 1
		=70		;PAD TYPE 2
		=62		;PAD TYPE 3
	BLOCK MAXPAD-<.-FEDDIA>+1

CPNDIA:		=85		;USE THIS FOR CPIN DIAMETER

SETDIA:	TLNN M,DSKACT!MACACT
	OUTSTR[ASCIZ/PAD TYPE NUMBER?/]
	PUSHJ P,READNC
	JUMPE T,PERRET
	CAILE T,MAXPAD
	JRST [	OUTSTR[ASCIZ/TOO LARGE!
/]
		POPJ P,]
	MOVEI B,FEDDIA(T)
	MOVE T,FEDDIA(T)
	TLNE M,DSKACT!MACACT
	JRST SETVL1
	OUTSTR[ASCIZ/OLD DIAMETER WAS /]
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ MILS.
/]
	OUTSTR[ASCIZ/NEW DIAMETER?/]
	JRST SETVL1

SETCPN:	MOVEI A,[ASCIZ/CONNECTOR PIN PSEUDO-DIAMETER/]
	MOVEI B,CPNDIA
	JRST SETVAL

SETHOL:	MOVEI A,[ASCIZ/DRILL HOLE DIAMETER/]
	MOVEI B,FEDDIA
	JRST SETVAL

SETWID:	MOVEI A,[ASCIZ/LINE WIDTH/]
	MOVEI B,LINWID
	JRST SETVAL

SETSEP:	MOVEI A,[ASCIZ/MINIMUM SEPARATION/]
	MOVEI B,MINSEP
SETVAL:	TLNE M,DSKACT!MACACT
	JRST SETVL1
	OUTSTR (A)
	OUTSTR[ASCIZ/ WAS /]
	MOVE T,(B)
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ MILS.
NEW /]
	OUTSTR (A)
	OUTCHR["?"]
SETVL1:	PUSHJ P,READNC
	MOVEM T,(B)		;STORE NEW VALUE
	POPJ P,
;MAIN LOOP
DOSHORT:SKIPE A,SHRTER		;ANY OLD ERROR LIST TO GIVE BACK?
	PUSHJ P,GIVERR
	SETZM SHRTER
	PUSHJ P,SERSET		;INTIALIZE ERROR, CORE AND TIME COUNTING CELLS
	SKIPE A,PONPNT
	PUSHJ P,SHORT1		;DO FRONT
	PUSHJ P,SERPNT
	PUSHJ P,SERSET
	SWITCH
	SKIPE A,PONPNT
	PUSHJ P,SHORT1
	SWITCH
	SKIPN SHRTER
	JRST [	OUTSTR[ASCIZ/NO ERRORS!
/]
		POPJ P,]
SERPNT:	SKIPN T,PCOP
	JRST NOPCOP
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ COINCIDENT POINTS.
/]
NOPCOP:	SKIPN T,PTOP
	JRST NOPTOP
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ POINT TO POINT ERRORS.
/]
NOPTOP:	SKIPN T,PTOL
	JRST NOPTOL
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ POINT TO LINE ERRORS.
/]
NOPTOL:	SKIPN T,LTOL
	POPJ P,
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ LINE TO LINE ERRORS.
/]
	POPJ P,

SERSET:	SETZM PCOP
	SETZM PTOP
	SETZM PTOL
	SETZM LTOL
	POPJ P,

GIVERR:	HLRZ T,(A)
	FSTRET(T)		;RETURN SECONDARY CELLS
	HRRZ A,(A)
	JUMPN A,GIVERR
	MOVE B,SHRTER
	JRST PUTFS		;THEN MAIN LIST

SHORT1:	PUSHJ P,SIDPNT
	OUTSTR[ASCIZ/ SORTING/]
	PUSHJ P,SSORT		;SORT INTO LIST
	SKIPN H,SRTLST
	JRST SHORTE		;OH MY
	OUTSTR[ASCIZ/ CHECKING/]
SHORT2:	HRRZ G,1(H)		;PICKUP X CHAIN POINTER
	JUMPE G,SHORT3		;IS THERE ONE
SHORT9:	HLRZ F,(G)		;NOW Y CHAIN POINTER
SHORT8:	HLRZ A,(F)		;PICK UP A POINT
	JUMPE A,SHORT4		;IS THERE ONE?
	MOVE E,F		;PREPARE TO GO DOWN LIST
	JRST SHORT5

SHORT6:	HLRZ B,(E)		;PICKUP ANOTHER POINT
	JUMPE B,SHORT5		;IS THERE ONE?
	PUSHJ P,PPCHK		;CHECK POINT TO POINT
SHORT5:	HLRZ B,1(E)		;NOW LINE
	JUMPE B,SHORT7		;ANY HERE?
	HRRZ C,1(E)		;OTHER END TOO
	PUSHJ P,PLCHK		;CHECK LINE TO POINT
SHORT7:	HRRZ E,(E)		;RUN DOWN THE LIST
	JUMPN E,SHORT6
SHORT4:	HLRZ B,1(F)		;ONE ENDPOINT
	JUMPE B,LSHRT1		;IS THERE ONE?
	MOVE E,F		;SETUP LIST AGAIN
	HRRZ C,1(F)		;OTHER ENDPOINT
	JRST LSHRT2		;START WITH POINT, DON'T DO US

LSHRT4:	HLRZ A,1(E)		;ONE END POINT OF LINE
	JUMPE A,LSHRT2
	HRRZ D,1(E)		;OTHER END POINT
	PUSHJ P,LLCHK		;LINE TO LINE CHECK (DEAD SHORT)
LSHRT2:	HLRZ A,(E)		;GET A POINT
	JUMPE A,LSHRT3		;ANY?
	PUSHJ P,PLCHK		;POINT TO LINE CHECK
LSHRT3:	HRRZ E,(E)		;NEXT CELL
	JUMPN E,LSHRT4
LSHRT1:	HRRZ F,(F)		;RUN DOWN THE LIST
	JUMPN F,SHORT8
	HRRZ G,(G)		;NEXT Y CHAIN
	JUMPN G,SHORT9
SHORT3:	HRRZ H,(H)		;NEXT X CHAIN
	JUMPN H,SHORT2
SHORTE:	OUTSTR[ASCIZ/
/]
	SKIPN H,SRTLST		;NOW GIVE BACK LIST
	POPJ P,
SRTRET:	HRRZ G,1(H)
	JUMPE G,SRTRT1
SRTRT2:	HLRZ B,(G)
	PUSHJ P,PUTFS
	MOVE T,G
	HRRZ G,(G)
	FSTRET(T)
	JUMPN G,SRTRT2
SRTRT1:	MOVE T,H
	HRRZ H,(H)
	FSTRET(T)
	JUMPN H,SRTRET
	SETZM SRTLST
	POPJ P,

SIDPNT:	HLRZ T,(A)
	HRRZ T,1(T)
	MOVE T,1(T)
	TLNN T,FRONT
	JRST [	OUTSTR[ASCIZ/SOLDER SIDE/]
		POPJ P,]
	OUTSTR[ASCIZ/COMPONENT SIDE/]
	POPJ P,
;POINT TO POINT CHECK
PPCHK:	HLRZ T,(A)
	HRRZ T,1(T)
	MOVE T,1(T)
	AND T,[PLANES,,0]
	JUMPE T,NPLNPP		;ANY PLANE?
	HLRZ TT,(B)
	HRRZ TT,1(TT)
	XOR T,1(TT)
	TLNN T,PLANES		;DIFFERENT PLANES?
	POPJ P,			;NO, DOESN'T MATTER IF SHORTED!
NPLNPP:	HLRE T,1(A)
	HLRE TT,1(B)
	SUB T,TT		;DIF IN X
	IMUL T,T		;SQUARE IT
	HRRE TT,1(A)
	HRRE TTT,1(B)
	SUB TT,TTT		;DIF IN Y
	IMUL TT,TT		;SQUARE IT
	ADD T,TT		;THIS IS SQUARE OF DIST.
	JUMPE T,[SETO T,
		PUSH P,[PCOP]
		JRST SHRTMC]
	PUSHJ P,ADIS		;CALC A DISTANCE
	MOVE TTT,TT
	PUSHJ P,BDIS
	ADD TT,TTT		;ADD THIS STUFF TOGETHER
	ASH TT,-1		;HALF DIAMETERS
	ADD TT,MINSEP		;AND MIN SEPERATION
	IMUL TT,TT		;SQUARE IT
	CAMG TT,T		;SMALL ENOUGH BEFORE FIXING?
	POPJ P,			;YES
	IMULI T,=25
	ASH T,-2		;CONVERT TO MILS SQUARED
	CAMG TT,T		;TOO CLOSE?
	POPJ P,
	PUSH P,[PTOP]
;	JRST SHRTMK	;FALL INTO SHRTMK
;PUT ERRORS IN ERROR LIST
;MAKE SURE NOT ON SAME WIRE
;AND NOT ALREADY IN ERROR LIST
SHRTMK:	PUSH P,TT
	PUSHJ P,SQRT
	EXCH T,(P)
	PUSHJ P,SQRT
	POP P,TT
	SUB T,TT
SHRTML:	PUSH P,T		;SAVE DIST
	PUSH P,A
	PUSH P,B
	PUSH P,C
	MOVSI C,1
	SKIPE A,PONPNT
	PUSHJ P,CLRBTS		;FIRST NOTE THAT WE HAVE SEEN NO ONE
	SKIPE A,PONPN2
	PUSHJ P,CLRBTS		;ALSO THIS SIDE (IN CASE OF FEEDING THROUGH ETC.)
	POP P,C
	POP P,B
	POP P,A
	SETZM CPLAN1
	SETZM CPLAN2
	PUSHJ P,SHRTWR		;CHECK IF A & B ON SAME WIRE
	JRST [	POP P,(P)
		JRST SHRTMQ]	;ON SAME WIRE, NO ERROR
	SKIPN T,CPLAN1
	JRST SHRTXP		;NO PLANE CONNEX
	MOVEM T,CPLAN2		;SAVE THAT PLANE HERE
	SETZM CPLAN1		;CLEAR THIS
	EXCH A,B
	PUSHJ P,SHRTWR		;AND SEE IF THIS GUY ALSO TOUCHES THAT PLANE
	JRST [	POP P,(P)
		JRST SHRTMQ]	;SAME PLANE CONNEX, NO ERROR
	EXCH A,B		;PUT THESE BACK
SHRTXP:	POP P,T
SHRTMC:	SKIPN TT,SHRTER		;CHECK FOR REDUNDANCY
	JRST SHRTMM
SHRTMN:	HLRZ TTT,(TT)
	CAMN A,1(TT)
	CAME B,1(TTT)
	JRST SHRTMP
SHRTMQ:	POP P,(P)
	POPJ P,			;REDUNDENT, FLUSH IT

SHRTMP:	CAMN B,1(TT)
	CAME A,1(TTT)
	JRST SHRTMO
	JRST SHRTMQ

SHRTMO:	HRRZ TT,(TT)
	JUMPN TT,SHRTMN
SHRTMM:	POP P,TT
	AOS (TT)		;COUNT IT
	GETFS(TT)		;STORE EVERYONE INTO ERROR LIST
	GETFS(TTT)
	HRLM TTT,(TT)
	MOVEM A,1(TT)
	MOVEM B,1(TTT)
	HRRZ A,A		;CLEAR CRUFT OUT OF LEFT HALF
	HRRZ B,B		;	"
	MOVEM T,(TTT)		;SAVE AMOUNT WE LOST BY HERE ALSO
	EXCH TT,SHRTER
	HRRM TT,@SHRTER
	POPJ P,

;NOW SEE IF A & B ARE ON SAME WIRE?
SHRTWR:	HRRZ T,A
	CAIN T,(B)		;ON SAME WIRE YET?
	POPJ P,			;YES
	HLRZ TTT,(A)
	HRRZ TT,1(TTT)
	HLL TT,1(TT)
	TLOE TT,1
	JRST CPOPJ1		;TERMINATE IF DONE ALREADY
	HLLM TT,1(TT)
	SKIPE CPLAN1
	JRST SHRTNP
	MOVSI T,PLANES
	AND T,TT		;EXTRACT PLANE CONNEX
	JUMPE T,SHRTNP		;SKIP IF NONE
	MOVEM T,CPLAN1
	CAMN T,CPLAN2		;SAME AS OTHER GUYS?
	POPJ P,			;YES, NO SHORT
SHRTNP:	PUSH P,A		;SAVE A
	HLRZ A,(TTT)
	TLNN TT,FEEDTH		;FEED THROUGH?
	JRST SHRTWS
	PUSHJ P,SHRTWR
	JRST SHRTL0		;FOUND HIM
	JRST SHRTWW

SHRTWS:	TLNN TT,ISPIN		;HOW ABOUT BEING A DIP PIN?
	JRST SHRTWW		;NO
	HRR TT,(TT)		;GET PIN TYPE POINTER (SAVE TYPE BITS)
	HRRZ A,(P)
	HLRZ A,(A)
	HLRZ A,(A)		;GET BODY POINTER
	JRST SHRTPB

SHRTPA:	HLRZ T,(A)
	HRRZ T,1(T)
	HRRZ TTT,(T)
	CAIE TTT,(TT)		;SAME TYPE POINTER?
	JRST SHRTPB
	MOVE TTT,1(T)
	EQV TTT,TT
	JUMPGE TTT,SHRTPC	;BITS ARE DIFFERENT IF THIS IS OTHER SIDE
SHRTPB:	HLRZ A,(A)
	HRRZ A,(A)
	JUMPN A,SHRTPA
	PUSHJ P,FUCKUP
	JRST SHRTWW		;OH WELL

SHRTPC:	PUSHJ P,SHRTWR		;CALL RECURSIVELY ON OTHER SIDE
	JRST SHRTL0		;WIN, WE FOUND HIM
SHRTWW:	HRRZ T,(P)
	HLRZ T,(T)
	HLRZ T,1(T)
	JUMPE T,SHRTL1		;NO LINES
SHRTWT:	MOVEI TT,2
SHRTWV:	XCT (TT)[HLRZ A,(T)
		HRRZ A,1(T)
		HLRZ A,1(T)]
	JUMPE A,SHRTWU
	HRL T,TT
	PUSH P,T
	PUSHJ P,SHRTWR
	JRST [	POP P,(P)
		JRST SHRTL0]	;FOUND HIM
	POP P,T
	HLRZ TT,T
SHRTWU:	SOJGE TT,SHRTWV
	HRRZ T,(T)
	JUMPN T,SHRTWT
SHRTL1:	AOS -1(P)
SHRTL0:	POP P,A
	POPJ P,
;POINT TO LINE CHECK, USES SAME ROUTINE AS CURSOR
PLCHK:	CAME A,B		;SKIP IT IF EITHER END POINT THE SAME
	CAMN A,C
	POPJ P,
	MOVE T,1(C)
	MOVE TT,1(B)
	CAME T,1(A)
	CAMN TT,1(A)		;IF COINCEDENT WITH EITHER END, LET PTOP CATCH IT
	POPJ P,
	XOR T,TT
	TLNN T,-1
	JRST [	HRRE T,1(A)		;LINE IS VERT
		HRRE TT,1(B)
		HRRE TTT,1(C)
		CAMG TT,TTT
		JRST [	CAML T,TT	;BELOW BOTTOM?
			CAMLE T,TTT	;ABOVE TOP?
			POPJ P,		;YES, GIVE UP
			JRST GOTLD1]
		CAML T,TTT		;BELOW BOTTOM?
		CAMLE T,TT		;OR ABOVE TOP?
		POPJ P,			;YES, GIVE UP
	GOTLD1:	HLRE T,1(C)		;POINT X
		HLRE TT,1(A)		;LINE X
		JRST GOTLD3]
	TRNN T,-1
	JRST [	HLRE T,1(A)		;LINE IS HORZ
		HLRE TT,1(B)
		HLRE TTT,1(C)
		CAMG TT,TTT
		JRST [	CAML T,TT	;BELOW BOTTOM?
			CAMLE T,TTT	;OR ABOVE TOP?
			POPJ P,		;YES, GIVE UP
			JRST GOTLD2]
		CAML T,TTT		;BELOW BOTTOM?
		CAMLE T,TT		;OR ABOVE TOP?
		POPJ P,			;YES, GIVE UP
	GOTLD2:	HRRE T,1(C)		;POINT Y
		HRRE TT,1(A)		;LINE Y
	GOTLD3:	SUB T,TT		;DIF
		IMUL T,T		;SQUARE
		IMULI T,=25
		ASH T,-2
		JRST GOTLD]
	PUSH P,E
	MOVE E,C
	HLRE T,1(A)
	MOVEM T,DX1
	HRRE T,1(A)
	PUSHJ P,CALINE		;CALC DIST TO LINE
	JRST [	POP P,E		;LOSE IF OFF END
		POPJ P,]
	POP P,E
	ASHC TT,4		;PRESERVE SOME SIGNIFICANCE
	DIV TT,L2
	IMULI TT,=25
	ASH TT,-2-4		;NOW REMOVE SIGNIFICANCE
	MOVM T,TT		;THIS IS SQUARE OF DIST
GOTLD:	PUSHJ P,ADIS
	ADD TT,LINWID
	ASH TT,-1		;HALF DIAMETERS
	ADD TT,MINSEP
	IMUL TT,TT
	CAMG TT,T		;SMALL ENOUGH?
	POPJ P,			;YES
	HRL B,C			;SET THIS UP
	PUSH P,[PTOL]
	JRST SHRTMK		;AND LET THIS GUY DO THE REST

BDIS:	HLRZ TT,(B)
	CAIA
ADIS:	HLRZ TT,(A)
	HRRZ TT,1(TT)
	MOVE TT,1(TT)
	TDNN TT,[FEEDTH!CPIN,,-1]	;PAD OR FEEDTHROUGH?
	JRST [	MOVE TT,LINWID	;NO, USE LINE WIDTH
		POPJ P,]
	TLNE TT,CPIN	;CONNECTOR SQUARE?
	JRST [	MOVE TT,CPNDIA
		POPJ P,]
	TRNE TT,-1	;ANY PAD TYPE?
	JRST GPADIA
	MOVE TT,FEDDIA
	POPJ P,

GPADIA:	HRRZ TT,TT
	CAILE TT,MAXPAD	;TOO BIG?
	JRST [	MOVEI TT,=1000		;AN INCH SHOULD BE ENOUGH
		POPJ P,]		;DON'T SAY ANYTHING, ELSE WE WILL SAY TOO MUCH
	SKIPE FEDDIA(TT)
	JRST [	MOVE TT,FEDDIA(TT)
		POPJ P,]
	PUSH P,T
	PUSH P,TT
	PUSH P,C
	OUTSTR[ASCIZ/NO DIAMETER IN TABLE FOR PAD TYPE /]
	MOVE T,TT
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/.
/]
DILOSE:	OUTSTR[ASCIZ/PLEASE TELL ME THE DIAMETER IN MILS?/]
	PUSHJ P,READN
	CAIN C,ALTMOD
	JRST DILOSE
	CAIE C,12
	JRST [	PUSHJ P,SCARF	;HE'S JUST GOT TO TELL US!!!!
		JRST DILOSE]
	JUMPE T,DILOSE
	POP P,C
	POP P,TT
	MOVEM T,FEDDIA(TT)
	MOVE TT,T
	POP P,T
	POPJ P,
;CHECK IF 2 LINES CROSS
;A & D ARE ENDS OF ONE LINE
;B & C ARE ENDS OF THE OTHER LINE
;USES CROSS PRODUCT TO CALC WHICH SIDE OF A LINE A POINT IS ON
;ASSUMPTION IS, "IF ENDPOINTS OF ONE LINE ARE ON OPPOSITE SIDES
;OF THE OTHER, AND VICE VERSA, THEN THERE IS A DEAD SHORT".
LLCHK:	CAME A,B
	CAMN A,C
	POPJ P,			;NOT TO OURSELVES
	CAME D,B
	CAMN D,C
	POPJ P,
	HLRE T,1(A)
	HLRE TT,1(D)
	CAML T,TT
	EXCH T,TT
	HLRE TTT,1(B)
	CAMG TTT,T
	JRST XCHK1
	CAMG TTT,TT
	JRST YCHK
	HLRE TTT,1(C)
	CAML TTT,TT
	POPJ P,			;VERT SEPERATOR
	JRST YCHK

XCHK1:	HLRE TTT,1(C)
	CAMG TTT,T
	POPJ P,			;VERT SEPERATOR
YCHK:	HRRE T,1(A)
	HRRE TT,1(D)
	CAML T,TT
	EXCH T,TT
	HRRE TTT,1(B)
	CAMG TTT,T
	JRST YCHK1
	CAMG TTT,TT
	JRST DOCROSS
	HRRE TTT,1(C)
	CAML TTT,TT
	POPJ P,			;VERT SEPERATOR
	JRST DOCROSS

YCHK1:	HRRE TTT,1(C)
	CAMG TTT,T
	POPJ P,			;VERT SEPERATOR
DOCROSS:
;MUST DO CROSS PRODUCT, BUT NOW NO SOMETHING ABOUT COLINEAR LINES
	HLRE T,1(B)
	HLRE TT,1(A)
	SUBM T,TT
	MOVEM TT,DX1
	HLRE TT,1(C)
	SUBM T,TT
	MOVEM TT,DX2
	HLRE TT,1(D)
	SUBM T,TT
	MOVEM TT,DX3
	HRRE T,1(B)
	HRRE TT,1(A)
	SUBM T,TT
	MOVEM TT,DY1
	HRRE TT,1(C)
	SUBM T,TT
	MOVEM TT,DY2
	HRRE TT,1(D)
	SUBM T,TT
	MOVEM TT,DY3
;	MOVE TT,DY3
	IMUL TT,DX2
	MOVE T,DX3
	IMUL T,DY2
	SUB T,TT
	JUMPE T,CPOPJ		;IF 0 THEN ON LINE, IF SHORTED, WILL BE CAUGHT BY POINT TO LINE CHECKER
	MOVE TT,DX1
	IMUL TT,DY2
	MOVE TTT,DX2
	IMUL TTT,DY1
	SUB TT,TTT
	JUMPE TT,CPOPJ		;WILL BE CAUGHT BY POINT TO LINE CHECKER
	EQV TT,T
	JUMPL TT,CPOPJ		;NOW IF SAME SIGN, THEN BOTH ON SAME SIDE OF LINE
	HLRE T,1(D)
	HLRE TT,1(A)
	SUBM T,TT
	MOVEM TT,DX2
	HLRE TT,1(C)
	SUBM T,TT
	MOVEM TT,DX1
	HRRE T,1(D)
	HRRE TT,1(A)
	SUBM T,TT
	MOVEM TT,DY2
	HRRE TT,1(C)
	SUBM T,TT
	MOVEM TT,DY1
;	MOVE TT,DY1
	IMUL TT,DX2
	MOVE T,DX1
	IMUL T,DY2
	SUB T,TT
	JUMPE T,CPOPJ		;IF THIS CROSS PRODUCT IS 0, THEN ONLY ONE END ON LINE
	MOVE TT,DX2
	IMUL TT,DY3
	MOVE TTT,DX3
	IMUL TTT,DY2
	SUB TT,TTT
	JUMPE TT,CPOPJ		;AND WILL BE CAUGHT BY LINE TO LINE CHECKER
	EQV TT,T
	JUMPL TT,CPOPJ		;IF SAME SIGN, THEN BOTH ON SAME SIDE
ISONLS:	SETZ T,			;LOSE BY!
	HRL A,D
	HRL B,C
	PUSH P,[LTOL]
	JRST SHRTML		;THIS WILL STORE INTO ERROR LIST
;SORT SUBR
SSORT:	SETZM SRTLST		;CLEAR LIST 
	MOVEI H,SRTLST		;FIRST PASS GOES INTO SRTLST
XSORT1:	TRZ TFLG		;NO LINES SEEN YET
	HLRZ C,(A)
	HLRZ C,1(C)
	JUMPE C,XSORTE		;TRY ANOTHER?
XSORT2:	MOVEI D,2
XSORT3:	XCT (D)[HLRZ B,(C)
		HLRZ B,1(C)
		HRRZ B,1(C)]
	JUMPE B,XSORT4
	TRO TFLG		;FLAG LINE HERE
	MOVE T,1(A)
	CAML T,1(B)		;ONLY DO SEGMENT ONCE
	JRST XSORT4
	HLRE T,1(A)		;BY X VALUE
	HLRE TT,1(B)
	PUSHJ P,ILSORT		;SORT LINE INTO LIST
XSORT4:	SOJGE D,XSORT3
	HRRZ C,(C)
	JUMPN C,XSORT2
XSORTE:	HLRZ TT,(A)
	HRRZ TT,1(TT)
	MOVE TT,1(TT)		;PADTYPE
	HLRE T,1(A)		;BY X VALUE
	TRNN TFLG		;LINES SEEN?
	TDNE TT,[FEEDTH!CPIN,,-1]	;NO, PAD HERE, OR FEED THROUGH OR CPIN?
	PUSHJ P,IPSORT		;SORT POINT INTO LIST
	HRRZ A,(A)		;TRY ANOTHER
	JUMPN A,XSORT1
	SKIPN H,SRTLST
	POPJ P,			;NOTHING???
YSORT1:	ADDI H,1		;POINT TO PLACE TO BUILD LIST
	SETZM (H)		;CLEAR IT OUT FOR NOW
	HLRZ G,-1(H)		;PICKUP X CHAIN POINTER
	JRST YSORT2

YSORT3:	HLRZ A,(G)		;GET POINT FROM HERE
	JUMPE A,YSORT4
	HRRE T,1(A)		;BY Y VALUE
	PUSHJ P,IPSORT		;SORT INTO H LIST BY Y VALUE
YSORT4:	HLRZ A,1(G)		;NOW LINE
	JUMPE A,YSORT5
	HRRZ B,1(G)
	HRRE T,1(A)
	HRRE TT,1(A)
	CAMG T,TT		;AB?
	JRST YSORT6		;YES
	EXCH T,TT
	EXCH A,B		;INTERCHANGE
YSORT6:	PUSHJ P,ILSORT		;SORT LINE IN BY Y
YSORT5:	MOVE T,G
	HRRZ G,(G)
	FSTRET(T)
YSORT2:	JUMPN G,YSORT3
	HRRZS H,-1(H)		;CLEAR OUT OLD X CHAIN POINTER AND PICKUP NEXT
	JUMPN H,YSORT1		;NEXT X CHAIN
	POPJ P,			;FINI

;INSERT POINT INTO PROPER CHAIN ACCORDING
;TO X OR Y VALUE IN T
IPSORT:	ASHC T,@STRIPE		;CONVERT TO STRIPE # AND REMAINDER
	HLLM TT,(P)		;SAVE REMAINDER
	PUSHJ P,IPSRTP		;NOW SORT INTO BUCKET BY VALUE IN T
	HLLZ TT,(P)
	TDNE TT,OVERLAP		;NEED OVERLAP?
	POPJ P,			;NOT IN OVERLAP REGION
	SOJA T,IPSRTP		;IN OVERLAP REGION, SORT INTO THIS BUCKET TOO

;CALL WITH BUCKET VALUE IN T
;STORES PIN POINTER A INTO CHAIN WITH VALUE
IPSRTP:	PUSHJ P,IPSRTA		;FIND CORRECT BUCKET (RETURNS IN E)
	HLRZ E,(E)
IPSRTQ:	HLRZ TT,(E)
	JUMPE TT,[HRLM A,(E)	;STO PIN POINTER
		POPJ P,]	;AND RETURN
	MOVE F,E
	HRRZ E,(E)
	JUMPN E,IPSRTQ
	GETFS(E)
	HRRM E,(F)
	HRLZM A,(E)
	SETZM 1(E)		;CLEAR LINE BUCKET
	POPJ P,

;INSERT LINE INTO ALL CHAINS IT CROSSES
;A & B ARE ENDPOINTS T & TT ARE SORT VALUES
;T IS ALREADY DETERMINED TO BE LESS THAN TT
ILSORT:	ASHC TT,@STRIPE
	PUSH P,TT		;THIS IS ENDING STRIPE, SAVE IT
	ASHC T,@STRIPE		;THIS IS STARTING VALUE
	TDNN TT,OVERLAP		;NEED OVERLAP?
	SUBI T,1		;YES BACKUP 1 STRIPE
ILSRT1:	PUSHJ P,ILSRTL		;SORT IN ONCE
	ADDI T,1
	CAMG T,(P)
	JRST ILSRT1		;CONTINUE
	POP P,(P)
	POPJ P,			;DONE

;CALL WITH BUCKET VALUE IN T
;STORES A & B IN LINE BUCKET WITHIN CHAIN WITH VALUE
ILSRTL:	PUSHJ P,IPSRTA		;FIND PROPER CHAIN
	HLRZ E,(E)
ILSRTM:	SKIPN 1(E)
	JRST [	MOVEM B,1(E)	;FOUND A SPOT, STORE LINE POINTERS
		HRLM A,1(E)
		POPJ P,]
	MOVE F,E
	HRRZ E,(E)
	JUMPN E,ILSRTM
	GETFS(E)		;END OF LIST, MAKE A NEW CELL
	HRRM E,(F)
	SETZM (E)
	MOVEM B,1(E)		;NOW STORE LINE POINTERS
	HRLM A,1(E)
	POPJ P,

;CALL WITH BUCKET VALUE IN T
;RETURNS WITH BUCKET POINTER IN E
IPSRTA:	MOVE E,H		;SET TT TO LIST HEADER
	JRST IPSRTB

IPSRTC:	CAMG T,1(E)		;GOT TO RIGHT BUCKET YET?
	JRST [	CAMN T,1(E)
		POPJ P,		;RETURN TO SENDER
		JRST IPSRTD]	;YES
IPSRTB:	MOVE F,E
	HRRZ E,(E)
	JUMPN E,IPSRTC
IPSRTD:	GETFS(E)
	HRRZ TT,(F)
	HRRM TT,(E)
	HRRM E,(F)
	MOVEM T,1(E)		;SET VALUE
	GETFS(TT)
	HRLM TT,(E)		;STO CHAIN POINTER
	SETZM (TT)		;CLEAR POINT AND LINK
	SETZM 1(TT)		;CLEAR LINE BUCKET
	POPJ P,			;RETURN TO SENDER
;SHOW AN ERROR
SHWERR:	SKIPN A,SHRTER
	JRST PERRET		;NOTHING LEFT IN LIST
	PUSHJ P,MMSET		;SETUP PARAMETERS
	TRZ TFLG		;NOTE NO ONE OFF SCREEN YET
	HLRZ B,(A)		;SECONDARY BLOCK POINTER
	HLRZ T,1(A)
	PUSHJ P,MMCK
	HRRZ T,1(A)
	PUSHJ P,MMCK
	HLRZ T,1(B)
	PUSHJ P,MMCK
	HRRE T,1(B)
	PUSHJ P,MMCK
	MOVE T,1(A)
	MOVEM T,SERR1
	MOVE TT,1(B)
	MOVEM TT,SERR2
	TLNE T,-1		;LINE TO LINE?
	JRST [	OUTSTR[ASCIZ/LINE TO LINE DEAD SHORT!
/]
		JRST DOCNTS]	;AND THEY'RE OFF
	TLNE TT,-1		;POINT TO LINT?
	JRST [	OUTSTR[ASCIZ/POINT TO LINE, LOSE BY /]
		JRST DOLOSE]
	SKIPGE (B)
	JRST [	OUTSTR[ASCIZ/COINCIDENT POINTS
/]
		JRST DOCNTS]
	OUTSTR[ASCIZ/POINT TO POINT, LOSE BY /]
DOLOSE:	MOVE T,(B)
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ MILS
/]
DOCNTS:	HRRZ C,(A)
	MOVEM C,SHRTER		;TAKE THIS ONE OUT OF LIST
	JUMPN C,.+2		;ANY MORE?
	OUTSTR[ASCIZ/NO MORE ERRORS!
/]
	HRRZ C,1(A)
	FSTRET(A)
	FSTRET(B)
	HLRZ T,(C)
	HRRZ T,1(T)
	MOVE T,1(T)
	EQV T,SID
	JUMPL T,DOCNTQ		;ON RIGHT SIDE ALREADY?
	SWITCH			;NO, CHANGE SIDES
	JRST DOCNTR		;SINCE CHANGING SIDES, MIGHT AS WELL DO THIS

DOCNTQ:	TRO MCHG		;MUST GET ERROR DISPLAY OUT!
	MOVE T,NSCALE
	TRNN TFLG		;ANYONE OFF SCREEN?
	CAIGE T,=16		;IF SMALLER THAN THIS, CHECK ANYWAY
DOCNTR:	PUSHJ P,DOCENT		;OK NOW DO THE CENTER THING
	HRRZ T,SERR1
	JUMPE T,CPOPJ
	MOVE T,1(T)		;IF THERE IS A POINT FOR O__1
	TRZE INMOV!INLIN	;MAKE SURE WE DON'T MOVE SOMETHING THERE
	TRO NEEDCL
	JRST SETPOS		;THEN PUT CURSOR THERE

MMCK:	JUMPE T,CPOPJ
	MOVE T,1(T)
	PUSHJ P,ONSCR
	TRO TFLG		;NOTE SOMEONE OFF SCREEN
	JRST MINMAX

CSHORT:	SETZM SERR1
	SETZM SERR2
	TRO MCHG
	POPJ P,

SHRTDP:	MOVE A,SERR1
	TRNE BTHSDS		;IN BOTH SIDES MODE?
	JRST ALSHRT
	HLRZ T,(A)		;THIS POINTER IS ALWAYS HERE
	HRRZ T,1(T)
	MOVE T,1(T)
	EQV T,SID		;ON THIS SIDE?
	JUMPGE T,CPOPJ		;NO
	SKIPA T,DEFBRT
ALSHRT:	MOVE T,BTHBRT
	ADD T,BLBRT
	PUSHJ P,DPYBRT
	SETZ C,
	PUSHJ P,SHRTD1
	MOVE A,SERR2
	MOVEI C,1
	PUSHJ P,SHRTD1
	JRST BLINKO

SHRTD1:	MOVE T,1(A)
	TLNN A,-1
	JRST SHRTD2
	PUSHJ P,AIVECT
	HLRZ T,A
	MOVE T,1(T)
	PUSHJ P,AVECT
	MOVE T,1(A)
SHRTD2:	PUSHJ P,BIGAIV
	MOVE T,(C)[ASCID/O__1/
		   ASCID/O__2/	]
	PUSHJ P,TXTDPB
	HLRZ A,A
	JUMPE A,CPOPJ
	MOVE T,1(A)
	PUSHJ P,BIGAIV
	MOVE T,(C)[ASCID/O__4/
		   ASCID/O__3/	]
	JRST TXTDPB
;SHORT
;MPC
