;OUTPUT MODE LOOP!
OUTERR:	PUSHJ P,IERR
OUTSET:
NODEC,<	OUTSTR[ASCIZ/MODE(S)?/]	>
DEC,<	OUTSTR[ASCIZ/MODE(S)? H<CR> FOR HELP./]	>
	MOVE FLAG,[DEFBIT]	;SETUP DEFAULTS
NOSPLIT,<MD,<SETZM FROTIT>>
	SETZM SCALE1
OUTST1:	PUSHJ P,GETCHL
OUTSTC:	MOVSI TT,-OUTLEN
OUTST2:	CAME T,OUTTB1(TT)
	AOBJN TT,.-1
	JUMPGE TT,OUTSCL
	XCT OUTTB2(TT)
	JRST OUTST1

OUTSCL:	CAIL T,"1"
	CAILE T,"9"
	JRST OUTERR
	SKIPE SCALE1
	JRST OUTERR
	SETZ TT,
OUTSC1:	ADDI TT,-60(T)
	PUSHJ P,GETCHL
	CAIL T,"0"
	CAILE T,"9"
	JRST OUTSC2
	IMULI TT,=10
	JRST OUTSC1

OUTSC2:	MOVEM TT,SCALE1
	JRST OUTSTC

LSTOPT:	MOVSI TT,-OUTLEN
	OUTSTR @OUTTB3(TT)
	AOBJN TT,.-1
	PUSHJ P,GETCHL
	CAIE T,175
	CAIN T,12
	JRST OUTSET
	JRST .-4

OUTEND:
MXGP,<	TRNN FLAG,XGP		;IF NOT XGP'ING
CMU,<	TRZ FLAG,XGPGO >	;CAN'T GO TO X
NOCMU,<	TRZA FLAG,XGPGO
	JRST [	TRNN FLAG,XGPGO
		JRST .+1
		MOVEI TT,-1	;SEE HOW MUCH CORE IS AVAILABLE
		CORE TT,
		CAIL TT,=110
		JRST .+1
		OUTSTR [ASCIZ /PROBABLY NOT ENOUGH CORE FOR X, GO ON?/]
		INCHRW TT
		OUTSTR [ASCIZ /
/]
		ANDI TT,177
		CAIE TT,"Y"
		CAIN TT,"y"
		JRST .+1
		JRST STRT]
>;NOCMU
>;MXGP
MPC,<	TRNN FLAG,DOMAG
	TRZ FLAG,ADDSYM		;ONLY LEGAL FOR TRW OUTPUT
>;MPC
NOSPLIT,<
NODEC,<	TRNE FLAG,RSTENB
	TRNN FLAG,MPC,<DOMAG!DOTAPE!>MXGP,<XGP!>FR80!IREAD	;THIS IO WOULD GET BLOWN
>;NODEC
>;NOSPLIT
	POPJ P,
NOSPLIT,<
NODEC,<	OUTSTR[ASCIZ/SORRY, SAVING CAN'T BE DONE UNDER THOSE MODES!
/]
	JRST OUTSET
>;NODEC
>;NOSPLIT

DEFINE OUTCOM
<	OUTMAC	12,<JRST OUTEND>,<CHAR	EFFECT>
NODEC,<	OUTMAC	"?",<JRST LSTOPT>,<?	TYPE THIS LIST
1-9	SET SCALE FACTOR>
>;NODEC
DEC,<	OUTMAC	"H",<JRST LSTOPT>,<H	TYPE THIS LIST
1-9	SET SCALE FACTOR>
>;DEC
	OUTMAC	"Q",<TLO FLAG,QUICK>,<Q	QUICK (ABBREVIATE PROMPTS).>
MD,<	OUTMAC	"N",<TLZ FLAG,SIMBOX>,<N	RELEASE TYPE LABEL BOX>>
MPC,<	OUTMAC	"N",<TLO FLAG,TFLUSH>,<N	FLUSH ANY TEXT FROM INPUT FILE>>
DEC,<	OUTMAC	"K",<TLO FLAG,NODEL>,<K	KEEP FILE AFTER PLOT, NO DELETE>>
SPL,<	OUTMAC	"D",<TLO FLAG,SKPSPL>,<D	DON'T SPOOL OUTPUT (WRITE ON CURRENT P,PN INSTEAD)>>
NODEC,<	OUTMAC	"Z",<TLZ FLAG,NODEL>,<Z	DELETE FILE AFTER PLOT>>
NOSPLIT,<OUTMAC	"C",<TRO FLAG,%DOPLT>,<C	PLOTTER OUTPUT>>
	OUTMAC	"F",<TRO FLAG,FR80>,<F	FR80 OUTPUT>
MXGP,<	OUTMAC	"X",<TRO FLAG,%DOPLT!XGP>,<X	XGP OUTPUT>
	OUTMAC	"G",<TRO FLAG,XGPGO!%DOPLT!XGP>,<G	RUN X PROG AUTOMATICALLY>
NOCMU,<	OUTMAC  "W",<TRO FLAG,XGPSPL!XGPGO!%DOPLT!XGP>,<W	SPOOL X OUTPUT, "R XS" WHEN ALL DONE>>
CMU,<	OUTMAC  "U",<TRO FLAG,XGPSPL!XGPGO!%DOPLT!XGP>,<U	PRODUCE UNCOMPACTED XGP FILES>>
	OUTMAC	"E",<SETOM %XTHICK>,<E	EXTRA THICK LINES (WORKS BEST ON XGP)>
>;MXGP
MD,<	OUTMAC	"P",<TRO FLAG,PRODUCE>,<P	PRODUCTION RUN>>
CMU,<
MD,<	OUTMAC	"V",<TRO FLAG,VERTICAL>,<V	USE VERTICAL BOXES OF SCALE 1>>
>;CMU
NOSPLIT,<
NODEC,<	OUTMAC	"S",<TRO FLAG,RSTENB>,<S	ENABLE RESTART CAPABILITY>>
MD,<	OUTMAC	"M",<TRO FLAG,REPOS>,<M	MOVE PEN TO TOP AT END>
	OUTMAC	"R",<SETOM FROTIT>,<R	ROTATE PLOT>
>;MD
>;NOSPLIT
MPC,<
NOSPLIT,<OUTMAC	"R",<SETOM %ROTIT>,<R	ROTATE PLOTTER OUTPUT>>
	OUTMAC	"T",<TRO FLAG,DOMAG>,<T	GERBER OUTPUT>
GERB,<	OUTMAC	"G",<TLO FLAG,GROTIT>,<G	ROTATE GERBER OUTPUT>>
	OUTMAC	"M",<TRO FLAG,MAPIT>,<M	MAP RETICLES>
	OUTMAC	"A",<TRO FLAG,ADDSYM>,<A	ADD SYMBOL DEFINITIONS>
	OUTMAC	"Y",<TRO FLAG,DOTAPE>,<Y	MAKE DRILL TAPE FIRST TIME THROUGH>
>;MPC
>

DEFINE OUTMAC(A,B,C)
<	A
>

OUTTB1:	OUTCOM
OUTLEN__.-OUTTB1

DEFINE OUTMAC(A,B,C)
<	B
>

OUTTB2:	OUTCOM

DEFINE OUTMAC(A,B,C)
<	[ASCIZ/C
/]
>

OUTTB3:	OUTCOM
;TOP LEVEL, CALL ALL THE SUBRS
R:	JRST @130		;RETURN FROM RAID

STRT:	MOVE P,[IOWD PDLLEN,PDL]
	RESET
	PUSHJ P,OUTSET		;SETUP OUTPUT MODES
TRYDSK:	INIT DAT,10
	SIXBIT/DSK/
	DATHD
	JRST [	OUTSTR[ASCIZ/CAN'T INIT DSK FOR FILE INPUT!
/]
		EXIT 1,
		JRST TRYDSK]
	MOVEI T,IBUF
	EXCH T,.JBFF
	INBUF DAT,2
	MOVEM T,.JBFF
NOSPLIT,<
DEC,<	TRNN FLAG,MPC,<DOMAG!>%DOPLT!FR80
	TRO FLAG,DODSK!%DOPLT
>;DEC
>;NOSPLIT
	TRNN FLAG,%DOPLT
	JRST XPTP
GETPTP:	TRNE FLAG,DSKOUT,<DODSK!>MXGP,<XGP!>0
	SKIPA T,['DSK   ']
	SETZ T,
	MOVEM T,THING1		;TELL THEM WHAT WE WANT
	JSA 16,PLOTS
	JUMP THING1
	SKIPE THING1
NODEC,<	JRST [OUTSTR [ASCIZ /PLOTTER NOT AVAIL.
/]
		EXIT 1,
		JRST GETPTP]
>;NODEC
DEC,<	JRST [	OUTSTR[ASCIZ/PLOTTER NOT AVAIL.
WAITING!
/]
		MOVEI -1
		SLEEP
		JRST GETPTP]
>;DEC
XPTP:
MPC,<	PUSHJ P,TRWSET			;TRW PLOT?	>
	PUSHJ P,FRSET			;FR80?
MPC,<
	PUSHJ P,GETSCL			;GET SCALE
	PUSHJ P,GETOFF			;AND OFFSET
>;MPC
NODEC,<
MD,<	PUSHJ P,ASKSIG			;ASK ABOUT SIG NOW!
>;MD
>;NODEC
PCLOOP:	AND FLAG,[PBITS]		;RETAIN PERMANENT BITS
	PUSHJ P,NAMSET			;GET DISK AND FILE NAME
MPC,<	PUSHJ P,CHRSCL	>
	PUSHJ P,MAIN		;READ FILE
MD,<
	HRRZS A		;A CONTAINS BOX SIZE*2
	LSH A,-1
	MOVEM A,PARG		;SAVE ARG FROM DRAWING PROG
>;MD
MPC,<	TRZE A,200000			;PC TELLING US IT IS INNER PLANE?
	TRO FLAG,PLANE			;YES
	TRZE A,400000			;FRONT OR BACK?
	TRO FLAG,FRONT
>;MPC
	SKIPN A,PVER			;IF NON-ZERO, WE ALREADY HAVE IT
	PUSHJ P,DATIN			;OLD VERSION, GET VERSION #
	CAILE A,MAXVER
	JRST [	MOVEI A,MAXVER
		OUTSTR[ASCIZ/VERSION # TOO LARGE, WILL USE LARGEST!
/]
		JRST .+1]
	MOVEM A,PVER			;THIS IS PVER
;**PVER
MPC,<	XCT (A)[PUSHJ P,DEFFLP		;NO FLIP FOR VERSIONS 0-2
		PUSHJ P,DEFFLP
		PUSHJ P,DEFFLP
		PUSHJ P,SETFLP		;READ FLIPPED WORD
		PUSHJ P,SETFLP
		PUSHJ P,FLPCNM]		;READ FLIPPED WORD AND CARD FILENAME
>;MPC
MD,<	PUSHJ P,TITCLR			;START BY CLEARING EVERYTHING
	MOVE A,PVER
	XCT (A)[JFCL			;NOTHING TO READ
		PUSHJ P,RTIT		;READ AND/OR CLEAR
		PUSHJ P,DOTITD		;  "  + DATE&TIME
		PUSHJ P,DOTITE		;  "  + FILNAM[P,PN] AND CRDLOC
		PUSHJ P,DOTITE		;  "  + FILNAM[P,PN] AND CRDLOC
		PUSHJ P,DOTMR		;  "  + FILNAM[P,PN] AND CRDLOC + MODULE + REV
		PUSHJ P,DOTMRP		;  "  + FILNAM[P,PN] AND CRDLOC + MODULE + REV + PROJECT + PAGE N OF M
		PUSHJ P,READSA		;ALL ABOVE + DRAWING CODE
		PUSHJ P,RDSITE		;ABOVE + SITE LINES
		PUSHJ P,RDSITE		;ABOVE + SITE LINES
		PUSHJ P,RDSIGS		;ABOVE + NEXTHI + SIGNATURES
		PUSHJ P,RDSIGS]		;ABOVE + NEXTHI + SIGNATURES
	PUSHJ P,PCORE	;PRINT CORE SIZE
	PUSHJ P,GETSCL		;GET SCALE AND BOX INFO
>;MD
	CLOSE DAT,		;LET GO OF FILE
MPC,<	PUSHJ P,PSIZE
	MOVEI C,4
CHRSCX:	SKIPL MTAB(C)
	JRST CHRSCY
	OUTSTR[ASCIZ/I FLUSHED SOME SCALE /]
	MOVE T,C
	PUSHJ P,DECOUT
	OUTSTR[ASCIZ/ TEXT!
/]
CHRSCY:	SOJGE C,CHRSCX
	SETOM LSTRET	;CLEAR LAST RETICLE
	PUSHJ P,PSETUP
>;MPC
	TRNE FLAG,FR80
	PUSHJ P,FRSET1	;INITIALIZE FR80 STUFF
NOSPLIT,<
NODEC,<	TRZ FLAG,RSTENB	;NO RESTART ENABLE YET>
	SETZM ROTIT
MXGP,<	SETZM XTHICK	>
>;NOSPLIT
	TRNN FLAG,%DOPLT
	JRST NOPTP
DSKOUT,<PUSHJ P,PLOCHK		;CHECK FOR PLO FILE>
MXGP,<	PUSHJ P,PLTCHK		;CHECK IF THIS IS REALLY A PLOTTER!>
NOSPLIT,<
MD,<	MOVE 1,START	;GET STARTING POS.
	JSA 16,SETXY	;SET PLOTTER THERE
>;MD
	SKIPE %ROTIT
	SETOM ROTIT	;TELL PLOTS
MXGP,<	SKIPE %XTHICK
	SETOM XTHICK	;TELL PLOTS
>;MXGP
>;NOSPLIT
NODEC,<
NOSPLIT,<
	TRNN FLAG,RSTENB
	JRST NOPTP
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/SAVE COUNT?/]
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/NUMBER OF LINES OR TEXT STRINGS
BETWEEN SAVES (0 DISABLES SAVING)?/]
	PUSHJ P,DECIN
	JRST [RSTERR:OUTSTR[ASCIZ/ILLEGAL NUMBER!
/]
		PUSHJ P,IERR
		JRST .-2]
	JUMPE TTT,RSTERR
	MOVEM TTT,RSTSET
	SETZM RSTCNT
	PJOB T,			;GET JOB NUMBER
	DPB T,[POINT 3,PSWAP+1,35]
	LSH T,-3
	DPB T,[POINT 3,PSWAP+1,29]
MD,<	MOVE T,RSTART	>
MPC,<	SETZ T,		>
	SKIPE %ROTIT
	ADD T,[<XWD =1250/5,0>-=1250/5]
	ADDI T,=1250/5
	TLZ T,1
	HRREM T,Y
	HLREM T,X
	JSA 16,PLOT
	JUMP X
	JUMP Y
	JUMP [2]
	MOVNI T,=250/5
	ADDM T,X
	SKIPE %ROTIT
	MOVN T,T
	ADDM T,Y
	JSA 16,PLOT
	JUMP X
	JUMP Y
	JUMP [3]
	SKIPE %ROTIT
	JRST [	MOVNI T,=500/5
		ADDM T,Y
		JRST WASY]
	MOVEI T,=500/5
	ADDM T,X
WASY:	JSA 16,PLOT
	JUMP X
	JUMP Y
	JUMP [2]
>;NOSPLIT
>;NODEC
NOPTP:
MD,<
SPLIT,<	PUSHJ P,LABEL	;LABEL THE PLOT	>
>;MD
	PUSHJ P,FSTINI
MPC,<	MOVSI T,400000		;RESET MAX/MIN CELLS FOR REAL LIMITS
	MOVEM T,LRGX
	MOVEM T,LRGY
	HRLOI T,377777
	MOVEM T,SMLX
	MOVEM T,SMLY
	TRNE FLAG,TRWDRL!DOTAPE	;TRW DRILL PLOT ONLY?
	JRST [	MOVSI T,4	;YES, START WITH DRILL HOLES
		MOVEM T,DOTXT
		JRST PLOP0]
	SKIPGE T,BIGPAD	;ANY PADS OR DRILL HOLES?
	JRST BEGTXT
	HRLI T,4	;PAD AND DRILL HOLE CODE
	MOVEM T,DOTXT
	TRNE FLAG,TRWDRL!DOTAPE!DOMAG
	JRST PLOP0
	OUTSTR[ASCIZ/SKIP PLOTTING OF ALL PADS?/]
	PUSHJ P,GETYES
	JRST PLOP0
BEGTXT:	SKIPE T,ANYTXT	;DOING TEXT?
	MOVSI T,2	;YES, TEXT CODE
	MOVEM T,DOTXT
>;MPC
PLOP0:	PUSHJ P,SORT	;SORT BY DOTXT
	JRST PLOP
;LABEL ROUTINE
SPLIT,<
LABEL:	TRNN FLAG,%DOPLT
	POPJ P,
	MOVE A,[POINT 7,LBUF]
	MOVE TT,[-1,,31]
	GETTAB TT,
	SETZ TT,
	PUSHJ P,SIXPUT
	MOVE TT,[-1,,32]
	GETTAB TT,
	SETZ TT,
	PUSHJ P,SIXPUT
	MOVEI TTT,40
	IDPB TTT,A
	IDPB TTT,A
	MOVE TT,SAVNAM
	PUSHJ P,SIXPUT
	MOVEI TTT,"."
	IDPB TTT,A
	HLLZ TT,DELEXT
	PUSHJ P,SIXPUT
	MOVEI TTT,"["
	IDPB TTT,A
	SKIPN TT,DELPPN
	DSKPPN TT,
	HLLZ TT,TT
	PUSHJ P,LSIXPUT
	MOVEI TTT,","
	IDPB TTT,A
	SKIPN TT,DELPPN
	DSKPPN TT,
	HRLZ TT,TT
	PUSHJ P,LSIXPUT
	MOVEI TTT,"]"
	IDPB TTT,A
	SETZ TTT,
	IDPB TTT,A
	JSA 16,PLOTID
	JUMP LBUF
	POPJ P,

LSIXPUT:
DEC,<	HLRZ T,TT
LSIXP1:	IDIVI T,10
	HRLM TT,(P)
	JUMPE T,.+2
	PUSHJ P,LSIXP1
	HLRZ TTT,(P)
	ADDI TTT,60
	IDPB TTT,A
	ADDI B,1
	POPJ P,
>;DEC
NODEC,<	TLNN TT,777700
	LSH TT,14
	TLNN TT,770000
	LSH TT,6
>;NODEC
SIXPUT:	JUMPE TT,CPOPJ
	SETZ T,
	LSHC T,6
	ADDI T,40
	IDPB T,A
	ADDI B,1
	JRST SIXPUT
>;SPLIT
;FILE INPUT SUBRS
MD,<
TITCLR:	SETZM CRDLOC
	SETZM AUTHOR
	SETZM SITE1
	SETZM SITE2
	SETZM TITL1
	SETZM TITL2
	SETZM MODULE
	SETZM REV
	SETZM TPROJ
	SETZM TPAGE
	SETZM TOF
	SETZM TDCODE
DEC,<	SETZM DRNNAM
	SETZM CHKNAM
	SETZM ENGNAM
	SETZM TNXTHI
>;DEC
DATDEF:	DATE A,
	HRLZM A,DRWDAT
	MSTIME A,
	IDIVI A,=1000*=60	;GET MINUTES
	HRRM A,DRWDAT
	POPJ P,

DOTITD:	PUSHJ P,RTIT
	PUSHJ P,DATIN
	MOVEM A,DRWDAT		;READ DATE OF DRW FILE
	MOVE A,PVER
	CAIL A,13		;**PVER OLDER VERSIONS HAVE DIFFERENT DATE/TIME FORMAT
	POPJ P,
	LDB A,[POINT 11,DRWDAT,23]
	HRL A,DRWDAT
	TLZ A,770000		;MASK JUST DATE
	MOVEM A,DRWDAT
	POPJ P,

DOTITE:	PUSHJ P,DOTITD
	PUSHJ P,DATIN
	MOVEM A,BOXNAM
	PUSHJ P,DATIN
	MOVEM A,BOXPPN
	MOVEI B,CRDLOC		;WHERE TO PUT STRING
	MOVE A,PVER
	CAIL A,11		;**PVER VERSION 11 AND HIGHER HAVE STRING
	JRST BRSTR		;READ IT
	PUSHJ P,DATIN
;	MOVEM A,BOXLOC
	JUMPE A,CPOPJ
	OUTSTR[ASCIZ/CARD LOC FROM OLD VERSION PLOT FILE WILL NOT BE PRINTED.
/]
	POPJ P,

DOTMR:	PUSHJ P,DOTITE		;READ OLDER STUFF
	MOVEI B,REV
	PUSHJ P,BRSTR
	MOVEI B,MODULE
	JRST BRSTR

RDSIGS:	PUSHJ P,RDSITE
DEC,<
	MOVEI B,TNXTHI
	PUSHJ P,BRSTR
FOR @$I IN(DRN,CHK,ENG)
<	PUSHJ P,DATIN
	MOVEM A,I$NAM
	JUMPE A,NOS$I
	PUSHJ P,DATIN
	MOVEM A,I$NAM+1
	PUSHJ P,DATIN
	MOVEM A,I$NAM+2
NOS$I:
>
>;DEC
	POPJ P,

RDSITE:	PUSHJ P,READSA
	MOVEI B,SITE1
	PUSHJ P,BRSTR
	MOVEI B,SITE2
	JRST BRSTR

READSA:	PUSHJ P,DOTMRP
	MOVEI B,TDCODE
	JRST BRSTR

DOTMRP:	PUSHJ P,DOTMR
	MOVEI B,TPROJ
	PUSHJ P,BRSTR
	MOVEI B,TPAGE
	PUSHJ P,BRSTR
	MOVEI B,TOF
	JRST BRSTR

RTIT:	MOVEI B,AUTHOR
	PUSHJ P,BRSTR
	MOVEI B,TITL1
	PUSHJ P,BRSTR
	MOVEI B,TITL2
BRSTR:	MOVEI C,1(B)
BRSTR1:	PUSHJ P,DATIN
	CAIN C,STRMAX-1(B)	;ABOUT TO STORE END OF BUFFER?
	JRST BRSTR2
	MOVEM A,(C)
	TRNE A,376
	AOJA C,BRSTR1
BRSTR4:	SUBI C,1(B)
	IMULI C,5		;CONVERT TO CHARS
	CAIA
	LSH A,7			;SHIFT OUT A CHAR
	TLNE A,774000		;ANY MORE?
	AOJA C,.-2		;YES, COUNT AND LOOP
	MOVEM C,(B)
	POPJ P,

BRSTR2:	TRZ A,377		;END OF BUFFER, MAKE SURE OF A NULL
	MOVEM A,(C)
	PUSH P,A
BRSTR3:	PUSHJ P,DATIN
	TRNE A,376
	JRST BRSTR3
	POP P,A
	JRST BRSTR4
>;MD
;READ A WORD FROM FILE
DATIN:	SOSG DATHD+2
	IN DAT,
	CAIA
	JRST [	STATZ DAT,1B22
		OUTSTR[ASCIZ/EOF /]
		OUTSTR[ASCIZ/INPUT ERROR!
/]
		EXIT 1,
		MOVSI A,400001
		POPJ P,]
	ILDB A,DATHD+1
	POPJ P,
;INPUT LOOP, PUT LINES IN TABLES
MAIN:	MOVSI T,400000
	MOVEM T,LRGX
	MOVEM T,LRGY
	HRLOI T,377777
	MOVEM T,SMLX
	MOVEM T,SMLY
	PUSHJ P,DATIN
	SKIPLE A		;LESS THAN OR EQUAL IS LOSER
	CAILE A,MAXVER		;IS IT VALID VERSION #?
	TDZA T,T		;NO
	MOVE T,A		;YES, MAKE A ZERO (OLD FORMAT)
	MOVEM T,PVER		;SET PLOT VERSION #
	SKIPE T		;ALREADY HAVE FIRST WORD IF VERSION 0
	PUSHJ P,DATIN
	HLRZ T,A
	CAIE T,400001
	JRST MAINLP
	SETZM LRGX
	SETZM LRGY
	SETZM SMLX
	SETZM SMLY
	POPJ P,

MAINLP:	HLRZ T,A
	CAIN T,400001		;END OF FILE?
	JRST [	HLRES LRGX
		HLRES SMLX
		POPJ P,]
	TLNE A,1	;TEXT?
	JRST INTXT	;YES, GET IT IN
	TDZ A,[(1)1]
MD,<	SKIPN PVER
	PUSHJ P,XYIFIX
>;MD
	MOVE T,A
	PUSHJ P,PUT1	;PUT X,Y IN TABLE 1
	MOVE T,T3P	;GET TABLE 3 POINTER (POINT TO START OF LINE)
	HRLI T,		;0 MEANS START OF LINE
	PUSHJ P,PUT2	;PUT POINTER IN TABLE 2
INLLOP:	MOVE T,A
	PUSHJ P,SCHECK	;CHECK MAX'S, CLOBBERS LHW OF A
	PUSHJ P,PUT3	;PUT IN TABLE 3
	PUSHJ P,DATIN	;GET NEXT THING
	TRZN A,1	;STILL IN THIS LINE?
	JRST INLDON	;NO, FINISH UP
	TDZ A,[(1)1]	;YES, CLEAR EXTRA BITS
MD,<	SKIPN PVER
	PUSHJ P,XYIFIX
>;MD
	JRST INLLOP

INLDON:	PUSHJ P,PUT1	;PUT LAST X,Y IN TABLE 1
	MOVE T,T3P	;GET POINTER TO IT IN...
	SUBI T,1	;TABLE 3
	HRLI T,1	;1 MEANS END OF LINE
	PUSHJ P,PUT2	;PUT POINTER IN TABLE 2
	JRST MAINLP

MD,<
XYIFIX:	LSH A,3
	TLZ A,7
	POPJ P,
>;MD
;PUT TEXT INTO TABLES, SCHECK
INTXT:	TDZ A,[(1)1]
MD,<	SKIPN PVER
	PUSHJ P,XYIFIX
>;MD
	MOVE T,A	;GET X,Y OF TEXT
	MOVE B,A	;SAVE IN B ALSO
	PUSHJ P,SCHECK
	PUSHJ P,PUT1	;PUT IT IN TABLE 1
	MOVE T,T3P	;GET POINTER TO TABLE 3
	HRLI T,2	;2 MEANS TEXT
	PUSHJ P,PUT2	;PUT POINTER IN TABLE 2
	PUSHJ P,DATIN
	MOVE T,A
	PUSHJ P,PUT3	;STORE SIZE (OR WHATEVER) AWAY
	HLRZ T,A
	JUMPN T,ISNTXT	;TEXT?
MPC,<	TLNE FLAG,TFLUSH		;SKIP ALL TEXT?
	JRST SKPTX1			;YES
	TRZE A,16
	OUTSTR[ASCIZ/ODD CHAR SIZE, I EVENED IT!
/]
	MOVE T,A
	ANDI T,377776
	LSH T,-4
	CAILE T,4	;ALLOW HIM TO USE OUR SPECIAL SIZE
	JRST [	OUTSTR[ASCIZ/CHAR SIZE TO LARGE, WILL USE 4!
/]
		MOVEI T,4
		DPB T,[POINT 13,A,31]
		JRST .+1]
	SKIPLE MTAB(T)
	JRST NSKPTX
	SETOM MTAB(T)	;NOTE THAT WE FLUSHED SOME
SKPTX1:	SOS T1P
	SOS T2P
	SOS T3P
SKPTXT:	PUSHJ P,DATIN
	TRZE A,1
	JRST SKPTXT
	JRST MAINLP

NSKPTX:	SETOM ANYTXT		;NOTE THAT WE FOUND SOME TEXT
>;MPC
	PUSH P,A
	PUSH P,B	;SAVE INITIAL X,Y
	MOVNI T,2	;MAKE BELIEVE LAST WORD FULL!
	SETZ B,		;NO WORDS YET!
TXTIN:	PUSHJ P,DATIN
	TRZN A,1	;END?
	SOJA B,TXTFIX	;YES
	MOVE T,A
	PUSHJ P,PUT3
	AOJA B,TXTIN	;COUNT 1 WORD AND LOOP

TXTFIX:	MOVE A,T
	TRNN A,376	;LAST WORD END IN 0?
	JRST TXTFX1	;YES
	SETZ T,		;NO, PUT 0
	PUSHJ P,PUT3	;IN TABLE 3
TXTFX1:	MOVE T,T3P
	ADD T,[2,,-1]	;3,,T3 POINTER
	PUSHJ P,PUT2	;TO TABLE 2
	IMULI B,5	;COUNT 5 CHARS PER WORD READ
	JUMPE A,TXTFX2	;0 WORD?
TXTFX3:	ADDI B,1	;NO, COUNT ANOTHER CHAR
	LSH A,7		;SHIFT THAT CHAR OUT
	JUMPN A,TXTFX3	;LOOP TILL 0
TXTFX2:	POP P,T		;GET BACK INITIAL X,Y
	POP P,TTT	;GET BACK CHAR SIZE
MD,<	MOVE TT,TTT	;GET COPY OF SIZE
	ANDI TT,377777
	IMUL B,TT	;MULT BY APPROPRIATE CONSTANT
	IMULI B,CWIDTH
	ASH B,-1
	IMULI TT,CHGHT	;NOW GET HEIGHT OF A LINE
	ASH TT,-1
	TRNE TTT,400000	;VERT?
	MOVN TT,TT	;YES, GOES OTHER WAY
	HRL B,TT	;PUT IN Y PART
	TRNN TT,400000	;VERT?
	MOVS B,B	;NO
>;MD
MPC,<	TRNN TTT,400000	;VERT?
	TLOA B,1	;NO, POS TO LEFT HALF
	TLOA B,-1	;YES, NEG TO LEFT HALF
	MOVS B,B	;SWAP FOR HORZ TEXT
	MOVE TT,TTT	;GET COPY OF SIZE
	ANDI TT,377777
	LSH TT,-4
	IMUL B,MTAB(TT)	;MULT BY APPROPRIATE CONSTANT
	UNSCAL(B)	;CLOBBERS C
>;MPC
	ADD B,T		;ADD INITIAL X,Y
	TLZ B,1
	MOVE A,B
	PUSHJ P,SCHECK	;CHECK OTHER CORNER OF BOX
	TRNE TTT,400000
	JRST [	HRR T,B
		JRST .+2]
	HLL T,B
	PUSHJ P,PUT1	;STORE END OF TEXT IN TABLE 1
	LDB A,DATHD+1
	JRST MAINLP

ISNTXT:
MPC,<	HRRZ T,A
	LSH T,-1
	CAMLE T,BIGPAD	;BIGGEST PAD NUMBER?
	MOVEM T,BIGPAD	;NO, SAVE AS BIGGEST SO FAR
>;MPC
	MOVE T,T2P
	MOVEI TT,4
	HRLM TT,-1(T)	;CHANGE CODE
	PUSHJ P,DATIN
	JRST MAINLP	;NEXT WHAT EVER

SCHECK:	CAMGE A,SMLX
	MOVEM A,SMLX
	CAMLE A,LRGX
	MOVEM A,LRGX
	HRRES A
	CAMGE A,SMLY
	MOVEM A,SMLY
	CAMLE A,LRGY
	MOVEM A,LRGY
	POPJ P,
;TABLE SUBRS
PUT1:	MOVEM T,@T1P
	AOS TT,T1P	;GET POINTER & INCREMENT
	CAMG TT,.JBREL	;OVERFLOW OF TABLE?
	POPJ P,		;NO
	JRST GETCOR

PUT2:	MOVEM T,@T2P	;DEPOSIT WORD
	AOS TT,T2P	;GET POINTER AND INCREMENT
	CAMGE TT,T1S	;OVERFLOW OF TABLE?
	POPJ P,		;NO
	MOVE TT,T1S	;GET TABLE 1 START POINTER
	HRLS TT
	ADDI TT,2000
	HRRZM TT,T1S
	PUSHJ P,DOBLT	;MOVE TABLE 1 DOWN
	MOVEI TT,2000
	ADDM TT,T1P	;UPDATE TABLE 1 POINTER
	POPJ P,

PUT3:	MOVEM T,@T3P	;DEPOSIT WORD
	AOS TT,T3P	;GET AND INCREMENT POINTER
	CAMGE TT,T2S	;TABLE OVERFLOW?
	POPJ P,		;NO
	MOVE TT,T2S
	HRLS TT
	ADDI TT,2000
	HRRZM TT,T2S
	PUSHJ P,DBLT
	MOVEI TT,2000
	ADDM TT,T2P
	ADDM TT,T1P
	ADDM TT,T1S
	POPJ P,

DOBLT:	PUSHJ P,GETCOR
	MOVE TTT,.JBREL
DOBLOP:	CAIGE TTT,2000(TT);MORE THAT 1K TO BLT?
	JRST JUSTDO	;NO
	PUSH P,TT
	MOVE TT,TTT
	SUBI TT,3777
	HRLS TT
	ADDI TT,2000
	BLT TT,(TTT)
	SUBI TTT,2000
	POP P,TT
	JRST DOBLOP
JUSTDO:	BLT TT,(TTT)
	POPJ P,

GETCOR:	MOVE TTT,.JBREL
	ADDI TTT,2000
	CORE TTT,
	CAIA
	POPJ P,
	PUSHJ P,NOCORE
	JRST GETCOR

NOCORE:	OUTSTR[ASCIZ/NO CORE AVAILABLE, CONTINUE TO TRY AGAIN!
/]
	EXIT 1,
	POPJ P,
;FIND CLOSEST
CLFND:	SKIPN A,DRAWL
	POPJ P,			;END
	HRRZ T,(A)
	MOVEM T,DRAWL
	MOVE B,A
	HLRZ A,(A)
	ADD A,T2S
	FSTRET(B)
	POPJ P,
;SORT TABLES T1 AND T2 INTO LIST DRAWL
SORT:	MOVE	I,T1S
	TLO	I,I		;INDEX BY I
	MOVEM	I,T1SI		;INITIALIZE
	SUB	I,T1P
	HRLZ	I,I
	MOVEM	I,LOOPY
	JUMPE	I,[	SETZM	DRAWL	;EMPTY LIST
			POPJ	P,]
	HLRE	E,@T1S
	MOVE	G,E
	HRRE	F,@T1S
	MOVE	H,F
MAMI:	HLRE	B,@T1SI		;FIND MIN, MAX X,Y
	HRRE	C,@T1SI
	CAML	E,B
	MOVE	E,B
	CAMG	G,B
	MOVE	G,B
	CAML	F,C
	MOVE	F,C
	CAMG	H,C
	MOVE	H,C
	AOBJN	I,MAMI		;SAVE THEM
	MOVEM	E,MINX
	MOVEM	F,MINY
	MOVEM	G,MAXX
	MOVEM	H,MAXY
	SUB	G,E
	ASH	G,-TEXP		;CALCULATE MAPPING 
	ADDI	G,1		;CONSTANTS
	MOVEM	G,DIVX
	SUB	H,F
	ASH	H,-TEXP
	ADDI	H,1
	MOVEM	H,DIVY
	MOVE	D,[XWD TOPS,TOPS+1] ;CLEAR MAP
	SETZM	TOPS
	BLT	D,TOPS+TSQR-1
	MOVE	I,T2S
	TLO	I,I
	MOVEM	I,T2SI
	MOVE	I,LOOPY
PUSHR:
MPC,<
	HLRZ D,DOTXT		;PICKUP INDEX OF WHAT WE SHOULD DO
	HLRZ B,@T2SI
	XCT (D)1+[	CAIN B,3	;EVERY THING BUT END TEXT
			CAILE B,1	;0
			CAILE B,1	;1
			CAIE B,2	;2
			JFCL		;3
			PUSHJ P,[CAIE B,4
				POPJ P,
				HRRZ B,@T2SI
				HRRZ B,(B)
				LSH B,-1	;SHIFT IT!
				TLO B,4
				CAMN B,DOTXT	;SAME PAD #?
				AOS (P)
				POPJ P,]];4
>;MPC
MD,<
	HLRZ B,@T2SI
	CAIN B,3			;DON'T LOOK AT END OF TEXT
>;MD
	JRST SKIPIT
	HLRE	B,@T1SI		;PUT ALL POINTS
	SUB	B,E		;INTO THE MAP
	IDIV	B,G
	HRRE	C,@T1SI
	SUB	C,F
	IDIV	C,H
	LSH	C,44-TEXP
	LSHC	B,TEXP
	MOVE	C,TOPS(B)
	HRL	C,I
	GETFS	D
	MOVEM	C,(D)
	MOVEM	D,TOPS(B)
SKIPIT:	AOBJN	I,PUSHR
	SETZM	DRAWL
	HLRE	F,CURSE		;GET OUR INITIAL POS.
	HRRE	G,CURSE
	CAMGE	F,MINX		;NOW GENERATE DRAWING LIST
	MOVE	F,MINX
	CAMLE	F,MAXX
	MOVE	F,MAXX
	CAMGE	G,MINY
	MOVE	G,MINY
	CAMLE	G,MAXY
	MOVE	G,MAXY
	MOVEI	E,DRAWL
NEWPNT:	MOVEM	F,CURX
	MOVEM	G,CURY
	SUB	F,MINX
	IDIV	F,DIVX
	MOVE	B,F
	MOVE	G,CURY
	SUB	G,MINY
	IDIV	G,DIVY
	MOVE	C,G
	LSH	G,44-TEXP
	LSHC	F,TEXP
	MOVEI	H,TSQR*4
	MOVEI	I,0
TRYUM:	MOVEI	G,TOPS(F)	;SPIRAL SCAN IF GRID POINT
	SKIPE	(G)		;WAS EMPTY
	JRST	CONTIN
MT1:	ADDI	I,1
	MOVE	D,I
LP1:	SOJLE	H,DONEM
	ADDI	B,1
	ADDI	F,TSIZ
	TRNN	B,-TSIZ
	TRNE	C,-TSIZ
	JRST	NT1
	MOVEI	G,TOPS(F)
	SKIPE	(G)
	JRST	CONTIN
NT1:	SOJG	D,LP1
	MOVE	D,I
LP2:	SOJLE	H,DONEM
	ADDI	C,1
	ADDI	F,1
	TRNN	B,-TSIZ
	TRNE	C,-TSIZ
	JRST	NT2
	MOVEI	G,TOPS(F)
	SKIPE	(G)
	JRST	CONTIN
NT2:	SOJG	D,LP2
	ADDI	I,1
	MOVE	D,I
LP3:	SOJLE	H,DONEM
	SUBI	B,1
	SUBI	F,TSIZ
	TRNN	B,-TSIZ
	TRNE	C,-TSIZ
	JRST	NT3
	MOVEI	G,TOPS(F)
	SKIPE	(G)
	JRST	CONTIN
NT3:	SOJG	D,LP3
	MOVE	D,I
LP4:	SOJLE	H,DONEM
	SUBI	C,1
	SUBI	F,1
	TRNN	B,-TSIZ
	TRNE	C,-TSIZ
	JRST	NT4
	MOVEI	G,TOPS(F)
	SKIPE	(G)
	JRST	CONTIN
NT4:	SOJG	D,LP4
	JRST	MT1
CONTIN:	HRLZI	I,200000	;INFINITY
	MOVEM	I,VALBST	;FIND CLOSEST
FINDR:	MOVE	H,G		;POINT IN THIS
	HRRZ	G,(G)
	HLRZ	I,(G)
	HLRE	B,@T1SI
	SUB	B,CURX
	IMUL	B,B
	HRRE	C,@T1SI
	SUB	C,CURY
	IMUL	C,C
	ADD	B,C
	CAML	B,VALBST	;THIS PNT BETTER?
	JRST	NXT
	MOVEM	H,POSBST	;IF S, RECORD IT
	MOVEM	B,VALBST
NXT:	HRRZ	I,(G)
	JUMPN	I,FINDR		;GO BAK IF NOT FINSHD
PUTIN:	MOVE	G,POSBST	;SET UP BEST POINT
	MOVE	H,(G)		;FOR DRAWING
	HRRZ	D,(H)
	HRRM	D,(G)
	HLRM	D,(H)
	HRRM	H,(E)
	MOVE	E,H
	HLRZ	I,(H)
	HLRZ	D,@T2SI		;WHAT TYPE OF 'POINT'
	CAIN	D,4		;A REAL ONE ?
	JRST	SETNEW
	JUMPN	D,L1		;BEGINING OF A LINE?
	ADDI	I,1		;IF SO, REMOVE THE
OUTOUT:	HLRE	B,@T1SI		;OTHER END OF IT
	SUB	B,MINX
	IDIV	B,DIVX
	HRRE	C,@T1SI
	SUB	C,MINY
	IDIV	C,DIVY
	LSH	C,44-TEXP
	LSHC	B,TEXP
	MOVEI	G,TOPS(B)
NTR:	MOVE	H,G
	MOVE	G,(G)
	HLRZ	D,(G)
	CAIE	I,(D)
	JRST	NTR
	MOVE	D,(G)
	HRRM	D,(H)
	FSTRET	G
	JRST	SETNEW
L1:	CAIE	D,1		;END OF LINE?
	JRST	L2
	SUBI	I,1
	JRST	OUTOUT
L2:	ADDI	I,1
SETNEW:	HLRE	F,@T1SI		;GET READY FOR
	HRRE	G,@T1SI		;NEXT POINT
	JRST	NEWPNT
DONEM:	POPJ P,
;SQRT:	FINDS THE SQUARE ROOT OF THE INTEGER IN T.  USES TT AND TTT
SQRT:	JFFO T,.+2	;FIND THE HIGH ORDER BIT
	POPJ P,		;ZERO?
	SUBI TT,=37
	MOVN TT,TT
	LSH TT,-1
	MOVEI TTT,1
	LSH TTT,-1(TT)	;MAKE WORD WITH HALF AS MANY LOW ORDER BITS
	TRO TFLG	;TURN ON TEMP (COUNT) FLAG
SLOP1:	MOVE TT,TTT	;GET APROXIMATE SQRT
	IDIVM T,TT	;DIVIDE IT INTO THE SQUARE
	ADD TT,TTT	;ADD APROX.
	ASH TT,-1	;DIVIDE BY 2. THIS IS THE NEW APPROX.
	MOVE TTT,TT	;GET APPROX.
	IDIVM T,TTT	;DIVIDE IT INTO THE SQUARE
	ADD TTT,TT	;ADD APPROX.
	ASH TTT,-1	;DIVIDE BY 2. THIS IS THE NEW APPROX.
	TRZE TFLG	;GONE  THROUGH TWICE?
	JRST SLOP1	;NO
	MOVE T,TTT
	POPJ P,
;PRINT CORESIZE
PCORE:	MOVE T,.JBREL
	SUB T,.JBFF
	LSH T,-12
	PUSHJ P,DECOUT
	TLNN FLAG,QUICK
	OUTSTR[ASCIZ/ K CORE
/]
	TLNE FLAG,QUICK
	OUTSTR[ASCIZ/ K
/]
	POPJ P,
;MAIN LOOP, PLOT LINES, TEXT, ETC.
PLOP:
NOSPLIT,<
NODEC,<	SOSN RSTCNT	;TIME TO SAVE YET?
	PUSHJ P,SAVE
>;NODEC
>;NOSPLIT
	PUSHJ P,CLFND	;FIND CLOSEST THING TO WHERE WE ARE
	JUMPE A,OUTDON	;DONE?
MPC,<
	PUSHJ P,RETSEL	;YES, SETUP RETICLE
>;MPC
	MOVE B,A	;CALC TABLE 2 POINTER...
	SUB A,T2S
	ADD A,T1S	;......
	HRRZ C,(B)	;GET TABLE 3 POINTER
	HLRZ D,(B)	;GET TYPE BITS
	JRST @(D)[OUTLS
		OUTLE
		OUTTXT
		.	;THIS IS AN ERROR
		OUTTXT]
MPC,<
OUTDON:
	HLRZ T,DOTXT
	XCT FINTAB(T)

FINTAB:	JRST OUTDN1
	HALT TDONE
	JRST TDONE
	HALT PDONE
	JRST PDONE

TDONE:	SETZM DOTXT
	TRNN FLAG,TRWDRL	;JUST DRILL PLOT?
	JRST PLOP0		;LOOP TO RETICLE SELECT
	JRST OUTDN1

PDONE:	SOS T,DOTXT
	TLNE T,4
	JRST [	TRNN FLAG,TRWDRL
		JRST [	TRNE T,-1
			JRST PLOP0
			TRNN FLAG,DOTAPE
			JRST PDONE
			MOVEI T,DONUT	;PBASE MUST BE DONUT PAD FOR DRILL PLOT!
			MOVEM T,LSTRET	;INHIBIT RETICLE SELECT
			JRST PLOP0]
		TRNE T,-1
		JRST PDONE
		JRST PLOP0]
	TRNN FLAG,DOTAPE
	JRST PDONE1
	OUTSTR[ASCIZ/DRILL TAPE FILE COMPLETE, BUT MUST BE PROCESSED BY TD!
/]
	RELEASE TAP,		;CLOSE TAPE CHANNEL
	TRZ FLAG,DOTAPE		;MAKE SURE IT'S DONE
PDONE1:	SKIPN ANYTXT
	JRST TDONE		;TEXT DONE INSTANTLY IF NOT DOING IT
	MOVSI T,2
	MOVEM T,DOTXT
	JRST PLOP0

OUTDN1:	PUSHJ P,FORCE		;FINISH CURRENT STUFF AND RAISE PEN
	JRST CRDCHK
>;MPC
;LINES
OUTLS:	HRRZ E,1(B)	;GET POINTER TO END OF LINE
	MOVEI TTT,1	;INCREMENT
	JRST DOLINE
OUTLE:	HRRZ E,-1(B)	;GET POINTER TO START OF LINE
	MOVNI TTT,1	;INCREMENT
DOLINE:	MOVE T,(C)	;GET X,Y
	CAMN T,CURSE	;ARE WE THERE?
	TRNN FLAG,IKNOW	;DO WE REALLY KNOW WHERE WE ARE?
	CAIA		;NO
	JRST WETHER	;YES
	PUSHJ P,FIXXY	;NO, GET X AND Y
	PUSH P,TTT
	TRNE FLAG,FR80
	PUSHJ P,FRLNS	;INVISIBLE
MPC,<	TRNE FLAG,DOMAG	;DO MAG TAPE?
	PUSHJ P,MAGLNS	;YES, START LINE
>;MPC
	POP P,TTT
	TRNN FLAG,%DOPLT
	JRST WETHER
	JSA 16,PLOT	;MOVE TO STARTING POSITION
	JUMP X
	JUMP Y
	JUMP [3]	;PEN UP
WETHER:	ADD C,TTT	;GO TO NEXT LINE
	MOVE T,(C)	;GET X,Y
	PUSHJ P,FIXXY	;GET X AND Y
	PUSH P,TTT
	TRNE FLAG,FR80
	PUSHJ P,FRLIN
MPC,<	TRNE FLAG,DOMAG
	PUSHJ P,MAGLIN
>;MPC
	POP P,TTT
	TRNN FLAG,%DOPLT
	JRST NOPLT1
	JSA 16,PLOT	;PLOT IT
	JUMP X
	JUMP Y
	JUMP [2]	;PEN DOWN
NOPLT1:	CAME C,E	;DONE?
	JRST WETHER	;NO
	MOVE T,(C)	;YES, GET LAST X,Y
	MOVEM T,CURSE	;DEPOSIT AS CURRENT X,Y
	TRO FLAG,IKNOW	;NOW WE KNOW WHERE WE ARE
	JRST PLOP	;LOOP
;TEXT
OUTTXT:	HLRZ T,(C)	;GET CODE
	LSH T,-1
	CAIL T,TDISLN
	JRST [	OUTSTR[ASCIZ/ILLEGAL SPECIAL TEXT INDEX VALUE.
TYPE CONTINUE TO GO ON SKIPPING IT.
/]
		EXIT 1,
		JRST PLOP]
	XCT TDIS(T)
	MOVE T,(A)	;GET X,Y
	PUSHJ P,FIXXY	;GET X AND Y
	MOVE T,(C)	;GET SIZE
	LSH T,-1
	SETZM ANGLE	;ASSUME HORZ
	TRZE T,200000	;VERT MAYBE?
	AOS ANGLE	;YES
MPC,<	LSH T,-3
	MOVEM T,CSIZ
	MOVE T,MTAB(T)	;GET HEIGHT (SPACING)
IFN CWIDTH-10,<
	LSH T,3		;CONVERT TO CORRECT THING FOR SYMBOL ROUTINE
	IDIVI T,CWIDTH
>;IFN CWIDTH-10
>;MPC
MD,<	IMUL T,NSCALE	;	"	>
	MOVEM T,CSIZZ
;HERE WE ATTEMPT TO FUDGE TEXT INTO THE CENTER OF A 16 X 8 GRID
MD,<	SKIPN ANGLE	;VERT?
	JRST FUDGEH	;NO, FUDGE FOR HORZ.
	MOVN TT,T
	IMULI TT,BASLIN	;FUDGE TO BASELINE
	ASH TT,-3
	ADDM TT,X
	ASH T,-3
	ADDM T,Y	;+ 1 Y INC * CSCALE
	JRST FUDGED

FUDGEH:	MOVE TT,T
	IMULI TT,BASLIN
	ASH TT,-3
	ADDM TT,Y
	ASH T,-3
	ADDM T,X	;+ 1 X INC * CSCALE
FUDGED:
>;MD
	ADDI C,1
	HRRM C,TTPNT	;DEPOSIT TEXT POINTER
	MOVEI TT,FRTXT1	;POINTER TO TEXT WE ARE GOING TO DO
	TRNE FLAG,FR80
	PUSHJ P,FRTXT
MPC,<	TRNE FLAG,DOMAG
	PUSHJ P,MAGTXT
>;MPC
	TRNN FLAG,%DOPLT
	JRST TXTDN1
	JSA 16,SYMBOL	;PLOT THE TEXT
FRTXT1:	JUMP X
	JUMP Y
	JUMP CSIZZ	;SIZE
	JUMP ANGLE
TTPNT:	JUMP 0		;TEXT POINTER
	JUMP [XWD 5,5]	;TYPE (UNTIL NULL)
NOSPLIT,<
MPC,<	JSA 16,WHERE	;GET CURRENT POS
	JUMP X
	JUMP Y
	MOVE T,CSIZZ	;GET WIDTH IN PLOTTER STEPS (SIZE)
	ASH T,1		;MAKE IT HEIGHT
	SKIPE ANGLE	;VERT?
	JRST [	MOVN T,T
		ADDM T,X
		JRST .+2]
	ADDM T,Y
	PUSHJ P,UNFIX
	PUSHJ P,FIXXY	;ALL THIS JUST TO CALC MAX AND MIN
>;MPC
>;NOSPLIT
TXTDN1:	MOVE T,1(A)	;APPROX END OF TEXT
	MOVEM T,CURSE
	TRZ FLAG,IKNOW	;FLAG THAT WE DON'T KNOW WHERE WE ARE!
	JRST PLOP

PADDN1:	TRZ FLAG,IKNOW
PADDN2:	JRST PLOP	;LOOP

TDIS:	JFCL		;FALL THROUGH FOR TEXT
MD,<	JRST DIAMOND	>
MPC,<	JRST HOLE
	JRST PAD	>
TDISLN__.-TDIS
;FIX X,Y'S
FIXXY:	PUSH P,T
	HLRE TT,T	;GET X
	HRRES T		;GET Y
MPC,<	ASH TT,-1	>
	SCALE(TT)
MPC,<	ADD TT,XOFF	>
MPC,<	ASH T,-1	>
	SCALE(T)
MPC,<	ADD T,YOFF	>
CKMMXY:	MOVEM T,Y
	CAMGE T,SMLY
	MOVEM T,SMLY
	CAMLE T,LRGY
	MOVEM T,LRGY
	MOVEM TT,X
	CAMGE TT,SMLX
	MOVEM TT,SMLX
	CAMLE TT,LRGX
	MOVEM TT,LRGX
	POP P,T
	POPJ P,

CKMXY1:	PUSH P,T
	JRST CKMMXY

UNFIX:	MOVE T,X	;GET X
MPC,<	SUB T,XOFF	>
	UNSCAL(T)		;CLOBBERS TT
MD,<	TRZ T,1		>
MPC,<	ASH T,1		>
	MOVEM T,1(P)		;STUFF AWAY HERE TEMPORARILY
	MOVE T,Y
MPC,<	SUB T,YOFF	>
	UNSCAL(T)		;CLOBBERS TT
MD,<	TRZ T,1		>
MPC,<	ASH T,1		>
	HRL T,1(P)
	POPJ P,
;PAD SIMULATION TABLES
MPC,<
DEFINE XY(X,Y)
<	XWD <X>/5*2,<Y>/5*2	>
RADIX =10
XTAB:	XY	0,-20
	XY	0,20
	XY	0,0
	XY	20,0
	XY	-20,0
XLEN__.-XTAB

BXTAB:	XY	30,30
	XY	-30,-30
	XY	-30,30
	XY	30,-30
BXLEN__.-BXTAB

PADTAB:	
	XY	-5,-25
	XY	-20,-20
	XY	-25,-5
	XY	-25,5
	XY	-20,20
	XY	-5,25
	XY	5,25
	XY	20,20
	XY	25,5
	XY	25,-5
	XY	20,-20
	XY	5,-25
	XY	-5,-25
PADLEN__.-PADTAB

CLRTAB:
	XY	10,-35
	XY	20,-30
	XY	30,-20
	XY	35,-10
	XY	35,10
	XY	30,20
	XY	20,30
	XY	10,35
	XY	-10,35
	XY	-20,30
	XY	-30,20
	XY	-35,10
	XY	-35,-10
	XY	-30,-20
	XY	-20,-30
	XY	-10,-35
	XY	10,-35
CLRLEN__.-CLRTAB

SQRTAB:	XY	25,25
	XY	25,-25
	XY	-25,-25
	XY	-25,25
	XY	25,25
SQRLEN__.-SQRTAB

S120TB:	XY	60,60
	XY	60,-60
	XY	-60,-60
	XY	-60,60
	XY	60,60
S120LN__.-S120TB

S80TB:	XY	40,40
	XY	40,-40
	XY	-40,-40
	XY	-40,40
	XY	40,40
S80LN__.-S80TB

TGTAB:	XY	-20,-90
	XY	-50,-80
	XY	-80,-50
	XY	-90,-20
	XY	-90,20
	XY	-80,50
	XY	-50,80
	XY	-20,90
	XY	20,90
	XY	50,80
	XY	80,50
	XY	90,20
	XY	90,-20
	XY	80,-50
	XY	50,-80
	XY	20,-90
	XY	-20,-90
	XY	-20,-60
	XY	-40,-50
	XY	-50,-40
	XY	-60,-20
	XY	-60,20
	XY	-50,40
	XY	-40,50
	XY	-20,60
	XY	20,60
	XY	40,50
	XY	50,40
	XY	60,20
	XY	60,-20
	XY	50,-40
	XY	40,-50
	XY	20,-60
	XY	-20,-60
	XY	-10,-30
	XY	-30,-10
	XY	-30,10
	XY	-10,30
	XY	10,30
	XY	30,10
	XY	30,-10
	XY	10,-30
	XY	-10,-30
	XY	0,-5
	XY	-5,0
	XY	0,5
	XY	5,0
	XY	0,0
TGLEN__.-TGTAB
RADIX 8
;DO PADS AND DRILL HOLES(PC)
PAD:	HRRZ T,(C)
	LSH T,-1
	ADDI T,DONUT			;MAKE IT RETICLE NUMBER
	MOVEM T,PADNUM
	MOVE T,(A)
	MOVEM T,CURSE
	PUSHJ P,DOPAD
	JRST PADDN1

HOLE:	SETZM PADNUM
	MOVE T,(A)
	MOVEM T,CURSE
	PUSHJ P,DOHOLE
	JRST PADDN1

DOHOLE:	TRNN FLAG,DOTAPE
	JRST QQTAPE
	MOVE T,CURSE
	PUSHJ P,FIXXY
	MOVE T,Y
	IMULI T,5
	MOVE TT,X
	IMULI TT,5
	HRL T,TT
	PUSHJ P,PTAPE		;X,Y OF HOLE TO FILE (IN MILS)
QQTAPE:	TRNN FLAG,TRWDRL	;FAKING UP A DRILL PLOT FOR TRW
	POPJ P,			;NO, ALL DONE
DOPAD:	TRNE FLAG,DOMAG
	PUSHJ P,MAGPAD
	MOVE E,PADNUM
	HRRZ E,RETMAP-1(E)	;DO ANY MAPPING
	CAILE E,MXPLEN		;LEGAL FOR TABLE
	MOVEI E,MXPLEN		;NO, USE LAST ENTRY
	MOVE E,PTAB-1(E)
	MOVEI D,3	;FIRST MOVE INVISIBLE
PUTPAD:	MOVE T,(E)
	ADD T,CURSE
	TLZ T,1
	PUSHJ P,FIXXY
	PUSHJ P,PLOTIT
	MOVEI D,2
	AOBJN E,PUTPAD
	POPJ P,

TARGET:	MOVEI T,TARRET
	MOVEM T,PADNUM		;SAVE RETICLE NUMBER
	JRST DOPAD

PTAB:	XWD -1,[0]		;JUST A POINT
	XWD -1,[0]		;JUST A POINT
	XWD -S120LN,S120TB	;120 MIL BOX
	XWD -S80LN,S80LN	;80 MIL BOX
	XWD -TGLEN,TGTAB	;TARGET
	XWD -XLEN,XTAB		;DRILL PLUS
	XWD -PADLEN,PADTAB	;NORMAL PAD
	XWD -CLRLEN,CLRTAB	;CLEARANCE PAD
	XWD -SQRLEN,SQRTAB	;PIN 1 SQUARE
	XWD -BXLEN,BXTAB	;JUST LOTS OF THESE FOR NOW
MXPLEN__.-PTAB
>
;DO DIAMONDS(D)
MD,<
DIAMOND:MOVE C,(A)
	MOVE T,C
	EXCH C,CURSE
	PUSHJ P,FIXXY
	MOVE E,[XWD -DIALEN,DIATAB]
	MOVEI D,2
	CAMN E,CURSE
	TRNN FLAG,IKNOW		;DO WE REALLY KNOW WHERE WE ARE
	CAIA
	JRST DIAPLT
	TRNE FLAG,FR80
	PUSHJ P,FRLNS
	TRNN FLAG,%DOPLT
	JRST DIAPLT
	JSA 16,PLOT
	JUMP X
	JUMP Y
	JUMP [3]
DIAPLT:	HLRE T,(E)
	ADDM T,X
	HRRE T,(E)
	ADDM T,Y
	PUSHJ P,PLOTIT
	AOBJN E,DIAPLT
	JRST PADDN1

DIATAB:	XWD 3,0
	XWD -3,3
	XWD -3,-3
	XWD 3,-3
	XWD 3,3
	XWD -3,0
DIALEN__.-DIATAB

>;MD
FORCE:
	TRNN FLAG,DSKOUT,<DODSK!>MXGP,<XGP!>0	;IS IT GOING TO XGP OR DSK?
	TRNN FLAG,%DOPLT			;NO, PLOTTING?
	POPJ P,
	CLOSE PCHN,				;FORCE OUT BUFFERS
	WAIT PCHN,				;WAIT FOR IT TO FINISH
	POPJ P,

PLOTIT:	TRNE FLAG,FR80
	PUSHJ P,FRLINS
PLOTIA:	TRNN FLAG,%DOPLT
	POPJ P,
	JSA 16,PLOT
	JUMP X
	JUMP Y
	JUMP D
	POPJ P,
;END, PRINT ACTUAL MAX X,Y'S(PC)
MPC,<
NOCARD:	TRNN FLAG,%DOPLT
	JRST NOPLT8
NOSPLIT,<JSA 16,PLOT
	JUMP [0]
	JUMP [0]
	JUMP [-3]
>;NOSPLIT
NOPLT8:	TRNN FLAG,DOMAG
	JRST ENDPLT
NOGERB,<
NOGERB,<MOVE TT,MAGBUF+2
	CAIG TT,=30
	PUSHJ P,ENDREC
>;NOGERB
	MOVE TT,[POINT 7,[ASCIZ/G57D10END OF PLOT, THANK YOU!*/]]
	PUSHJ P,MAGSTR
>;NOGERB
NOGERB,<MOVE TT,MAGBUF+2
	CAIG TT,=11
	PUSHJ P,ENDREC
	MOVE TT,[POINT 7,[ASCIZ/G01D02*M00********/]]
>;NOGERB
GERB,<	MOVE TT,[POINT 7,[ASCIZ/M00*/]]	>
	PUSHJ P,MAGSTR
	RELEASE TRWCHN,
	PUSHJ P,FINLST		;FINISH LISTING FILE
	RELEASE LST,
>;MPC
ENDPLT:	MOVE T,SMLX
	CAMG T,LRGX
	JRST LSOK
	SETZM SMLX
	SETZM LRGX
	SETZM SMLY
	SETZM LRGY
LSOK:
MPC,<
DEC,<	GETLN T,
	TLNN T,-1
	JRST NOPLT9
>;DEC
	OUTSTR[ASCIZ/ACTUAL MIN X = /]
	MOVE T,SMLX
	CAMLE T,LRGX		;DID WE GET NOTHING?
	JRST [	SETZB T,SMLX
		SETZM LRGX
		JRST .+1]
	IMULI T,5
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/ MAX X = /]
	MOVE T,LRGX
	IMULI T,5
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/ MIN Y = /]
	MOVE T,SMLY
	CAMLE T,LRGY
	JRST [	SETZB T,SMLY
		SETZM LRGY
		JRST .+1]
	IMULI T,5
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/ MAX Y = /]
	MOVE T,LRGY
	IMULI T,5
	PUSHJ P,MILOUT
	OUTSTR[ASCIZ/
/]
DEC,<NOPLT9:>
>;MPC
SPLIT,<	JSA 16,MAXMIN
	JUMP SMLX
	JUMP LRGX
	JUMP SMLY
	JUMP LRGY
	JUMP [STEPSIZE]
>;SPLIT
	TRNE FLAG,%DOPLT
	CLOSE PCHN,		;FORCE OUT PLOTTER CHANNEL
	SKIPN DELNAM		;ANYTHING TO DELETE
	JRST DONTDL		;NO
	MOVE T,DELPPN
	LOOKUP DAT,DELNAM
	JRST [	HRRZ T,DELEXT
		JUMPE T,DONTDL	;DON'T COMPLAIN IF SOMEONE ELSE GOT IT
		GETLN T,
		TLNN T,-1
		JRST DONTDL
DEC,<		OUTSTR[ASCIZ/LOOKUP TO DELETE DPL FILE FAILED.
/]
>;DEC
NODEC,<		OUTSTR[ASCIZ/LOOKUP TO DELETE PLT FILE FAILED.
/]
>;NODEC
		JRST DONTDL]
	MOVEM T,DELPPN
	SETZM DELNAM
	RENAME DAT,DELNAM
	JRST [
DEC,<		OUTSTR[ASCIZ/DELETE OF DPL FILE FAILED.
/]
>;DEC
NODEC,<		OUTSTR[ASCIZ/DELETE OF PLT FILE FAILED.
/]
>;NODEC
		JRST DONTDL]
DONTDL:	TRNN FLAG,FR80
	JRST CHKXGP		;NOTHING ELSE TO DO
	MOVEI T,(<BYTE(4)0(3)7(11)1>)	;END WITH FRAME ADVANCE
	PUSHJ P,FROUT
	RELEASE F80CHN,		;RELEASE FR80 CHANNEL
CHKXGP:
MXGP,<	TRNN FLAG,XGPGO>
	JRST LOOPCK
MXGP,<
SWPXGP:	MOVE 0,XGPNAM
	HLLZ 1,XGPEXT
	TRNE FLAG,XGPSPL
	TRO 1,400000			;TELL X TO SPOOL AS .XGP INSTEAD OF OUTPUTING
	SKIPN 2,XGPPPN
	DSKPPN 2,
MD,<	MOVE 3,SMLX
	MOVE 4,LRGX
	HLRE 5,START
	SUB 3,5
	SUB 4,5
	HRL 3,4
	MOVE 4,SMLY
	MOVE 5,LRGY
	HRRE 6,START
	SUB 4,6
	SUB 5,6
	HRL 4,5
>;MD
MPC,<	HRR 3,SMLX
	HRL 3,LRGX
	HRR 4,SMLY
	HRL 4,LRGY
>;MPC
NOSPLIT,<SKIPE %ROTIT
	JRST [	EXCH 3,4
		MOVN 3,3
		MOVS 3,3
		ADD 3,[1,,0]
		JRST .+1]
>;NOSPLIT
NOCMU,<
	SETO 5,
	GETLIN 5			;GET LINE # IN 5
	MOVEI 6,14
	HRRM 6,SWPMOD			;RUN DETACHED MODE FIRST
	MOVEI 7,DAT
	DEVCHR 7,
	SETZ 10,
	TLNE 7,UDP
	MOVE 10,['UDP1  ']
SWPTRY:	MOVEI 6,SWPBLK
	SWAP 6,
	JUMPN 6,LOOPCK			;LOOP IF STARTED OK
	CLRBFI
	OUTSTR[ASCIZ/FAILED TO START X, TYPE:
Y	TO TRY IT AGAIN
$	(ALTMODE) TO RUN X AS THIS JOB
ANYTHING ELSE TO SKIP RUNNING X!
/]
	INCHRW 7
	CAIE 7,"Y"
	CAIN 7,"y"
	JRST SWPTRY		;TRY AGAIN AS IS
	CAIE 7,ALTMOD		;ALTMODE?
	JRST LOOPCK		;GIVE UP ON IT
	HLLZS SWPMOD		;SWAP MODE NOW
	JRST SWPTRY

SWPBLK:	'SYS   '
	'X     '
SWPMOD:	'DMP   '
	1		;START + 1
	0
	0

>;NOCMU
CMU,<
	EXTERNAL X.STRT
FOR I_0,16
<
	PUSH P,I
>
	PUSHJ P,X.STRT+1
FOR I_16,0,-1
<
	POP P,I
>
>;CMU

>;MXGP

LOOPCK:
DEC,<	GETLN T,
	TLNE T,-1
>;DEC
	OUTSTR[ASCIZ/PLOT DONE!
/]
	TRNE FLAG,IREAD		;DON'T EXIT IF INDIRECT INPUT
	JRST PCLOOP
	SETO T,
	GETLIN T
	AOJN T,PCLOOP		;LOOP BACK IF NOT DETACHED
	EXIT			;SEE US FLUSH
 